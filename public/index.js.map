{"version":3,"file":"index.js","mappings":"mBAagB,SAAAA,EAAeC,EAAmBC,GAC9C,OAAGC,EAAsBF,EAAWC,SAAAA,IAAoBA,IAGrDA,EAAgBE,MACfH,EAAYI,KAAKC,IAAIJ,EAAgBE,IAAKH,IAE3CC,EAAgBI,MACfL,EAAYI,KAAKD,IAAIF,EAAgBI,IAAKL,KANnCA,CASf,CAEgB,SAAAE,EAAsBF,EAAmBC,GACrD,gBAAGA,KAGAD,GAAa,YAAMC,SAAAA,IACpBA,EAAgBE,KAAqBF,EAAgBE,IAAMH,QAAAA,IACxDC,EAAgBI,KAAqBJ,EAAgBI,IAAML,GAKpE,CCrCA,MAAMM,EAAS,gBAAOC,CAAUC,EAAEC,GAAG,OAAO,MAAMD,EAAEE,GAAG,MAAMD,EAAEC,EAAE,CAACC,EAAEH,EAAEG,EAAEF,EAAEE,EAAEC,EAAEJ,EAAEI,EAAEH,EAAEG,IAAI,MAAMJ,EAAEE,GAAG,MAAMD,EAAEC,IAAI,MAAMF,EAAEE,IAAIF,EAAEE,EAAE,GAAG,MAAMD,EAAEC,IAAID,EAAEC,EAAE,IAAI,CAACC,EAAEH,EAAEG,EAAEF,EAAEE,EAAEC,EAAEJ,EAAEI,EAAEH,EAAEG,EAAEF,EAAEF,EAAEE,EAAED,EAAEC,GAAG,CAAC,gBAAOG,CAAUL,EAAEC,GAAG,OAAO,MAAMD,EAAEE,GAAG,MAAMD,EAAEC,EAAE,CAACC,EAAEH,EAAEG,EAAEF,EAAEE,EAAEC,EAAEJ,EAAEI,EAAEH,EAAEG,IAAI,MAAMJ,EAAEE,GAAG,MAAMD,EAAEC,IAAI,MAAMF,EAAEE,IAAIF,EAAEE,EAAE,GAAG,MAAMD,EAAEC,IAAID,EAAEC,EAAE,IAAI,CAACC,EAAEH,EAAEG,EAAEF,EAAEE,EAAEC,EAAEJ,EAAEI,EAAEH,EAAEG,EAAEF,EAAEF,EAAEE,EAAED,EAAEC,GAAG,CAAC,6BAAOI,CAAuBN,EAAEC,GAAG,OAAO,MAAMD,EAAEE,EAAE,CAACC,EAAEH,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,GAAG,CAACE,EAAEH,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,EAAEC,EAAEF,EAAEE,EAAED,EAAE,CAAC,2BAAOM,CAAqBP,EAAEC,GAAG,OAAO,GAAGA,EAAE,CAACE,EAAEH,EAAEG,EAAEC,EAAEJ,EAAEI,GAAG,MAAMJ,EAAEE,EAAE,CAACC,EAAEH,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,GAAG,CAACE,EAAEH,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,EAAEC,EAAEF,EAAEE,EAAED,EAAE,CAAC,gBAAOO,CAAUR,GAAG,OAAO,MAAMA,EAAEE,IAAIF,EAAEE,EAAE,GAAGN,KAAKa,KAAKT,EAAEG,EAAEH,EAAEG,EAAEH,EAAEI,EAAEJ,EAAEI,EAAEJ,EAAEE,EAAEF,EAAEE,EAAE,CAAC,iBAAOQ,CAAWV,GAAG,OAAO,MAAMA,EAAEE,IAAIF,EAAEE,EAAE,GAAG,GAAGS,KAAKH,UAAUR,GAAG,CAACG,EAAEH,EAAEG,EAAEQ,KAAKH,UAAUR,GAAGI,EAAEJ,EAAEI,EAAEO,KAAKH,UAAUR,GAAGE,EAAEF,EAAEE,EAAES,KAAKH,UAAUR,IAAI,CAACG,EAAE,EAAEC,EAAE,EAAEF,EAAE,EAAE,CAAC,iBAAOU,CAAWZ,EAAEC,GAAG,OAAO,MAAMD,EAAEE,GAAG,MAAMD,EAAEC,EAAEF,EAAEG,EAAEF,EAAEE,EAAEH,EAAEI,EAAEH,EAAEG,GAAG,MAAMJ,EAAEE,GAAG,MAAMD,EAAEC,IAAI,MAAMF,EAAEE,IAAIF,EAAEE,EAAE,GAAG,MAAMD,EAAEC,IAAID,EAAEC,EAAE,IAAIF,EAAEG,EAAEF,EAAEE,EAAEH,EAAEI,EAAEH,EAAEG,EAAEJ,EAAEE,EAAED,EAAEC,EAAE,CAAC,mBAAOW,CAAab,EAAEC,GAAG,OAAO,MAAMD,EAAEE,GAAG,MAAMD,EAAEC,IAAI,MAAMF,EAAEE,IAAIF,EAAEE,EAAE,GAAG,MAAMD,EAAEC,IAAID,EAAEC,EAAE,IAAI,CAACC,EAAEH,EAAEI,EAAEH,EAAEC,EAAEF,EAAEE,EAAED,EAAEG,EAAEA,EAAEJ,EAAEE,EAAED,EAAEE,EAAEH,EAAEG,EAAEF,EAAEC,EAAEA,EAAEF,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,EAAEE,EAAE,CAAC,wBAAOW,CAAkBd,EAAEC,GAAG,OAAOU,KAAKD,WAAWC,KAAKN,UAAUJ,EAAED,GAAG,CAAC,kBAAOe,CAAYC,EAAMC,GAAO,MAAM,CAACd,EAAEa,EAAMb,EAAEP,KAAKsB,IAAID,GAAOD,EAAMZ,EAAER,KAAKuB,IAAIF,GAAOb,EAAEY,EAAMb,EAAEP,KAAKuB,IAAIF,GAAOD,EAAMZ,EAAER,KAAKsB,IAAID,GAAO,CAAC,wBAAOG,CAAkBJ,EAAMK,GAAgC,MAAM,CAAClB,EAAEa,EAAMb,EAAEP,KAAKsB,IAAIG,GAAgCL,EAAMZ,EAAER,KAAKuB,IAAIE,GAAgCjB,GAAGY,EAAMb,EAAEP,KAAKuB,IAAIE,GAAgCL,EAAMZ,EAAER,KAAKsB,IAAIG,GAAgC,CAAC,mBAAOC,CAAatB,EAAEC,GAAG,OAAOL,KAAK2B,MAAMvB,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,EAAEE,EAAEH,EAAEG,EAAEF,EAAEE,EAAEH,EAAEI,EAAEH,EAAEG,EAAE,CAAC,8BAAOoB,CAAwBR,EAAMS,EAAOR,GAAO,IAAIS,EAASf,KAAKI,YAAYJ,KAAKN,UAAUW,EAAMS,GAAQR,GAAO,OAAON,KAAKZ,UAAU2B,EAASD,EAAO,CAAC,4BAAOE,CAAsB3B,EAAEC,GAAG,OAAOU,KAAKH,UAAUG,KAAKN,UAAUL,EAAEC,GAAG,CAAC,gBAAO2B,CAAUZ,GAAO,MAAM,CAACb,EAAEa,EAAMb,EAAEC,GAAGY,EAAMZ,EAAEF,EAAEc,EAAMd,EAAE,CAAC,0BAAO2B,CAAoB7B,EAAEC,EAAE6B,GAAG,OAAO,MAAM9B,EAAEE,GAAG,MAAMD,EAAEC,EAAE,CAACC,EAAEH,EAAEG,GAAGF,EAAEE,EAAEH,EAAEG,GAAG2B,EAAE1B,EAAEJ,EAAEI,GAAGH,EAAEG,EAAEJ,EAAEI,GAAG0B,GAAG,CAAC3B,EAAEH,EAAEG,GAAGF,EAAEE,EAAEH,EAAEG,GAAG2B,EAAE1B,EAAEJ,EAAEI,GAAGH,EAAEG,EAAEJ,EAAEI,GAAG0B,EAAE5B,EAAEF,EAAEE,GAAGD,EAAEC,EAAEF,EAAEE,GAAG4B,EAAE,CAAC,cAAOC,CAAQ/B,EAAEC,GAAG,OAAO,MAAMD,EAAEE,IAAIF,EAAEE,EAAE,GAAG,MAAMD,EAAEC,IAAID,EAAEC,EAAE,GAAGF,EAAEG,GAAGF,EAAEE,GAAGH,EAAEI,GAAGH,EAAEG,GAAGJ,EAAEE,GAAGD,EAAEC,CAAC,CAAC,0BAAO8B,CAAoBC,EAAWC,EAASC,EAAYC,GAAW,MAAMC,GAAWD,EAAUjC,EAAEgC,EAAYhC,IAAI8B,EAAW7B,EAAE+B,EAAY/B,IAAIgC,EAAUhC,EAAE+B,EAAY/B,IAAI6B,EAAW9B,EAAEgC,EAAYhC,GAAGmC,GAAaF,EAAUhC,EAAE+B,EAAY/B,IAAI8B,EAAS/B,EAAE8B,EAAW9B,IAAIiC,EAAUjC,EAAEgC,EAAYhC,IAAI+B,EAAS9B,EAAE6B,EAAW7B,GAAG,GAAG,IAAIkC,EAAY,MAAM,CAACC,YAAW,GAAI,MAAMT,EAAEO,EAAUC,EAAY,OAAOR,GAAG,GAAGA,GAAG,EAAE,CAACS,YAAW,EAAGC,aAAa1C,EAAS+B,oBAAoBI,EAAWC,EAASJ,GAAGW,OAAOX,GAAG,CAACS,YAAW,EAAG,ECGppF,SAAAG,EAAsBC,EAAuBC,EAAsBC,EAAuBC,EAAwBC,EAAyBC,GAKvJ,IAAIC,EAAoB,CAAC9C,EAAG0C,EAAgB,EAAGzC,EAAG0C,EAAiB,GAC/DI,EAAcpD,EAASO,UAAUuC,EAAeK,GAGpD,OAFAC,EAAcpD,EAASQ,uBAAuB4C,EAAa,EAAIH,GAC/DG,EAAcpD,EAASiB,YAAYmC,EAAaF,GACzClD,EAASC,UAAU4C,EAAgBO,EAC9C,CAEgB,SAAAC,EAAmBnC,EAAc6B,EAAuBC,EAAwBM,EAAuBL,EAAyBC,GAC5I,IAAIC,EAAoB,CAAC9C,EAAG0C,EAAgB,EAAGzC,EAAG0C,EAAiB,GAC/DI,EAAcpD,EAASO,UAAUW,EAAOiC,GAG5C,OAFAC,EAAcpD,EAASQ,uBAAuB4C,EAAa,EAAIH,GAC/DG,EAAcpD,EAASiB,YAAYmC,EAAaF,GACzClD,EAASC,UAAUqD,EAAgBF,EAC9C,CCXgB,SAAAG,EAAiBrC,EAAcsC,GAC3C,GAAiBC,MAAdD,EAEC,OAAM,EAEV,IAAIE,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EAcJ,OAZqBJ,MAAlBD,EAAW3D,KAAwC4D,MAApBD,EAAW3D,IAAIQ,GAAkBa,EAAMb,GAAKmD,EAAW3D,IAAIQ,KACzFsD,GAAAA,IAEiBF,MAAlBD,EAAWzD,KAAwC0D,MAApBD,EAAWzD,IAAIM,GAAkBa,EAAMb,GAAKmD,EAAWzD,IAAIM,KACzFqD,GAAAA,IAEiBD,MAAlBD,EAAW3D,KAAwC4D,MAApBD,EAAW3D,IAAIS,GAAkBY,EAAMZ,GAAKkD,EAAW3D,IAAIS,KACzFsD,GAAAA,IAEiBH,MAAlBD,EAAWzD,KAAwC0D,MAApBD,EAAWzD,IAAIO,GAAkBY,EAAMZ,GAAKkD,EAAWzD,IAAIO,KACzFuD,GAAAA,GAEGH,GAAYC,GAAaC,GAAWC,CAC/C,CAgCgB,SAAAC,EAAW5C,EAAcsC,GACrC,GAAGD,EAAiBrC,EAAOsC,IAA6BC,MAAdD,EACtC,OAAOtC,EAEX,IAAI6C,EAAkB,CAAC1D,EAAGa,EAAMb,EAAGC,EAAGY,EAAMZ,GACxC0D,EAAQR,EAAWzD,IAkBvB,OAjBa0D,MAATO,IACcP,MAAXO,EAAM3D,IACL0D,EAAgB1D,EAAIP,KAAKD,IAAIkE,EAAgB1D,EAAG2D,EAAM3D,IAE5CoD,MAAXO,EAAM1D,IACLyD,EAAgBzD,EAAIR,KAAKD,IAAIkE,EAAgBzD,EAAG0D,EAAM1D,KAG9D0D,EAAQR,EAAW3D,IACP4D,MAATO,IACeP,MAAXO,EAAM3D,IACL0D,EAAgB1D,EAAIP,KAAKC,IAAIgE,EAAgB1D,EAAG2D,EAAM3D,IAE5CoD,MAAXO,EAAM1D,IACLyD,EAAgBzD,EAAIR,KAAKC,IAAIgE,EAAgBzD,EAAG0D,EAAM1D,KAGvDyD,CACX,CAEM,SAAUE,EAAmBT,GAC/B,GAAiBC,MAAdD,GAA6CC,MAAlBD,EAAWzD,KAAsC0D,MAAlBD,EAAW3D,KAAwC4D,MAApBD,EAAWzD,IAAIM,GAAsCoD,MAApBD,EAAW3D,IAAIQ,EAG5I,OAAOmD,EAAW3D,IAAIQ,EAAImD,EAAWzD,IAAIM,CAC7C,CAOM,SAAU6D,EAAoBV,GAChC,GAAiBC,MAAdD,GAA6CC,MAAlBD,EAAWzD,KAAsC0D,MAAlBD,EAAW3D,KAAwC4D,MAApBD,EAAWzD,IAAIO,GAAsCmD,MAApBD,EAAW3D,IAAIS,EAG5I,OAAOkD,EAAW3D,IAAIS,EAAIkD,EAAWzD,IAAIO,CAC7C,CAOgB,SAAA6D,EAAyBjD,EAAc6B,EAAuBC,EAAwBQ,EAAoCP,EAAyBC,GAC/J,GAAiBO,MAAdD,EACC,OAAOtC,EAEX,IAAIkD,EAAgBxB,EAAsB1B,EAAO,CAACb,EAAG,EAAGC,EAAG0C,GAAiBD,EAAeC,EAAgBC,EAAiBC,GACxHmB,EAAmBzB,EAAsB1B,EAAO,CAACb,EAAG,EAAGC,EAAG,GAAIyC,EAAeC,EAAgBC,EAAiBC,GAC9GoB,EAAiB1B,EAAsB1B,EAAO,CAACb,EAAG0C,EAAezC,EAAG0C,GAAiBD,EAAeC,EAAgBC,EAAiBC,GACrIqB,EAAoB3B,EAAsB1B,EAAO,CAACb,EAAG0C,EAAezC,EAAG,GAAIyC,EAAeC,EAAgBC,EAAiBC,GAC3HsB,EAAuBV,EAAWM,EAAeZ,GACjDiB,EAAwBX,EAAWQ,EAAgBd,GACnDkB,EAA0BZ,EAAWO,EAAkBb,GACvDmB,EAA2Bb,EAAWS,EAAmBf,GAKzDoB,EAAQ,CAJY5E,EAASO,UAAUiE,EAAsBJ,GACxCpE,EAASO,UAAUkE,EAAuBH,GACxCtE,EAASO,UAAUmE,EAAyBL,GAC3CrE,EAASO,UAAUoE,EAA0BJ,IAErEM,EAAW/E,KAAKgF,IAAIF,EAAM,GAAGvE,GAC7B0E,EAAWjF,KAAKgF,IAAIF,EAAM,GAAGtE,GAC7B0E,EAAQJ,EAAM,GAWlB,OAVAA,EAAMK,SAASC,IACRpF,KAAKgF,IAAII,EAAK7E,GAAKwE,IAClBA,EAAW/E,KAAKgF,IAAII,EAAK7E,GACzB2E,EAAM3E,EAAI6E,EAAK7E,GAEhBP,KAAKgF,IAAII,EAAK5E,GAAKyE,IAClBA,EAAWjF,KAAKgF,IAAII,EAAK5E,GACzB0E,EAAM1E,EAAI4E,EAAK5E,EAClB,IAEEN,EAASC,UAAUiB,EAAO8D,EACrC,CChJgB,SAAAG,EAAcC,EAAkBC,GAC5C,GAAGC,EAAqBF,EAAUC,SAAAA,IAAmBA,EACjD,OAAOD,EAEXA,EAAWG,EAAyBH,GACpC,MAAMI,EAAqBC,EAAUJ,EAAeK,MAAON,GACrDO,EAAmBF,EAAUJ,EAAeO,IAAKR,GACvD,OAAIC,EAAeQ,MAAQL,EAAqB,GAAKG,EAAmB,KAASN,EAAeQ,MAAQL,EAAqB,GAAKG,EAAmB,GAE9I7F,KAAKgF,IAAIU,KAAwB1F,KAAKgF,IAAIa,GAElCN,EAAeS,kBAAoBT,EAAeK,MAAQL,EAAeO,IAE9D9F,KAAKgF,IAAIU,GAAsB1F,KAAKgF,IAAIa,GACvCN,EAAeK,MAAQL,EAAeO,IAE1DR,CACX,CAEgB,SAAAE,EAAqBF,EAAkBC,GACnD,QAAG,IAAAA,EACC,OAAM,EAEV,MAAMG,EAAqBC,EAAUJ,EAAeK,MAAON,GACrDO,EAAmBF,EAAUJ,EAAeO,IAAKR,GACvD,QAAIC,EAAeQ,MAAQL,EAAqB,GAAKG,EAAmB,KAASN,EAAeQ,MAAQL,EAAqB,GAAKG,EAAmB,GAIzJ,CAEM,SAAUJ,EAAyBpE,GAMrC,QAJAA,GAA2B,EAAVrB,KAAKiG,IAGK,EAAVjG,KAAKiG,KAAqB,EAAVjG,KAAKiG,GAE1C,CAEgB,SAAAN,EAAUO,EAAcC,GAEpCD,EAAOT,EAAyBS,GAEhC,IAAIE,GADJD,EAAKV,EAAyBU,IACTD,EASrB,OAPGE,EAAYpG,KAAKiG,KAChBG,IAAyB,EAAVpG,KAAKiG,GAASG,IAG9BA,GAAapG,KAAKiG,KACjBG,GAAwB,EAAVpG,KAAKiG,IAEhBG,CACX,CAAC,MClCqBC,EAIlB,WAAAC,CAAYC,OAAAA,GACRxF,KAAKyF,aAAeD,CACvB,CAGD,eAAIA,CAAYE,GACZ1F,KAAKyF,aAAeC,CACvB,CAED,eAAIF,GACA,OAAOxF,KAAKyF,YACf,CAED,YAAAE,CAAaD,GAET,OADA1F,KAAKyF,aAAeC,EACbA,CACV,CAED,WAAAE,CAAYC,EAAqBC,GAC1B9F,KAAKyF,cACJzF,KAAKyF,aAAaG,YAAYC,EAAQC,EAE7C,CAED,WAAAC,CAAYF,EAAqB1B,GAC1BnE,KAAKyF,cACJzF,KAAKyF,aAAaM,YAAYF,EAAQ1B,EAE7C,EAGC,MAAO6B,UAAuBV,EAGhC,WAAAC,CAAYC,OAAAA,GACRS,MAAMT,EACT,CAEQ,WAAAI,CAAYC,EAAqBC,GACtCD,EAAOK,YAAYJ,EACtB,CAEQ,WAAAC,CAAYF,EAAqBxB,GACtCwB,EAAOK,YAAY/G,EAASC,UAAUyG,EAAOM,SAAU9B,GAC1D,EAGC,MAAO+B,UAAqBd,EAI9B,WAAAC,CAAYC,OAAAA,GACRS,MAAMT,GAHFxF,KAAeqG,iBAAAA,CAItB,CAED,kBAAIC,CAAeA,GACftG,KAAKqG,gBAAkBC,CAC1B,CAED,kBAAIA,GACA,OAAOtG,KAAKqG,eACf,CAED,WAAAT,CAAYC,EAAqBC,GAC7B,IAAIS,EAAatD,EAAW6C,EAAaD,EAAOlD,YAC7C3C,KAAKqG,kBACJE,EAAajD,EAAyBwC,EAAaD,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOlD,WAAYkD,EAAOhH,UAAWgH,EAAOtB,WAEhJ0B,MAAML,YAAYC,EAAQU,EAC7B,CAED,WAAAR,CAAYF,EAAqB1B,GAC7B,IAAIqC,EAAcrH,EAASO,UAAUuD,EAAW9D,EAASC,UAAUyG,EAAOM,SAAUhC,GAAQ0B,EAAOlD,YAAakD,EAAOM,UACpHnG,KAAKqG,kBACJG,EAAcrH,EAASO,UAAU4D,EAAyBnE,EAASC,UAAUyG,EAAOM,SAAUhC,GAAQ0B,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOlD,WAAYkD,EAAOhH,UAAWgH,EAAOtB,UAAWsB,EAAOM,WAErNF,MAAMF,YAAYF,EAAQW,EAC7B,EAIC,MAAOC,UAA2BnB,EAOpC,WAAAC,CAAYC,OAAAA,GACRS,MAAMT,GANFxF,KAAqB0G,uBAAAA,EACrB1G,KAAqB2G,uBAAAA,EACrB3G,KAA6B4G,+BAAAA,EAC7B5G,KAA6B6G,+BAAAA,CAIpC,CAED,wBAAIC,CAAqBA,GACrB9G,KAAK0G,sBAAwBI,CAChC,CAED,wBAAIA,GACA,OAAO9G,KAAK0G,qBACf,CAED,wBAAIK,CAAqBA,GACrB/G,KAAK2G,sBAAwBI,CAChC,CAED,wBAAIA,GACA,OAAO/G,KAAK2G,qBACf,CAED,gCAAIK,CAA6BA,GAC7BhH,KAAK4G,8BAAgCI,CACxC,CAED,gCAAIA,GACA,OAAOhH,KAAK4G,6BACf,CAED,gCAAIK,CAA6BA,GAC7BjH,KAAK6G,8BAAgCI,CACxC,CAED,gCAAIA,GACA,OAAOjH,KAAK6G,6BACf,CAED,mCAAAK,CAAoCrB,EAAqB1B,GACrD,GAAGnE,KAAK0G,uBAAyB1G,KAAK2G,sBAClC,MAAO,CAACnH,EAAG,EAAGC,EAAG,GAErB,GAAGO,KAAK4G,+BAAiC5G,KAAK6G,8BAC1C,MAAO,CAACrH,EAAG,EAAGC,EAAG,GAQrB,GANGO,KAAK0G,wBACJvC,EAAM3E,EAAI,GAEXQ,KAAK2G,wBACJxC,EAAM1E,EAAI,GAEXO,KAAK4G,8BAA8B,CAClC,MAAMO,EAAehI,EAASiB,YAAY,CAACZ,EAAG,EAAGC,EAAG,GAAIoG,EAAOtB,UACzD6C,EAAQjI,EAASc,WAAWkH,EAAahD,GAC/CA,EAAQhF,EAASQ,uBAAuBwH,EAAaC,EACxD,CACD,GAAGpH,KAAK6G,8BAA8B,CAClC,MAAMQ,EAAkBlI,EAASiB,YAAY,CAACZ,EAAG,EAAGC,EAAG,GAAIoG,EAAOtB,UAC5D6C,EAAQjI,EAASc,WAAWoH,EAAgBlD,GAClDA,EAAQhF,EAASQ,uBAAuB0H,EAAgBD,EAC3D,CACD,OAAOjD,CACV,CAEQ,WAAAyB,CAAYC,EAAqBC,GACtC,IAAI3B,EAAQhF,EAASO,UAAUoG,EAAaD,EAAOM,UAEnD,GADAhC,EAAQnE,KAAKkH,oCAAoCrB,EAAQ1B,GACzC,IAAZA,EAAM3E,GAAuB,IAAZ2E,EAAM1E,EACvB,OAEJ,MAAM6H,EAAOnI,EAASC,UAAUyG,EAAOM,SAAUhC,GACjD8B,MAAML,YAAYC,EAAQyB,EAC7B,CAEQ,WAAAvB,CAAYF,EAAqB1B,GACvCA,EAAQnE,KAAKkH,oCAAoCrB,EAAQ1B,GACzD8B,MAAMF,YAAYF,EAAQ1B,EAC5B,EAGC,MAAOoD,UAAejC,EAMxB,gCAAI0B,CAA6BA,GAC7BhH,KAAKwH,mBAAmBR,6BAA+BA,CAC1D,CAED,gCAAIC,CAA6BA,GAC7BjH,KAAKwH,mBAAmBP,6BAA+BA,CAC1D,CAED,wBAAIH,CAAqBA,GACrB9G,KAAKwH,mBAAmBV,qBAAuBA,CAClD,CAED,wBAAIC,CAAqBA,GACrB/G,KAAKwH,mBAAmBT,qBAAuBA,CAClD,CAED,uBAAIU,CAAoBA,GAEpBzH,KAAKwH,mBAAmBV,qBAAuBW,EAC/CzH,KAAKwH,mBAAmBT,qBAAuBU,CAClD,CAED,uBAAIA,GACA,OAAOzH,KAAKwH,mBAAmBV,oBAClC,CAED,wBAAIA,GACA,OAAO9G,KAAKwH,mBAAmBV,oBAClC,CAED,wBAAIC,GACA,OAAO/G,KAAKwH,mBAAmBT,oBAClC,CAED,gCAAIC,GACA,OAAOhH,KAAKwH,mBAAmBR,4BAClC,CAED,gCAAIC,GACA,OAAOjH,KAAKwH,mBAAmBP,4BAClC,CAED,uBAAIS,CAAoBA,GACpB1H,KAAK2H,aAAarB,eAAiBoB,CACtC,CAED,uBAAIA,GACA,OAAO1H,KAAK2H,aAAarB,cAC5B,CAED,WAAAf,GACIU,QACAjG,KAAK4H,YAAc,IAAI5B,EACvBhG,KAAK2H,aAAe,IAAIvB,EACxBpG,KAAKwH,mBAAqB,IAAIf,EAC9BzG,KAAKwH,mBAAmB7B,aAAa3F,KAAK2H,cAAchC,aAAa3F,KAAK4H,aAC1E5H,KAAKwF,YAAcxF,KAAKwH,kBAC3B,QCjPiBK,EAIlB,WAAAtC,CAAYC,OAAAA,GACRxF,KAAKyF,aAAeD,CACvB,CAED,eAAIA,CAAYE,GACZ1F,KAAKyF,aAAeC,CACvB,CAED,eAAIF,GACA,OAAOxF,KAAKyF,YACf,CAED,YAAAE,CAAaD,GAET,OADA1F,KAAKyF,aAAeC,EACbA,CACV,CAED,cAAAoC,CAAejC,EAAqBkC,GAC7B/H,KAAKyF,cACJzF,KAAKyF,aAAaqC,eAAejC,EAAQkC,EAEhD,CAED,cAAAC,CAAenC,EAAqB1B,GAC7BnE,KAAKyF,cACJzF,KAAKyF,aAAauC,eAAenC,EAAQ1B,EAEhD,EAIC,MAAO8D,UAA4BJ,EAErC,WAAAtC,CAAYC,OAAAA,GACRS,OACH,CAED,cAAA6B,CAAejC,EAAqBkC,GAChCA,EAAiBrD,EAAyBqD,GAC1ClC,EAAOqC,YAAYH,EACtB,CAED,cAAAC,CAAenC,EAAqBxB,GAChC,MAAM8D,EAActC,EAAOtB,SACrBwD,EAAiBrD,EAAyByD,EAAc9D,GAC9DA,EAAOO,EAAUuD,EAAaJ,GAC9BlC,EAAOqC,YAAYH,EACtB,EAGC,MAAOK,UAAmCP,EAI5C,WAAAtC,CAAYC,OAAAA,GACRS,MAAMT,GAHFxF,KAAiBqI,mBAAAA,CAIxB,CAED,oBAAIC,GACA,OAAOtI,KAAKqI,iBACf,CAED,oBAAIC,CAAiBA,GACjBtI,KAAKqI,kBAAoBC,CAC5B,CAED,cAAAN,CAAenC,EAAqBxB,GAC7BrE,KAAKqI,mBAGRpC,MAAM+B,eAAenC,EAAQxB,EAChC,CAED,cAAAyD,CAAejC,EAAqBkC,GAC7B/H,KAAKqI,mBAGRpC,MAAM6B,eAAejC,EAAQkC,EAChC,EAGC,MAAOQ,UAA6BV,EAGtC,WAAAtC,CAAYC,OAAAA,GACRS,MAAMT,EACT,CAED,cAAAwC,CAAenC,EAAqBxB,GAChC,MAAM8D,EAActC,EAAOtB,SAC3B,IAAIwD,EAAiBrD,EAAyByD,EAAc9D,GAC5D0D,EAAiBzD,EAAcyD,EAAgBlC,EAAO2C,oBACtDnE,EAAOO,EAAUuD,EAAaJ,GAC9B9B,MAAM+B,eAAenC,EAAQxB,EAChC,CAED,cAAAyD,CAAejC,EAAqBkC,GAEhCA,EAAiBzD,EADjByD,EAAiBrD,EAAyBqD,GACKlC,EAAO2C,oBACtDvC,MAAM6B,eAAejC,EAAQkC,EAChC,EAGC,MAAOU,UAAoBZ,EAM7B,oBAAIS,GACA,OAAOtI,KAAK0I,oBAAoBJ,gBACnC,CAED,oBAAIA,CAAiBA,GACjBtI,KAAK0I,oBAAoBJ,iBAAmBA,CAC/C,CAED,WAAA/C,CAAYC,OAAAA,GACRS,MAAMT,GACNxF,KAAK2I,aAAe,IAAIV,EACxBjI,KAAK4I,cAAgB,IAAIL,EAAqBvI,KAAK2I,cACnD3I,KAAK0I,oBAAsB,IAAIN,EAA2BpI,KAAK4I,cAClE,CAED,cAAAZ,CAAenC,EAAqBxB,GAChCrE,KAAK0I,oBAAoBV,eAAenC,EAAQxB,GAChD4B,MAAM+B,eAAenC,EAAQxB,EAChC,CAED,cAAAyD,CAAejC,EAAqBkC,GAChC/H,KAAK0I,oBAAoBZ,eAAejC,EAAQkC,GAChD9B,MAAM6B,eAAejC,EAAQkC,EAChC,QClIiBc,EAIlB,WAAAtD,CAAYC,OAAAA,GACRxF,KAAKyF,aAAeD,CACvB,CAED,eAAIA,CAAYE,GACZ1F,KAAKyF,aAAeC,CACvB,CAED,eAAIF,GACA,OAAOxF,KAAKyF,YACf,CAED,YAAAE,CAAaD,GAET,OADA1F,KAAKyF,aAAeC,EACbA,CACV,CAED,YAAAoD,CAAajD,EAAqBkD,GAC3B/I,KAAKyF,cACJzF,KAAKyF,aAAaqD,aAAajD,EAAQkD,EAE9C,CAED,YAAAC,CAAanD,EAAqB1B,GAC3BnE,KAAKyF,cACJzF,KAAKyF,aAAauD,aAAanD,EAAQ1B,EAE9C,CAED,cAAA8E,CAAepD,EAAqBT,EAAY8D,GACzClJ,KAAKyF,cACJzF,KAAKyF,aAAawD,eAAepD,EAAQT,EAAI8D,EAEpD,CAED,cAAAC,CAAetD,EAAqB1B,EAAe+E,GAC5ClJ,KAAKyF,cACJzF,KAAKyF,aAAa0D,eAAetD,EAAQ1B,EAAO+E,EAEvD,EAGC,MAAOE,UAAwBP,EAIjC,WAAAtD,CAAY8D,EAAwB7D,OAAAA,GAChCS,MAAMT,GACNxF,KAAKqJ,WAAaA,CACrB,CAED,eAAI7D,CAAYE,GACZ1F,KAAKyF,kBAAAA,CACR,CAED,YAAAqD,CAAajD,EAAqBkD,GAC9BlD,EAAOyD,aAAaP,EACvB,CAED,YAAAC,CAAanD,EAAqBxB,GAC9B,MACM0E,EADelD,EAAOhH,UACMwF,EAClCwB,EAAOyD,aAAaP,EACvB,CAED,cAAAE,CAAepD,EAAqBT,EAAY8D,GAC5C,IAAIK,EAAwB/G,EAAmB0G,EAAIrD,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOM,SAAUN,EAAOhH,UAAWgH,EAAOtB,UAChHsB,EAAOhH,UACjCgH,EAAOyD,aAAalE,GACpB,IAAIoE,EAAyBhH,EAAmB0G,EAAIrD,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOM,SAAUN,EAAOhH,UAAWgH,EAAOtB,UAC3I,MAAMF,EAAOlF,EAASO,UAAU6J,EAAuBC,GACvDxJ,KAAKqJ,WAAWtD,YAAYF,EAAQxB,EACvC,CAED,cAAA8E,CAAetD,EAAqB1B,EAAe+E,GAC/C,IAAIK,EAAwB/G,EAAmB0G,EAAIrD,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOM,SAAUN,EAAOhH,UAAWgH,EAAOtB,UAC1I,MACMwE,EADoBlD,EAAOhH,UACMsF,EACvC0B,EAAOyD,aAAaP,GACpB,IAAIS,EAAyBhH,EAAmB0G,EAAIrD,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOM,SAAUN,EAAOhH,UAAWgH,EAAOtB,UAC3I,MAAMF,EAAOlF,EAASO,UAAU6J,EAAuBC,GACvDxJ,KAAKqJ,WAAWtD,YAAYF,EAAQxB,EACvC,EAGC,MAAOoF,UAAyBZ,EAGlC,WAAAtD,CAAYC,OAAAA,GACRS,MAAMT,EACT,CAED,YAAAsD,CAAajD,EAAqBkD,GAC9BA,EAAanK,EAAemK,EAAYlD,EAAO6D,gBAC/CzD,MAAM6C,aAAajD,EAAQkD,EAC9B,CAED,YAAAC,CAAanD,EAAqBxB,GAC9B,IAAI0E,EAAalD,EAAOhH,UAAYwF,EACpC0E,EAAanK,EAAemK,EAAYlD,EAAO6D,gBAC/CrF,EAAO0E,EAAalD,EAAOhH,UAC3BoH,MAAM+C,aAAanD,EAAQxB,EAC9B,CAED,cAAA4E,CAAepD,EAAqBT,EAAY8D,GAC5C9D,EAAKxG,EAAewG,EAAIS,EAAO6D,gBAC/BzD,MAAMgD,eAAepD,EAAQT,EAAI8D,EACpC,CAED,QAAAS,CAAS9D,EAAqB1B,EAAe+E,GACzC,IAAIH,EAAalD,EAAOhH,UAAYsF,EACpC4E,EAAanK,EAAemK,EAAYlD,EAAO6D,gBAC/CvF,EAAQ4E,EAAalD,EAAOhH,UAC5BoH,MAAMkD,eAAetD,EAAQ1B,EAAO+E,EACvC,EAGC,MAAOU,UAA+Bf,EAIxC,WAAAtD,CAAYC,OAAAA,GACRS,MAAMT,GAHFxF,KAAa6J,eAAAA,CAIpB,CAED,gBAAIC,CAAaA,GACb9J,KAAK6J,cAAgBC,CACxB,CAED,gBAAIA,GACA,OAAO9J,KAAK6J,aACf,CAED,YAAAf,CAAajD,EAAqBkD,GAC3B/I,KAAK6J,eAGR5D,MAAM6C,aAAajD,EAAQkD,EAC9B,CAED,YAAAC,CAAanD,EAAqBxB,GAC3BrE,KAAK6J,eAGR5D,MAAM+C,aAAanD,EAAQxB,EAC9B,CAED,cAAA4E,CAAepD,EAAqBT,EAAY8D,GACzClJ,KAAK6J,eAGR5D,MAAMgD,eAAepD,EAAQT,EAAI8D,EACpC,CAED,cAAAC,CAAetD,EAAqB1B,EAAe+E,GAC5ClJ,KAAK6J,eAGR5D,MAAMkD,eAAetD,EAAQ1B,EAAO+E,EACvC,EAGC,MAAOa,UAAgBlB,EAMzB,WAAAtD,CAAYyE,EAA4BxE,OAAAA,GACpCS,MAAMT,GACNxF,KAAK2I,aAAe,IAAIS,EAAgBY,GACxChK,KAAK4I,cAAgB,IAAIa,EACzBzJ,KAAK0I,oBAAsB,IAAIkB,EAC/B5J,KAAK0I,oBAAoB/C,aAAa3F,KAAK4I,eAAejD,aAAa3F,KAAK2I,cAC5E3I,KAAKyF,aAAezF,KAAK0I,mBAC5B,CAED,gBAAIoB,CAAaG,GACbjK,KAAK0I,oBAAoBoB,aAAeG,CAC3C,CAED,gBAAIH,GACA,OAAO9J,KAAK0I,oBAAoBoB,YACnC,CAED,YAAAhB,CAAajD,EAAqBkD,GAC9B9C,MAAM6C,aAAajD,EAAQkD,EAC9B,CAED,YAAAC,CAAanD,EAAqB1B,GAC9B8B,MAAM+C,aAAanD,EAAQ1B,EAC9B,CAED,cAAAgF,CAAetD,EAAqB1B,EAAe+E,GAC/CjD,MAAMkD,eAAetD,EAAQ1B,EAAO+E,EACvC,CAED,cAAAD,CAAepD,EAAqBT,EAAY8D,GAC5CjD,MAAMgD,eAAepD,EAAQT,EAAI8D,EACpC,EC7GE,SAASgB,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUtD,GAAS,IAAMuD,EAAKL,EAAUM,KAAKxD,GAAQ,CAAG,MAAOyD,GAAKJ,EAAOI,EAAE,CAAK,CAC3F,SAASC,EAAS1D,GAAS,IAAMuD,EAAKL,EAAiB,MAAElD,GAAU,CAAC,MAAOyD,GAAKJ,EAAOI,EAAE,CAAK,CAC9F,SAASF,EAAKI,GAJlB,IAAe3D,EAIa2D,EAAOC,KAAOR,EAAQO,EAAO3D,QAJ1CA,EAIyD2D,EAAO3D,MAJhDA,aAAiBiD,EAAIjD,EAAQ,IAAIiD,GAAE,SAAUG,GAAWA,EAAQpD,EAAO,KAIhB6D,KAAKP,EAAWI,EAAY,CAC9GH,GAAML,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKQ,OACtE,GACA,CAiMkD,mBAApBO,iBAAiCA,gBAAAA,MC3OlDC,EAMT,WAAA7F,GAJQvF,KAAeqL,gBAA0B,GACzCrL,KAAgBsL,iBAA2B,GAC3CtL,KAAkBuL,mBAA6B,EAGtD,CAEK,oBAAAC,CAAqBrH,EAAcsH,GAAAA,OAAAA,EAAAA,UAAAA,OAAAA,GAAAA,YAEjCC,gBAAe,KAAK1L,KAAKqL,gBAAgBjH,SAASuH,IAC9CA,EAAS,CAAEtH,KAAMF,GAASsH,EAAY,GACxC,MAGT,CAEK,gBAAAG,CAAiBC,EAAyBJ,GAAAA,OAAAA,EAAAA,UAAAA,OAAAA,GAAAA,YAC5C,OAAO,IAAIlB,SAAQ,CAACC,EAASC,KACzBzK,KAAKsL,iBAAiBlH,SAASuH,IAC3BA,EAAS,CAAEE,gBAAiBA,GAAmBJ,EAAY,IAE/DjB,GAAS,MAEhB,CAEK,oBAAAsB,CAAqBC,EAAuBN,GAAAA,OAAAA,EAAAA,UAAAA,OAAAA,GAAAA,YAC9C,OAAO,IAAIlB,SAAQ,CAACC,EAASC,KACzBzK,KAAKuL,mBAAmBnH,SAASuH,IAC7BA,EAAS,CAAEI,cAAeA,GAAiBN,EAAY,IAE3DjB,GAAS,MAEhB,CAED,EAAAwB,CAAgCC,EAAcN,GAC1C,OAAQM,GACR,IAAK,MAED,OADAjM,KAAKqL,gBAAgBa,KAAKP,GACnB,KAAK3L,KAAKqL,gBAAkBrL,KAAKqL,gBAAgBc,QAAQC,GAAOA,IAAOT,GAAS,EAC3F,IAAK,OAED,OADA3L,KAAKsL,iBAAiBY,KAAKP,GACpB,KAAK3L,KAAKsL,iBAAmBtL,KAAKsL,iBAAiBa,QAAQC,GAAOA,IAAOT,GAAS,EAC7F,IAAK,SAED,OADA3L,KAAKuL,mBAAmBW,KAAKP,GACtB,KAAK3L,KAAKuL,mBAAqBvL,KAAKuL,mBAAmBY,QAAQC,GAAOA,IAAOT,GAAS,EAEjG,MAAO,MACV,CAED,cAAAU,GACIrM,KAAKqL,gBAAkB,GACvBrL,KAAKsL,iBAAmB,GACxBtL,KAAKuL,mBAAqB,EAC7B,EC5HS,MAAOe,EAejB,WAAA/G,CAAYgH,EAAmC,IAAInB,EAAoBjF,EAAkB,CAAC3G,EAAG,EAAGC,EAAG,GAAIyC,EAAwB,IAAMC,EAAyB,IAAMtD,EAAqB,EAAG0F,EAAmB,GAC3MvE,KAAKwM,UAAYrG,EACjBnG,KAAKyM,WAAa5N,EAClBmB,KAAK0M,UAAYnI,EACjBvE,KAAK2M,gBAAkBxK,EACvBnC,KAAK4M,eAAiB1K,EACtBlC,KAAK6M,UAAYN,CACpB,CAED,cAAI5J,GACA,OAAO3C,KAAK8M,WACf,CAED,cAAInK,CAAWA,GACX3C,KAAK8M,YAAcnK,CACtB,CAED,iBAAIT,GACA,OAAOlC,KAAK4M,cACf,CAED,iBAAI1K,CAAc6K,GACd/M,KAAK4M,eAAiBG,CACzB,CAED,kBAAI5K,GACA,OAAOnC,KAAK2M,eACf,CAED,kBAAIxK,CAAe6K,GACfhN,KAAK2M,gBAAkBK,CAC1B,CAED,YAAI7G,GACA,OAAOnG,KAAKwM,SACf,CAED,YAAIS,GACA,OAAOjN,KAAK6M,SACf,CAED,WAAA3G,CAAYJ,GACR,GAAGpD,EAAiBoD,EAAa9F,KAAK8M,aAAa,CAC/C,MAAMzI,EAAOlF,EAASO,UAAUoG,EAAa9F,KAAKwM,WAClD,GAAGrN,EAASU,UAAUwE,GAAQ,MAAUlF,EAASU,UAAUwE,GAAQ,EAAIrE,KAAKyM,WACxE,OAEJzM,KAAKwM,UAAY1G,EACjB9F,KAAK6M,UAAUrB,qBAAqBnH,EAAM,CAAC8B,SAAUnG,KAAKwM,UAAWjI,SAAUvE,KAAK0M,UAAW7N,UAAWmB,KAAKyM,YAClH,CACJ,CAED,aAAI5N,GACA,OAAOmB,KAAKyM,UACf,CAED,kBAAI/C,GACA,OAAO1J,KAAKkN,eACf,CAED,kBAAIxD,CAAeA,GACf,QAAG,IAAAA,QAAAA,IAAgCA,EAAexK,UAAAA,IAAqBwK,EAAe1K,KAAqB0K,EAAexK,IAAMwK,EAAe1K,IAAI,CAC/I,IAAImO,EAAOzD,EAAe1K,IAC1B0K,EAAe1K,IAAM0K,EAAexK,IACpCwK,EAAexK,IAAMiO,CACxB,CACDnN,KAAKkN,gBAAkBxD,CAC1B,CAED,eAAA0D,CAAgBC,GAIZ,OAH2BzK,MAAxB5C,KAAKkN,kBACJlN,KAAKkN,gBAAkB,CAAChO,SAAI,EAAYF,SAAI,MAEhB4D,MAA5B5C,KAAKkN,gBAAgBhO,KAAoBc,KAAKkN,gBAAgBhO,IAAMmO,GAAiBrN,KAAKyM,WAAaY,IAG3GrN,KAAKkN,gBAAgBlO,IAAMqO,EAAAA,GAE9B,CAED,eAAAC,CAAgBC,GAIZ,OAH2B3K,MAAxB5C,KAAKkN,kBACJlN,KAAKkN,gBAAkB,CAAChO,SAAI,EAAYF,SAAI,MAEhB4D,MAA5B5C,KAAKkN,gBAAgBlO,KAAoBgB,KAAKkN,gBAAgBlO,IAAMuO,IAGxEvN,KAAKkN,gBAAgBhO,IAAMqO,EACxBvN,KAAKyM,WAAac,IACjBvN,KAAKyM,WAAac,GAAAA,GAGzB,CAED,YAAAjE,CAAazK,GACT,GAAGE,EAAsBF,EAAWmB,KAAKkN,iBAAiB,CACtD,QAAG,IAAAlN,KAAKkN,sBAAAA,IAAiClN,KAAKkN,gBAAgBlO,KAAqBJ,EAAeC,EAAWmB,KAAKkN,kBAAoBlN,KAAKkN,gBAAgBlO,KAAOgB,KAAKyM,YAAczM,KAAKkN,gBAAgBlO,IACtM,OAEJ,QAAG,IAAAgB,KAAKkN,sBAAAA,IAAiClN,KAAKkN,gBAAgBhO,KAAqBN,EAAeC,EAAWmB,KAAKkN,kBAAoBlN,KAAKkN,gBAAgBhO,KAAOc,KAAKyM,YAAczM,KAAKkN,gBAAgBhO,IACtM,OAEJ,MAAMsO,EAAUxN,KAAKyM,WACrBzM,KAAKyM,WAAa5N,EAClBmB,KAAK6M,UAAUjB,iBAAiB5L,KAAKyM,WAAae,EAAS,CAACrH,SAAUnG,KAAKwM,UAAWjI,SAAUvE,KAAK0M,UAAW7N,UAAWmB,KAAKyM,YACnI,CACJ,CAED,YAAIlI,GACA,OAAOvE,KAAK0M,SACf,CAED,sBAAIlE,GACA,OAAOxI,KAAKyN,mBACf,CAED,sBAAIjF,CAAmBA,GACnB,QAAG,IAAAA,QAAAA,IAAoCA,EAAmB3D,YAAAA,IAAuB2D,EAAmBzD,KAAqByD,EAAmB3D,MAAQ2D,EAAmBzD,IAAI,CACvK,IAAIoI,EAAO3E,EAAmBzD,IAC9ByD,EAAmBzD,IAAMyD,EAAmB3D,MAC5C2D,EAAmB3D,MAAQsI,CAC9B,CACDnN,KAAKyN,oBAAsBjF,CAC9B,CAED,WAAAN,CAAY3D,GACR,GAAGE,EAAqBF,EAAUvE,KAAKyN,qBAAqB,CAExD,GADAlJ,EAAWG,EAAyBH,QAAAA,IACjCvE,KAAKyN,0BAAAA,IAAqCzN,KAAKyN,oBAAoB1I,KAAqBT,EAAcC,EAAUvE,KAAKyN,sBAAwBzN,KAAKyN,oBAAoB1I,KAAO/E,KAAK0M,WAAa1M,KAAKyN,oBAAoB1I,IACvN,OAEJ,QAAG,IAAA/E,KAAKyN,0BAAAA,IAAqCzN,KAAKwI,mBAAmB3D,OAAuBP,EAAcC,EAAUvE,KAAKyN,sBAAwBzN,KAAKyN,oBAAoB5I,OAAS7E,KAAK0M,WAAa1M,KAAKyN,oBAAoB5I,MAC1N,OAEJ7E,KAAK6M,UAAUf,qBAAqBvH,EAAWvE,KAAK0M,UAAW,CAACvG,SAAUnG,KAAKwM,UAAWjI,SAAUA,EAAU1F,UAAWmB,KAAKyM,aAC9HzM,KAAK0M,UAAYnI,CACpB,CACJ,CAED,8BAAAmJ,CAA+BrN,GAC3B,OAAOmC,EAAmBnC,EAAOL,KAAK4M,eAAgB5M,KAAK2M,gBAAiB3M,KAAKwM,UAAWxM,KAAKyM,WAAYzM,KAAK0M,UACrH,CAED,6BAAAiB,CAA8BtN,GAC1B,IAAIiC,EAAoB,CAAC9C,EAAGQ,KAAKkC,cAAgB,EAAGzC,EAAGO,KAAK2M,gBAAkB,GAC1EpK,EAAcpD,EAASO,UAAUW,EAAOL,KAAKwM,WAGjD,OAFAjK,EAAcpD,EAASiB,YAAYmC,GAAcvC,KAAK0M,WACtDnK,EAAcpD,EAASQ,uBAAuB4C,EAAavC,KAAKyM,YACzDtN,EAASC,UAAUkD,EAAmBC,EAChD,CAED,uBAAAqL,CAAwB1O,EAAaF,GACjC,GAAIE,EAAMF,EAAI,CACV,IAAImO,EAAOnO,EACXA,EAAME,EACNA,EAAMiO,CACT,CACsBvK,MAApB5C,KAAK8M,cACJ9M,KAAK8M,YAAc,CAAC5N,IAAK,CAACM,OAAE,EAAYC,OAAE,GAAaT,IAAK,CAACQ,OAAE,EAAYC,OAAE,KAEjFO,KAAK8M,YAAY5N,IAAIM,EAAIN,EACzBc,KAAK8M,YAAY9N,IAAIQ,EAAIR,CAK5B,CAED,qBAAA6O,CAAsB3O,EAAaF,GAC/B,GAAIE,EAAMF,EAAI,CACV,IAAImO,EAAOnO,EACXA,EAAME,EACNA,EAAMiO,CACT,CACsBvK,MAApB5C,KAAK8M,cACJ9M,KAAK8M,YAAc,CAAC5N,IAAK,CAACM,OAAE,EAAYC,OAAE,GAAaT,IAAK,CAACQ,OAAE,EAAYC,OAAE,KAEjFO,KAAK8M,YAAY5N,IAAIO,EAAIP,EACzBc,KAAK8M,YAAY9N,IAAIS,EAAIT,CAC5B,CAED,EAAAgN,CAAgCC,EAAcN,GAC1C,OAAO3L,KAAK6M,UAAUb,GAAGC,EAAWN,EACvC,QCzLQmC,EAiBT,WAAAvI,CAAYwI,EAA2BlI,EAAoBmI,EAA8BC,GAAAA,EAA4BC,GAAAA,GAP7GlO,KAAYmO,cAAAA,EACZnO,KAAaoO,eAAAA,EACbpO,KAAeqO,iBAAAA,EACfrO,KAAAsO,eAAuC,IAAIC,IAK/CvO,KAAKwO,mBAAqB,KAC1BxO,KAAKyO,YAAAA,EACLzO,KAAK0O,QAAUX,EACf/N,KAAK2O,QAAU9I,EACf7F,KAAK4O,WAAaX,EAClBjO,KAAK6O,uBAAyBX,EAC9BlO,KAAK8O,gBACL9O,KAAKgO,cAAgBA,CACxB,CAED,aAAIC,GACA,OAAOjO,KAAK4O,UACf,CAED,aAAIX,CAAU7G,GACVpH,KAAK4O,WAAaxH,CACrB,CAED,yBAAI8G,GACA,OAAOlO,KAAK6O,sBACf,CAED,yBAAIX,CAAsB9G,GACtBpH,KAAK6O,uBAAyBzH,CACjC,CAED,eAAI2H,GACA,OAAO/O,KAAKmO,YACf,CAED,eAAIY,CAAY3H,GACZpH,KAAKmO,aAAe/G,EACjBA,IACCpH,KAAK+N,OAAOiB,MAAMC,OAAS,OAC3BjP,KAAKyO,YAAAA,EACLzO,KAAKkP,eAAiB,CAAC1P,EAAG,EAAGC,EAAG,GAEvC,CAED,gBAAI0P,GACA,OAAOnP,KAAKoO,aACf,CAED,gBAAIe,CAAa/H,GACbpH,KAAKoO,cAAgBhH,CACxB,CAED,kBAAIgI,GACA,OAAOpP,KAAKqO,eACf,CAED,kBAAIe,CAAehI,GACfpH,KAAKqO,gBAAkBjH,CAC1B,CAED,UAAIvB,GACA,OAAO7F,KAAK2O,OACf,CAED,UAAI9I,CAAOuB,GACPpH,KAAK2O,QAAUvH,CAClB,CAED,UAAI2G,GACA,OAAO/N,KAAK0O,OACf,CAED,KAAAW,GACIrP,KAAK+N,OAAOuB,iBAAiB,cAAetP,KAAKuP,oBACjDvP,KAAK+N,OAAOuB,iBAAiB,YAAatP,KAAKwP,kBAC/CxP,KAAK+N,OAAOuB,iBAAiB,cAAetP,KAAKyP,oBACjDzP,KAAK+N,OAAOuB,iBAAiB,QAAStP,KAAK0P,eAC3CC,OAAOL,iBAAiB,UAAWtP,KAAK4P,iBACxCD,OAAOL,iBAAiB,QAAStP,KAAK6P,cACtC7P,KAAK8P,mBAAmB,CAAC,KAC5B,CAED,QAAAC,GACI/P,KAAK+N,OAAOiC,oBAAoB,cAAehQ,KAAKuP,oBACpDvP,KAAK+N,OAAOiC,oBAAoB,YAAahQ,KAAKwP,kBAClDxP,KAAK+N,OAAOiC,oBAAoB,cAAehQ,KAAKyP,oBACpDzP,KAAK+N,OAAOiC,oBAAoB,QAAShQ,KAAK0P,eAC9CC,OAAOK,oBAAoB,UAAWhQ,KAAK4P,iBAC3CD,OAAOK,oBAAoB,QAAShQ,KAAK6P,aAC5C,CAED,aAAAf,GACI9O,KAAKuP,mBAAqBvP,KAAKuP,mBAAmBU,KAAKjQ,MACvDA,KAAKwP,iBAAmBxP,KAAKwP,iBAAiBS,KAAKjQ,MACnDA,KAAKyP,mBAAqBzP,KAAKyP,mBAAmBQ,KAAKjQ,MACvDA,KAAK0P,cAAgB1P,KAAK0P,cAAcO,KAAKjQ,MAC7CA,KAAK4P,gBAAkB5P,KAAK4P,gBAAgBK,KAAKjQ,MACjDA,KAAK6P,aAAe7P,KAAK6P,aAAaI,KAAKjQ,KAC9C,CAED,kBAAA8P,CAAmBI,GACfA,EAAK9L,SAAS+L,IACVnQ,KAAKsO,eAAe8B,IAAID,GAAI,EAAO,GAE1C,CAED,kBAAAZ,CAAmB1E,GACZ7K,KAAKqQ,WAGa,UAAlBxF,EAAEyF,aAAwC,GAAZzF,EAAE0F,SAAe1F,EAAE2F,UAAWxQ,KAAKsO,eAAemC,IAAI,MAAUzQ,KAAKmO,eAClGnO,KAAKyO,YAAAA,EACLzO,KAAKkP,eAAiB,CAAC1P,EAAGqL,EAAE6F,QAASjR,EAAGoL,EAAE8F,SAEjD,CAED,eAAAC,GACI5Q,KAAKyO,YAAAA,EACLzO,KAAKkP,eAAiB,CAAC1P,EAAG,EAAGC,EAAG,GAChCO,KAAKqQ,WAAAA,CACR,CAED,cAAAQ,GACI7Q,KAAKqQ,WAAAA,CACR,CAED,gBAAAb,CAAiB3E,GACV7K,KAAKqQ,WAGa,UAAlBxF,EAAEyF,cACGtQ,KAAKyO,aACLzO,KAAKyO,YAAAA,GAEJzO,KAAK4O,WAGN5O,KAAK+N,OAAOiB,MAAMC,OAAS,OAF3BjP,KAAK+N,OAAOiB,MAAMC,OAAS,OAKtC,CAED,kBAAAQ,CAAmB5E,GACf,IAAG7K,KAAKqQ,WAGa,SAAjBxF,EAAEyF,aAA0BtQ,KAAKyO,aAAezO,KAAKmO,aAAa,CAC9DnO,KAAK4O,WACL5O,KAAK+N,OAAOiB,MAAMC,OAAS,OAE3BjP,KAAK+N,OAAOiB,MAAMC,OAAS,WAE/B,MAAM6B,EAAS,CAACtR,EAAGqL,EAAE6F,QAASjR,EAAGoL,EAAE8F,SACnC,IAAItM,EAAOlF,EAASO,UAAUM,KAAKkP,eAAgB4B,GAC/C9Q,KAAK6O,yBACLxK,EAAOlF,EAAS8B,UAAUoD,IAE9B,IAAI0M,EAAc5R,EAASiB,YAAYiE,EAAMrE,KAAK2O,QAAQpK,UAC1DwM,EAAc5R,EAASQ,uBAAuBoR,EAAa,EAAI/Q,KAAK2O,QAAQ9P,WAC5EmB,KAAKgO,cAAcgD,YAAYhR,KAAK2O,QAASoC,GAC7C/Q,KAAKkP,eAAiB4B,CACzB,CACJ,CAED,aAAApB,CAAc7E,GACV,GAAG7K,KAAKqQ,UAAW,OACnBxF,EAAEoG,iBACF,MAAMC,EAAarG,EAAEsG,OAASnR,KAAKwO,mBACnC,GAAK3D,EAAEuG,QAcA,CAGH,GAAGpR,KAAKoO,cACJ,OAEJ,MAAMiD,EAAiB,CAAC7R,EAAGqL,EAAE6F,QAASjR,EAAGoL,EAAE8F,SAC3C,IAAIW,EAAcnS,EAASO,UAAU2R,EAAgB,CAAC7R,EAAGQ,KAAK+N,OAAOwD,wBAAwBC,KAAM/R,EAAGO,KAAK+N,OAAOwD,wBAAwBE,MACtIzR,KAAK6O,yBACLyC,EAAcnS,EAASO,UAAU2R,EAAgB,CAAC7R,EAAGQ,KAAK+N,OAAOwD,wBAAwBC,KAAM/R,EAAGO,KAAK+N,OAAOwD,wBAAwBG,SACtIJ,EAAcnS,EAAS8B,UAAUqQ,IAGrCtR,KAAKgO,cAAc2D,aAAa3R,KAAK2O,SAAW3O,KAAK2O,QAAQ9P,UAAYqS,EAAa,EAAII,EAC7F,KA5Bc,CACX,GAAGtR,KAAKmO,aACJ,OAKJ,IAAI9J,EAAO,CAAC7E,EAAGqL,EAAE+G,OAAQnS,EAAGoL,EAAEsG,QAC1BnR,KAAK6O,yBACLxK,EAAOlF,EAAS8B,UAAUoD,IAE9B,IAAI0M,EAAc5R,EAASiB,YAAYiE,EAAMrE,KAAK2O,QAAQpK,UAC1DwM,EAAc5R,EAASQ,uBAAuBoR,EAAa,EAAI/Q,KAAK2O,QAAQ9P,WAC5EmB,KAAKgO,cAAcgD,YAAYhR,KAAK2O,QAASoC,EAChD,CAeJ,CAED,eAAAnB,CAAgB/E,GAET7K,KAAKsO,eAAeuD,IAAIhH,EAAEsF,MAA0C,GAAlCnQ,KAAKsO,eAAemC,IAAI5F,EAAEsF,OAC3DtF,EAAEoG,iBACFjR,KAAKsO,eAAe8B,IAAIvF,EAAEsF,KAAI,GAErC,CAED,YAAAN,CAAahF,GACN7K,KAAKsO,eAAeuD,IAAIhH,EAAEsF,MAA0C,GAAlCnQ,KAAKsO,eAAemC,IAAI5F,EAAEsF,OAC3DtF,EAAEoG,iBACFjR,KAAKsO,eAAe8B,IAAIvF,EAAEsF,KAAI,GAC9BnQ,KAAKyO,YAAAA,EACLzO,KAAK+N,OAAOiB,MAAMC,OAAS,OAElC,CAED,YAAA6C,CAAajM,GACT7F,KAAK2O,QAAU9I,CAClB,CAED,YAAIkM,GACA,OAAO/R,KAAKqQ,SACf,QC9OQ2B,EAwBT,WAAAzM,CAAYwI,EAA2BkE,EAA4BjE,EAA6BE,GAAAA,GAjBxFlO,KAAYmO,cAAAA,EACZnO,KAAaoO,eAAAA,EACbpO,KAAeqO,iBAAAA,EAKfrO,KAAUyO,YAAAA,EAKVzO,KAAgBkS,iBAAW,KAE3BlS,KAAoBmS,qBAA6B,GACjDnS,KAAqBoS,sBAA8B,GAGvDpS,KAAKiS,cAAgBA,EACrBjS,KAAK+N,OAASA,EACd/N,KAAKqQ,WAAAA,EACLrQ,KAAKqS,YAAc,GACnBrS,KAAKsS,cAAgB,EACrBtS,KAAKyO,YAAAA,EACLzO,KAAKkP,eAAiB,CAAC1P,EAAG,EAAGC,EAAG,GAChCO,KAAK6O,uBAAyBX,EAE9BlO,KAAKgO,cAAgBA,EAErBhO,KAAKuS,eACR,CAED,aAAAA,GACIvS,KAAKwS,kBAAoBxS,KAAKwS,kBAAkBvC,KAAKjQ,MACrDA,KAAKyS,gBAAkBzS,KAAKyS,gBAAgBxC,KAAKjQ,MACjDA,KAAK0S,mBAAqB1S,KAAK0S,mBAAmBzC,KAAKjQ,MACvDA,KAAK2S,iBAAmB3S,KAAK2S,iBAAiB1C,KAAKjQ,KACtD,CAED,eAAA4S,GACI5S,KAAKqS,YAAc,GACnBrS,KAAKsS,cAAgB,EACrBtS,KAAKyO,YAAAA,EACLzO,KAAKkP,eAAiB,KACtBlP,KAAK6S,SAAW,IACnB,CAED,cAAAhC,GACI7Q,KAAKqQ,WAAAA,CACR,CAED,eAAAO,GACI5Q,KAAK4S,kBACL5S,KAAKqQ,WAAAA,CACR,CAED,KAAAhB,GACIrP,KAAK+N,OAAOuB,iBAAiB,aAActP,KAAKwS,mBAChDxS,KAAK+N,OAAOuB,iBAAiB,WAAYtP,KAAKyS,iBAC9CzS,KAAK+N,OAAOuB,iBAAiB,cAAetP,KAAK0S,oBACjD1S,KAAK+N,OAAOuB,iBAAiB,YAAatP,KAAK2S,iBAClD,CAED,QAAA5C,GACI/P,KAAK4S,kBACL5S,KAAK+N,OAAOiC,oBAAoB,aAAchQ,KAAKwS,mBACnDxS,KAAK+N,OAAOiC,oBAAoB,WAAYhQ,KAAKyS,iBACjDzS,KAAK+N,OAAOiC,oBAAoB,cAAehQ,KAAK0S,oBACpD1S,KAAK+N,OAAOiC,oBAAoB,YAAahQ,KAAK2S,iBACrD,CAED,YAAIZ,GACA,OAAO/R,KAAKqQ,SACf,CAED,yBAAInC,GACA,OAAOlO,KAAK6O,sBACf,CAED,yBAAIX,CAAsBA,GACtBlO,KAAK6O,uBAAyBX,CACjC,CAED,eAAIa,GACA,OAAO/O,KAAKmO,YACf,CAED,eAAIY,CAAYA,GACZ/O,KAAKmO,aAAeY,CACvB,CAED,gBAAII,GACA,OAAOnP,KAAKoO,aACf,CAED,gBAAIe,CAAaA,GACbnP,KAAKoO,cAAgBe,CACxB,CAED,kBAAIC,GACA,OAAOpP,KAAKqO,eACf,CAED,kBAAIe,CAAeA,GACfpP,KAAKqO,gBAAkBe,CAC1B,CAED,UAAIvJ,GACA,OAAO7F,KAAKiS,aACf,CAED,UAAIpM,CAAOA,GACP7F,KAAKiS,cAAgBpM,CACxB,CAED,YAAAiM,CAAajM,GACT7F,KAAKiS,cAAgBpM,CACxB,CAED,iBAAA2M,CAAkB3H,GACd,IAAG7K,KAAKqQ,UAIR,GADAxF,EAAEoG,iBAC4B,IAA3BpG,EAAEiI,cAAcC,OAAa,CAC5B/S,KAAKyO,YAAAA,EACL,IAAIuE,EAAkB,CAACxT,EAAGqL,EAAEiI,cAAc,GAAGpC,QAASjR,EAAGoL,EAAEiI,cAAc,GAAGnC,SACxEsC,EAAmB,CAACzT,EAAGqL,EAAEiI,cAAc,GAAGpC,QAASjR,EAAGoL,EAAEiI,cAAc,GAAGnC,SAC7E3Q,KAAKsS,cAAgBnT,EAAS6B,sBAAsBgS,EAAiBC,GACrEjT,KAAKqS,YAAc,CAACW,EAAiBC,EACxC,MAAqC,IAA3BpI,EAAEiI,cAAcC,SACvB/S,KAAK6S,SAAW,CAACrT,EAAGqL,EAAEiI,cAAc,GAAGpC,QAASjR,EAAGoL,EAAEiI,cAAc,GAAGnC,SACtE3Q,KAAK6S,SAAW7S,KAAKiS,cAAcvE,+BAA+B1N,KAAKkT,iCAAiC,CAAC1T,EAAGQ,KAAK+N,OAAOwD,wBAAwBC,KAAM/R,EAAGO,KAAK+N,OAAOwD,wBAAwBE,KAAMzR,KAAK6S,WACxM7S,KAAKyO,YAAAA,EACLzO,KAAKkP,eAAiB,CAAC1P,EAAGqL,EAAEiI,cAAc,GAAGpC,QAASjR,EAAGoL,EAAEiI,cAAc,GAAGnC,SAEnF,CAED,kBAAA+B,CAAmB7H,GACZ7K,KAAKqQ,YAGRrQ,KAAKyO,YAAAA,EACLzO,KAAKqS,YAAc,GACtB,CAED,eAAAI,CAAgB5H,GACT7K,KAAKqQ,YAGRrQ,KAAKyO,YAAAA,EACLzO,KAAKqS,YAAc,GACtB,CAED,gBAAAM,CAAiB9H,GACb,IAAG7K,KAAKqQ,UAIR,GADAxF,EAAEoG,iBAC2B,GAA1BpG,EAAEiI,cAAcC,QAA0C,GAA3B/S,KAAKqS,YAAYU,OAAY,CAE3D,GAAG/S,KAAKoO,cACJ,OAEJ,IAAI9M,EAAa,CAAC9B,EAAGqL,EAAEiI,cAAc,GAAGpC,QAASjR,EAAGoL,EAAEiI,cAAc,GAAGnC,SACnEpP,EAAW,CAAC/B,EAAGqL,EAAEiI,cAAc,GAAGpC,QAASjR,EAAGoL,EAAEiI,cAAc,GAAGnC,SACjEwC,EAAiBhU,EAAS6B,sBAAsBM,EAAYC,GAC5D6R,EAAWpT,KAAKsS,cAAgBa,EAChCE,EAAWlU,EAAS+B,oBAAoBI,EAAYC,EAAU,IAE9D8R,EADDrT,KAAK6O,uBACO7O,KAAKkT,iCAAiC,CAAC1T,EAAGQ,KAAK+N,OAAOwD,wBAAwBC,KAAM/R,EAAGO,KAAK+N,OAAOwD,wBAAwBE,KAAM4B,GAEjIrT,KAAKkT,iCAAiC,CAAC1T,EAAGQ,KAAK+N,OAAOwD,wBAAwBC,KAAM/R,EAAGO,KAAK+N,OAAOwD,wBAAwBG,QAAS2B,GAEnJ,IAAInC,EAAwB,GAAXkC,EAAiBpT,KAAKiS,cAAcpT,UAAYmB,KAAKkS,iBACtElS,KAAKgO,cAAc2D,aAAa3R,KAAKiS,eAAgBf,EAAYmC,GAGjErT,KAAKqS,YAAc,CAAC/Q,EAAYC,GAChCvB,KAAK6S,SAAW,IACnB,MAAM,GAA6B,GAA1BhI,EAAEiI,cAAcC,QAAe/S,KAAKyO,aAAezO,KAAKmO,aAAa,CAC3E,IAAImF,EAAa,CAAC9T,EAAGqL,EAAEiI,cAAc,GAAGpC,QAASjR,EAAGoL,EAAEiI,cAAc,GAAGnC,SACnEtM,EAAOlF,EAASO,UAAUM,KAAKkP,eAAgBoE,GAC/CtT,KAAK6O,yBACLxK,EAAOlF,EAAS8B,UAAUoD,IAE9B,IAAI0M,EAAc5R,EAASiB,YAAYiE,EAAMrE,KAAKiS,cAAc1N,UAChEwM,EAAc5R,EAASQ,uBAAuBoR,EAAa,EAAI/Q,KAAKiS,cAAcpT,WAClFmB,KAAKgO,cAAcgD,YAAYhR,KAAKiS,cAAelB,GAEnD/Q,KAAKkP,eAAiBoE,EACtBtT,KAAK6S,SAAW,IACnB,CACJ,CAED,gCAAAK,CAAiCK,EAAiCC,GAC9D,MAAMC,EAAMtU,EAASO,UAAU8T,EAAoBD,GACnD,OAAGvT,KAAK6O,uBACG,CAACrP,EAAGiU,EAAIjU,EAAGC,EAAGgU,EAAIhU,GAElB,CAACD,EAAGiU,EAAIjU,EAAGC,GAAIgU,EAAIhU,EAEjC,EC/LW,SAAAiU,EAAgCC,EAAkDC,GAC9F,OAAyBhR,MAAtBgR,IAGuBhR,MAAvB+Q,GAGAC,GAAsBC,UAAAA,IAGtBF,IAAiE/Q,MAA3B+Q,EAAoBzU,KAAoB0U,EAAqBD,EAAoBzU,KAI9H,CAEM,SAAU4U,EAAwBnR,EAAoCoR,EAAqBC,EAAsB3R,GACnH,MAAM0K,EAAQ3J,EAAmBT,GACjC,GAAYC,MAATmK,EACC,OAEJ,MAAMkH,EAAuBhV,KAAKgF,IAAI8I,EAAQ9N,KAAKsB,IAAI8B,IACjD6R,EAAwBjV,KAAKgF,IAAI8I,EAAQ9N,KAAKuB,IAAI6B,IAGxD,OAF+B0R,EAAcE,GAEhBJ,IADGG,EAAeE,EAI1BjV,KAAKD,IAAI+U,EAAcE,EAAsBD,EAAeE,EAErF,CAEM,SAAUC,EAAyBxR,EAAoCoR,EAAqBC,EAAsB3R,GACpH,MAAM2K,EAAS3J,EAAoBV,GACnC,GAAaC,MAAVoK,EACC,OAEJ,MAEMoH,EAA0BL,EAFF9U,KAAKgF,IAAI+I,EAAS/N,KAAKsB,IAAI8B,IAGnDgS,EAA2BL,EAFF/U,KAAKgF,IAAI+I,EAAS/N,KAAKuB,IAAI6B,IAG1D,OAAGgS,GAA4BR,IACpBO,EAEUnV,KAAKD,IAAIoV,EAAyBC,EAE3D,CC0TC,MC5XYC,EAYT,WAAA/O,CAAYM,GALJ7F,KAAiBuU,kBAA4B,GAC7CvU,KAAqBwU,sBAAgC,GACrDxU,KAAsByU,uBAAiC,GACvDzU,KAA0B0U,2BAAqC,GAGnE1U,KAAK2O,QAAU9I,CAClB,CAED,iBAAA8O,CAAkBC,GACd5U,KAAKuU,kBAAkBrI,KAAK0I,EAC/B,CAED,mBAAAC,CAAoBD,GAChB5U,KAAKuU,kBAAoBvU,KAAKuU,kBAAkBpI,QAAQ2I,GAAQA,IAAQF,GAC3E,CAED,qBAAAG,CAAsBH,GAClB5U,KAAKwU,sBAAsBtI,KAAK0I,EACnC,CAED,uBAAAI,CAAwBJ,GACpB5U,KAAKwU,sBAAwBxU,KAAKwU,sBAAsBrI,QAAQ2I,GAAQA,IAAQF,GACnF,CAED,sBAAAK,CAAuBL,GACnB5U,KAAKyU,uBAAuBvI,KAAK0I,EACpC,CAED,wBAAAM,CAAyBN,GACrB5U,KAAKyU,uBAAyBzU,KAAKyU,uBAAuBtI,QAAQ2I,GAAQA,IAAQF,GACrF,CAED,0BAAAO,CAA2BP,GAEvB,OADA5U,KAAK0U,2BAA2BxI,KAAK0I,GAC9B,KACH5U,KAAK0U,2BAA6B1U,KAAK0U,2BAA2BvI,QAAQ2I,GAAQA,IAAQF,GAAW,CAE5G,CAED,UAAI/O,GACA,OAAO7F,KAAK2O,OACf,CAED,UAAI9I,CAAOA,GACP7F,KAAK2O,QAAU9I,EACf7F,KAAKoV,oBACR,CAED,cAAI/L,GACA,OAAOrJ,KAAKqV,WACf,CAED,cAAIhM,CAAWA,GACXrJ,KAAKqV,YAAchM,EACnBrJ,KAAKsV,wBACR,CAED,eAAIC,GACA,OAAOvV,KAAKwV,YACf,CAED,eAAID,CAAYA,GACZvV,KAAKwV,aAAeD,EACpBvV,KAAKyV,yBACR,CAED,mBAAIC,GACA,OAAO1V,KAAK2V,gBACf,CAED,mBAAID,CAAgBA,GAChB1V,KAAK2V,iBAAmBD,EACxB1V,KAAK4V,6BACR,CAED,kBAAAR,GACIpV,KAAKuU,kBAAkBnQ,SAAS0Q,GAAQA,EAAIhD,aAAa9R,KAAK2O,UACjE,CAED,sBAAA2G,GACItV,KAAKwU,sBAAsBpQ,SAAS0Q,GAAQA,EAAIe,iBAAiB7V,KAAKqV,cACzE,CAED,uBAAAI,GACIzV,KAAKyU,uBAAuBrQ,SAAS0Q,GAAQA,EAAIgB,kBAAkB9V,KAAKwV,eAC3E,CAED,2BAAAI,GACI5V,KAAK0U,2BAA2BtQ,SAAS0Q,GAAQA,EAAIiB,sBAAsB/V,KAAK2V,mBACnF,QCrFQK,EAQT,WAAAzQ,CAAY0Q,GANJjW,KAAeqL,gBAA6B,GAC5CrL,KAAgBsL,iBAA8B,GAC9CtL,KAAkBuL,mBAAgC,GAKtDvL,KAAKkW,eAAiBD,CACzB,CAED,WAAAjF,CAAYnL,EAAqBxB,GAC7BrE,KAAKkW,eAAeC,eAAetQ,EAAQxB,GAC3CrE,KAAKqL,gBAAgBjH,SAASuH,IAC1BD,gBAAe,KAAKC,EAAS,CAACtH,KAAMA,GAAM,GAAG,GAEpD,CAED,YAAAsN,CAAa9L,EAAqBgG,EAAyByF,GACvDtR,KAAKkW,eAAeE,gBAAgBvQ,EAAQgG,EAAiByF,GAC7DtR,KAAKsL,iBAAiBlH,SAASuH,IAC3BD,gBAAe,KAAKC,EAAS,CAACE,gBAAiBA,EAAiByF,YAAaA,GAAa,GAAG,GAEpG,CAED,gBAAA+E,CAAiBxQ,EAAqBkG,GAClC/L,KAAKkW,eAAeI,oBAAoBzQ,EAAQkG,GAChD/L,KAAKuL,mBAAmBnH,SAASuH,IAC7BD,gBAAe,KAAKC,EAAS,CAACI,cAAeA,GAAe,GAAG,GAEtE,CAED,OAAAwK,CAAyCtK,EAAcN,GACnD,OAAQM,GACR,IAAK,MAED,OADAjM,KAAKqL,gBAAgBa,KAAKP,GACnB,KACH3L,KAAKqL,gBAAkBrL,KAAKqL,gBAAgBc,QAAQC,GAAOA,IAAOT,GAAS,EAEnF,IAAK,OAED,OADA3L,KAAKsL,iBAAiBY,KAAKP,GACpB,KACH3L,KAAKsL,iBAAmBtL,KAAKsL,iBAAiBa,QAAQC,GAAOA,IAAOT,GAAS,EAErF,IAAK,SAED,OADA3L,KAAKuL,mBAAmBW,KAAKP,GACtB,KACH3L,KAAKuL,mBAAqBvL,KAAKuL,mBAAmBY,QAAQC,GAAOA,IAAOT,GAAS,EAEzF,QACI,MAAM,IAAI6K,MAAM,4BAEvB,CAED,iBAAIP,GACA,OAAOjW,KAAKkW,cACf,CAED,iBAAID,CAAc7O,GACdpH,KAAKkW,eAAiB9O,CACzB,QC7EQqP,EAMT,WAAAlR,CAAY8D,EAA2BkM,EAA6BG,GAChE1V,KAAK0W,eAAiBrN,EACtBrJ,KAAK2W,gBAAkBpB,EACvBvV,KAAK4W,oBAAsBlB,CAC9B,CAED,iBAAImB,GACA,OAAO7W,KAAK0W,cACf,CAED,kBAAII,GACA,OAAO9W,KAAK2W,eACf,CAED,sBAAII,GACA,OAAO/W,KAAK4W,mBACf,CAED,cAAAT,CAAetQ,EAAqBxB,GAChCrE,KAAK0W,eAAe3Q,YAAYF,EAAQxB,EAC3C,CAED,eAAA+R,CAAgBvQ,EAAqBgG,EAAyByF,GAC1DtR,KAAK2W,gBAAgB1N,eAAepD,EAAQA,EAAOhH,UAAYgN,EAAiByF,EACnF,CAED,mBAAAgF,CAAoBzQ,EAAqBkG,GACrC/L,KAAK4W,oBAAoB5O,eAAenC,EAAQkG,EACnD,EdGC,SAAUiL,EAAuBrU,GACnC,OAAiBC,MAAdD,GAGkBC,MAAlBD,EAAW3D,KAAsC4D,MAAlBD,EAAWzD,KAGtB0D,MAApBD,EAAW3D,IAAIQ,GAAsCoD,MAApBD,EAAW3D,IAAIS,GAAsCmD,MAApBD,EAAWzD,IAAIM,GAAsCoD,MAApBD,EAAWzD,IAAIO,CAIzH,CA4BM,SAAU2D,EAAmBT,GAC/B,GAAiBC,MAAdD,GAA6CC,MAAlBD,EAAWzD,KAAsC0D,MAAlBD,EAAW3D,KAAwC4D,MAApBD,EAAWzD,IAAIM,GAAsCoD,MAApBD,EAAW3D,IAAIQ,EAG5I,OAAOmD,EAAW3D,IAAIQ,EAAImD,EAAWzD,IAAIM,CAC7C,CAOM,SAAU6D,EAAoBV,GAChC,GAAiBC,MAAdD,GAA6CC,MAAlBD,EAAWzD,KAAsC0D,MAAlBD,EAAW3D,KAAwC4D,MAApBD,EAAWzD,IAAIO,GAAsCmD,MAApBD,EAAW3D,IAAIS,EAG5I,OAAOkD,EAAW3D,IAAIS,EAAIkD,EAAWzD,IAAIO,CAC7C,Ce0CM,SAAUwX,EAAczX,GAC1B,MAAM0X,EAAK,OACLC,EAAK,KAEX,OAAI3X,EAAI,EAAI2X,EACDD,EAAK1X,EAAIA,EACTA,EAAI,EAAI2X,EACRD,GAAM1X,GAAK,IAAM2X,GAAM3X,EAAI,IAC3BA,EAAI,IAAM2X,EACVD,GAAM1X,GAAK,KAAO2X,GAAM3X,EAAI,MAE5B0X,GAAM1X,GAAK,MAAQ2X,GAAM3X,EAAI,OAE5C,CASM,SAAU4X,EAAO5X,GACnB,OAAOA,CACX,0CAnFM,SAAqBA,GAIvB,OAFW6X,QAEC7X,EAAIA,EAAIA,EAHT,QAGkBA,EAAIA,CACrC,eAkDM,SAAuBA,GACzB,OAAO,EAAIyX,EAAc,EAAIzX,EACjC,aAvEM,SAAqBA,GACvB,OAAO,EAAIP,KAAKa,KAAK,EAAIb,KAAKqY,IAAI9X,EAAG,GACzC,cAvDM,SAAsBA,GACxB,OAAOA,EAAIA,EAAIA,CACnB,gBAwFM,SAAwBA,GAC1B,MAAM+X,EAAM,EAAItY,KAAKiG,GAAM,EAE3B,OAAa,IAAN1F,EACH,EACM,IAANA,EACA,GACCP,KAAKqY,IAAI,EAAG,GAAK9X,EAAI,IAAMP,KAAKuB,KAAS,GAAJhB,EAAS,OAAS+X,EAChE,aA9DM,SAAqB/X,GACvB,OAAa,IAANA,EAAU,EAAIP,KAAKqY,IAAI,EAAG,GAAK9X,EAAI,GAC9C,gBA2CM,SAAwBA,GAC1B,MACMgY,EAAKH,UAEX,OAAO7X,EAAI,GACNP,KAAKqY,IAAI,EAAI9X,EAAG,IAAM,SAAeA,EAAIgY,GAAO,GAChDvY,KAAKqY,IAAI,EAAI9X,EAAI,EAAG,KAAOgY,EAAK,IAAU,EAAJhY,EAAQ,GAAKgY,GAAM,GAAK,CACvE,kBAqDM,SAA0BhY,GAC5B,OAAOA,EAAI,IACN,EAAIyX,EAAc,EAAI,EAAIzX,IAAM,GAChC,EAAIyX,EAAc,EAAIzX,EAAI,IAAM,CACzC,gBApFM,SAAwBA,GAC1B,OAAOA,EAAI,IACN,EAAIP,KAAKa,KAAK,EAAIb,KAAKqY,IAAI,EAAI9X,EAAG,KAAO,GACzCP,KAAKa,KAAK,EAAIb,KAAKqY,KAAK,EAAI9X,EAAI,EAAG,IAAM,GAAK,CACvD,iBAzDM,SAAyBA,GAC3B,OAAOA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAI,EAAIP,KAAKqY,KAAK,EAAI9X,EAAI,EAAG,GAAK,CACnE,mBAoGM,SAA2BA,GAC7B,MAAMiY,EAAM,EAAIxY,KAAKiG,GAAM,IAE3B,OAAa,IAAN1F,EACH,EACM,IAANA,EACA,EACAA,EAAI,IACFP,KAAKqY,IAAI,EAAG,GAAK9X,EAAI,IAAMP,KAAKuB,KAAK,GAAKhB,EAAI,QAAUiY,GAAO,EAChExY,KAAKqY,IAAI,GAAI,GAAK9X,EAAI,IAAMP,KAAKuB,KAAK,GAAKhB,EAAI,QAAUiY,GAAO,EAAI,CAC7E,gBA5EM,SAAwBjY,GAC1B,OAAa,IAANA,EACH,EACM,IAANA,EACA,EACAA,EAAI,GAAMP,KAAKqY,IAAI,EAAG,GAAK9X,EAAI,IAAM,GACpC,EAAIP,KAAKqY,IAAI,GAAI,GAAK9X,EAAI,KAAO,CAC1C,gBAvDM,SAAwBA,GAC1B,OAAOA,EAAI,GAAM,EAAIA,EAAIA,EAAI,EAAIP,KAAKqY,KAAK,EAAI9X,EAAI,EAAG,GAAK,CAC/D,iBAsBM,SAAyBA,GAC3B,OAAOA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAIP,KAAKqY,KAAK,EAAI9X,EAAI,EAAG,GAAK,CACvE,iBAUM,SAAyBA,GAC3B,OAAOA,EAAI,GAAM,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAIP,KAAKqY,KAAK,EAAI9X,EAAI,EAAG,GAAK,CAC5E,gBAlDM,SAAwBA,GAC1B,QAASP,KAAKsB,IAAItB,KAAKiG,GAAK1F,GAAK,GAAK,CAC1C,aAEM,SAAqBA,GACvB,OAAOA,EAAIA,CACf,cAsBM,SAAsBA,GACxB,OAAOA,EAAIA,EAAIA,EAAIA,CACvB,cAUM,SAAsBA,GACxB,OAAOA,EAAIA,EAAIA,EAAIA,EAAIA,CAC3B,aAlDM,SAAqBA,GACvB,OAAO,EAAIP,KAAKsB,IAAKf,EAAIP,KAAKiG,GAAM,EACxC,cAgGM,SAAsB1F,GAIxB,OAAO,EAFI6X,QAEKpY,KAAKqY,IAAI9X,EAAI,EAAG,GAHrB,QAG+BP,KAAKqY,IAAI9X,EAAI,EAAG,EAC9D,8BAtBM,SAAsBA,GACxB,OAAOP,KAAKa,KAAK,EAAIb,KAAKqY,IAAI9X,EAAI,EAAG,GACzC,eAvDM,SAAuBA,GACzB,OAAO,EAAIP,KAAKqY,IAAI,EAAI9X,EAAG,EAC/B,iBA8FM,SAAyBA,GAC3B,MAAM+X,EAAM,EAAItY,KAAKiG,GAAM,EAE3B,OAAa,IAAN1F,EACH,EACM,IAANA,EACA,EACAP,KAAKqY,IAAI,GAAI,GAAK9X,GAAKP,KAAKuB,KAAS,GAAJhB,EAAS,KAAQ+X,GAAM,CAChE,cApEM,SAAsB/X,GACxB,OAAa,IAANA,EAAU,EAAI,EAAIP,KAAKqY,IAAI,GAAI,GAAK9X,EAC/C,cAlDM,SAAsBA,GACxB,OAAO,GAAK,EAAIA,IAAM,EAAIA,EAC9B,eAsBM,SAAuBA,GACzB,OAAO,EAAIP,KAAKqY,IAAI,EAAI9X,EAAG,EAC/B,eAUM,SAAuBA,GACzB,OAAO,EAAIP,KAAKqY,IAAI,EAAI9X,EAAG,EAC/B,cAlDM,SAAsBA,GACxB,OAAOP,KAAKuB,IAAKhB,EAAIP,KAAKiG,GAAM,EACpC,aCNA,MAAM/D,EAAE,gBAAO/B,CAAU+B,EAAEuW,GAAG,OAAO,MAAMvW,EAAE5B,GAAG,MAAMmY,EAAEnY,EAAE,CAACC,EAAE2B,EAAE3B,EAAEkY,EAAElY,EAAEC,EAAE0B,EAAE1B,EAAEiY,EAAEjY,IAAI,MAAM0B,EAAE5B,GAAG,MAAMmY,EAAEnY,IAAI,MAAM4B,EAAE5B,IAAI4B,EAAE5B,EAAE,GAAG,MAAMmY,EAAEnY,IAAImY,EAAEnY,EAAE,IAAI,CAACC,EAAE2B,EAAE3B,EAAEkY,EAAElY,EAAEC,EAAE0B,EAAE1B,EAAEiY,EAAEjY,EAAEF,EAAE4B,EAAE5B,EAAEmY,EAAEnY,GAAG,CAAC,gBAAOG,CAAUyB,EAAEuW,GAAG,OAAO,MAAMvW,EAAE5B,GAAG,MAAMmY,EAAEnY,EAAE,CAACC,EAAE2B,EAAE3B,EAAEkY,EAAElY,EAAEC,EAAE0B,EAAE1B,EAAEiY,EAAEjY,IAAI,MAAM0B,EAAE5B,GAAG,MAAMmY,EAAEnY,IAAI,MAAM4B,EAAE5B,IAAI4B,EAAE5B,EAAE,GAAG,MAAMmY,EAAEnY,IAAImY,EAAEnY,EAAE,IAAI,CAACC,EAAE2B,EAAE3B,EAAEkY,EAAElY,EAAEC,EAAE0B,EAAE1B,EAAEiY,EAAEjY,EAAEF,EAAE4B,EAAE5B,EAAEmY,EAAEnY,GAAG,CAAC,6BAAOI,CAAuBwB,EAAEuW,GAAG,OAAO,MAAMvW,EAAE5B,EAAE,CAACC,EAAE2B,EAAE3B,EAAEkY,EAAEjY,EAAE0B,EAAE1B,EAAEiY,GAAG,CAAClY,EAAE2B,EAAE3B,EAAEkY,EAAEjY,EAAE0B,EAAE1B,EAAEiY,EAAEnY,EAAE4B,EAAE5B,EAAEmY,EAAE,CAAC,2BAAO9X,CAAqBuB,EAAEuW,GAAG,OAAO,GAAGA,EAAE,CAAClY,EAAE2B,EAAE3B,EAAEC,EAAE0B,EAAE1B,GAAG,MAAM0B,EAAE5B,EAAE,CAACC,EAAE2B,EAAE3B,EAAEkY,EAAEjY,EAAE0B,EAAE1B,EAAEiY,GAAG,CAAClY,EAAE2B,EAAE3B,EAAEkY,EAAEjY,EAAE0B,EAAE1B,EAAEiY,EAAEnY,EAAE4B,EAAE5B,EAAEmY,EAAE,CAAC,gBAAO7X,CAAUsB,GAAG,OAAO,MAAMA,EAAE5B,IAAI4B,EAAE5B,EAAE,GAAGN,KAAKa,KAAKqB,EAAE3B,EAAE2B,EAAE3B,EAAE2B,EAAE1B,EAAE0B,EAAE1B,EAAE0B,EAAE5B,EAAE4B,EAAE5B,EAAE,CAAC,iBAAOQ,CAAWoB,GAAG,OAAO,MAAMA,EAAE5B,IAAI4B,EAAE5B,EAAE,GAAG,GAAGS,KAAKH,UAAUsB,GAAG,CAAC3B,EAAE2B,EAAE3B,EAAEQ,KAAKH,UAAUsB,GAAG1B,EAAE0B,EAAE1B,EAAEO,KAAKH,UAAUsB,GAAG5B,EAAE4B,EAAE5B,EAAES,KAAKH,UAAUsB,IAAI,CAAC3B,EAAE,EAAEC,EAAE,EAAEF,EAAE,EAAE,CAAC,iBAAOU,CAAWkB,EAAEuW,GAAG,OAAO,MAAMvW,EAAE5B,GAAG,MAAMmY,EAAEnY,EAAE4B,EAAE3B,EAAEkY,EAAElY,EAAE2B,EAAE1B,EAAEiY,EAAEjY,GAAG,MAAM0B,EAAE5B,GAAG,MAAMmY,EAAEnY,IAAI,MAAM4B,EAAE5B,IAAI4B,EAAE5B,EAAE,GAAG,MAAMmY,EAAEnY,IAAImY,EAAEnY,EAAE,IAAI4B,EAAE3B,EAAEkY,EAAElY,EAAE2B,EAAE1B,EAAEiY,EAAEjY,EAAE0B,EAAE5B,EAAEmY,EAAEnY,EAAE,CAAC,mBAAOW,CAAaiB,EAAEuW,GAAG,OAAO,MAAMvW,EAAE5B,GAAG,MAAMmY,EAAEnY,IAAI,MAAM4B,EAAE5B,IAAI4B,EAAE5B,EAAE,GAAG,MAAMmY,EAAEnY,IAAImY,EAAEnY,EAAE,IAAI,CAACC,EAAE2B,EAAE1B,EAAEiY,EAAEnY,EAAE4B,EAAE5B,EAAEmY,EAAEjY,EAAEA,EAAE0B,EAAE5B,EAAEmY,EAAElY,EAAE2B,EAAE3B,EAAEkY,EAAEnY,EAAEA,EAAE4B,EAAE3B,EAAEkY,EAAEjY,EAAE0B,EAAE1B,EAAEiY,EAAElY,EAAE,CAAC,wBAAOW,CAAkBgB,EAAEuW,GAAG,OAAO1X,KAAKD,WAAWC,KAAKN,UAAUgY,EAAEvW,GAAG,CAAC,kBAAOf,CAAYe,EAAEuW,GAAG,MAAM,CAAClY,EAAE2B,EAAE3B,EAAEP,KAAKsB,IAAImX,GAAGvW,EAAE1B,EAAER,KAAKuB,IAAIkX,GAAGjY,EAAE0B,EAAE3B,EAAEP,KAAKuB,IAAIkX,GAAGvW,EAAE1B,EAAER,KAAKsB,IAAImX,GAAG,CAAC,wBAAOjX,CAAkBU,EAAEuW,GAAG,MAAM,CAAClY,EAAE2B,EAAE3B,EAAEP,KAAKsB,IAAImX,GAAGvW,EAAE1B,EAAER,KAAKuB,IAAIkX,GAAGjY,GAAG0B,EAAE3B,EAAEP,KAAKuB,IAAIkX,GAAGvW,EAAE1B,EAAER,KAAKsB,IAAImX,GAAG,CAAC,mBAAO/W,CAAaQ,EAAEuW,GAAG,OAAOzY,KAAK2B,MAAMO,EAAE3B,EAAEkY,EAAEjY,EAAE0B,EAAE1B,EAAEiY,EAAElY,EAAE2B,EAAE3B,EAAEkY,EAAElY,EAAE2B,EAAE1B,EAAEiY,EAAEjY,EAAE,CAAC,8BAAOoB,CAAwBM,EAAEuW,EAAEC,GAAG,IAAIpY,EAAES,KAAKI,YAAYJ,KAAKN,UAAUyB,EAAEuW,GAAGC,GAAG,OAAO3X,KAAKZ,UAAUG,EAAEmY,EAAE,CAAC,4BAAO1W,CAAsBG,EAAEuW,GAAG,OAAO1X,KAAKH,UAAUG,KAAKN,UAAUyB,EAAEuW,GAAG,CAAC,gBAAOzW,CAAUE,GAAG,MAAM,CAAC3B,EAAE2B,EAAE3B,EAAEC,GAAG0B,EAAE1B,EAAEF,EAAE4B,EAAE5B,EAAE,CAAC,0BAAO2B,CAAoBC,EAAEuW,EAAEC,GAAG,OAAO,MAAMxW,EAAE5B,GAAG,MAAMmY,EAAEnY,EAAE,CAACC,EAAE2B,EAAE3B,GAAGkY,EAAElY,EAAE2B,EAAE3B,GAAGmY,EAAElY,EAAE0B,EAAE1B,GAAGiY,EAAEjY,EAAE0B,EAAE1B,GAAGkY,GAAG,CAACnY,EAAE2B,EAAE3B,GAAGkY,EAAElY,EAAE2B,EAAE3B,GAAGmY,EAAElY,EAAE0B,EAAE1B,GAAGiY,EAAEjY,EAAE0B,EAAE1B,GAAGkY,EAAEpY,EAAE4B,EAAE5B,GAAGmY,EAAEnY,EAAE4B,EAAE5B,GAAGoY,EAAE,ECsB7yD,MAIQC,EAET,WAAArS,GAEC,CAED,IAAAsS,CAAKC,EAAejT,EAAyBE,GACzC,MAAMgT,GAAkBD,EAAQjT,EAAMmT,aAAejT,EAAIiT,WAAanT,EAAMmT,YAC5E,IAAIC,EAAcF,EAKlB,OAJGlT,EAAMqT,WACLD,EAAcpT,EAAMqT,SAASH,IAErBlT,EAAMuC,MAAQ6Q,GAAelT,EAAIqC,MAAQvC,EAAMuC,MAE9D,EA6CA,MClDQ+Q,EAmBT,WAAA5S,CAAY6S,EAAoE,IAAI7J,IAAO8J,GAAAA,EAAuBC,OAAAA,EAAmDC,EAAoB,SAAQC,EAAuB,UALhNxY,KAAYyY,aAAe,GAC3BzY,KAAc0Y,eAAe,GAKjC1Y,KAAKoY,WAAaA,EAClBpY,KAAK2Y,UAAY,EACjB3Y,KAAK4Y,oBACL5Y,KAAK6Y,WAAa,EAClB7Y,KAAK8Y,SAAAA,EACL9Y,KAAKqY,KAAOA,EACZrY,KAAK+Y,QAAUR,EACfvY,KAAKwY,WAAaA,EAClBxY,KAAKgZ,WAAa,EAClBhZ,KAAKiZ,UAAY,EACjBjZ,KAAKsY,OAASA,EACdtY,KAAKoY,WAAWhU,SAAS8U,IACrBA,EAAUC,SAASC,UAAUpZ,KAAK,IAEtCA,KAAKqZ,SAAAA,EACLrZ,KAAKsZ,WAAa,CACrB,CAED,aAAAC,CAAcF,GACPrZ,KAAKqZ,SAAWA,IAGnBrZ,KAAKqZ,QAAUA,EACfrZ,KAAKoY,WAAWhU,SAAS8U,IACrBA,EAAUC,SAASI,cAAcF,EAAQ,IAEhD,CAED,SAAAD,CAAUd,GACNtY,KAAKsY,OAASA,CACjB,CAED,YAAAkB,GACIxZ,KAAKsY,YAAAA,CACR,CAED,OAAAmB,CAAQC,IACA1Z,KAAK8Y,SAAW9Y,KAAK6Y,UAAY7Y,KAAK2Y,UAAY3Y,KAAKgZ,WAAahZ,KAAKiZ,WAAajZ,KAAK6Y,UAAY,GAA6B,GAAxB7Y,KAAKoY,WAAWuB,OAGhI3Z,KAAK6Y,WAAaa,EACd1Z,KAAK6Y,UAAYa,GAAa,GAAKA,EAAY,GAE/C1Z,KAAK0Y,eAAetU,SAASuH,IACzBD,gBAAe,KAAKC,GAAW,GAAC,IAGxC3L,KAAK4Z,gBAAgBF,GACrB1Z,KAAK6Z,uBACR,CAED,oBAAAA,GACO7Z,KAAK6Y,WAAa7Y,KAAK2Y,UAAY3Y,KAAKgZ,WAAahZ,KAAKiZ,YAEzDjZ,KAAKsZ,YAAc,EACnBtZ,KAAK8Y,SAAAA,EACL9Y,KAAKyY,aAAarU,SAASuH,IACvBD,gBAAe,KAAKC,GAAW,GAAC,KAIrC3L,KAAK6Y,WAAa7Y,KAAK2Y,UAAY3Y,KAAKgZ,WAAahZ,KAAKiZ,WAAajZ,KAAKqY,OAC3ErY,KAAK6Y,UAAY,EACjB7Y,KAAK8Y,SAAAA,EACL9Y,KAAKoY,WAAWhU,SAAS8U,IAClBA,EAAUC,SAASW,OAClBZ,EAAUC,SAASY,gBACtB,IAGZ,CAED,eAAAH,CAAgBF,GACZ,MAAMM,EAAgBha,KAAK6Y,UAAYa,EACpC1Z,KAAK6Y,UAAY7Y,KAAKgZ,YAGzBhZ,KAAKoY,WAAWhU,SAAQ,CAAC8U,EAAWe,KACNrX,MAAvBsW,EAAUgB,YACThB,EAAUgB,UAAY,GAEtBla,KAAKma,mBAAmBjB,EAAWc,GAIpCA,EAAgBha,KAAKgZ,WAAaE,EAAUgB,UAC3ChB,EAAUC,SAASM,QAAQzZ,KAAK6Y,UAAY7Y,KAAKgZ,WAAaE,EAAUgB,WAExEhB,EAAUC,SAASM,QAAQC,GAN3B1Z,KAAKoa,eAAe,CAACjB,SAAUD,EAAUC,SAAUe,UAAWhB,EAAUgB,UAAWD,KAAMA,GAAOD,EAOnG,GAER,CAED,kBAAAG,CAAmBjB,EAAqDc,GAIpE,OAH0BpX,MAAvBsW,EAAUgB,YACThB,EAAUgB,UAAY,GAEvBla,KAAK6Y,UAAY7Y,KAAKgZ,YAAcE,EAAUgB,WAAala,KAAK6Y,UAAY7Y,KAAKgZ,YAAcE,EAAUgB,UAAYhB,EAAUC,SAASkB,QAI9I,CAED,cAAAD,CAAelB,EAAmEc,GACpDpX,MAAvBsW,EAAUgB,YACThB,EAAUgB,UAAY,GAEvBla,KAAK6Y,UAAY7Y,KAAKgZ,WAAaE,EAAUgB,UAAYhB,EAAUC,SAASkB,UAAYL,EAAgBha,KAAKgZ,WAAaE,EAAUgB,UAAYhB,EAAUC,SAASkB,UAIlKnB,EAAUC,SAASM,QAAQP,EAAUgB,UAAYhB,EAAUC,SAASkB,UAAYL,EAAgBha,KAAKgZ,YAE5G,CAED,cAAAsB,GACIta,KAAK8Y,SAAAA,EACL9Y,KAAKoY,WAAWhU,SAAS8U,IACrBA,EAAUC,SAASmB,gBAAgB,GAE1C,CAED,eAAAC,GACIva,KAAK8Y,SAAAA,EACL9Y,KAAKoY,WAAWhU,SAAS8U,IACrBA,EAAUC,SAASoB,iBAAiB,GAE3C,CAED,cAAAR,GACI/Z,KAAK8Y,SAAAA,EACL9Y,KAAKqP,QACLrP,KAAK6Y,UAAY,EACjB7Y,KAAKoY,WAAWhU,SAAS8U,IACrBA,EAAUC,SAASY,gBAAgB,GAE1C,CAED,aAAAS,GACIxa,KAAK8Y,SAAAA,EACL9Y,KAAK6Y,UAAY7Y,KAAK2Y,UAAY,GAClC3Y,KAAKoY,WAAWhU,SAAS8U,IACrBA,EAAUC,SAASqB,eAAe,IAEtCxa,KAAK+P,UACR,CAED,YAAIsK,GACA,OAAOra,KAAK2Y,UAAY3Y,KAAKgZ,WAAahZ,KAAKiZ,SAClD,CAED,YAAIoB,CAASA,GACT,GAAGA,EAAW,EACV,OAEJ,MACMI,EAAQJ,GADWra,KAAK2Y,UAAY3Y,KAAKgZ,WAAahZ,KAAKiZ,WAE3DyB,EAAe1a,KAAKgZ,WAAayB,EACjCE,EAAc3a,KAAKiZ,UAAYwB,EACrCza,KAAKgZ,WAAa0B,EAClB1a,KAAKiZ,UAAY0B,EACjB3a,KAAKoY,WAAWhU,SAAS8U,IACKtW,MAAvBsW,EAAUgB,YACThB,EAAUgB,UAAY,GAE1BhB,EAAUgB,WAAaO,EACvB,MAAMG,EAAc1B,EAAUC,SAASkB,SAAWI,EAClDvB,EAAUC,SAAS0B,qBAAqBD,EAAY,IAExD5a,KAAK4Y,oBACahW,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,oBAAAD,CAAqBD,GACjB,GAAGA,EAAc,EACb,OAEJ,MACMH,EAAQG,GADW5a,KAAK2Y,UAAY3Y,KAAKgZ,WAAahZ,KAAKiZ,WAE3DyB,EAAe1a,KAAKgZ,WAAayB,EACjCE,EAAc3a,KAAKiZ,UAAYwB,EACrCza,KAAKgZ,WAAa0B,EAClB1a,KAAKiZ,UAAY0B,EACjB3a,KAAKoY,WAAWhU,SAAS8U,IACKtW,MAAvBsW,EAAUgB,YACThB,EAAUgB,UAAY,GAE1BhB,EAAUgB,WAAaO,EACvB,MAAMG,EAAc1B,EAAUC,SAASkB,SAAWI,EAClDvB,EAAUC,SAAS0B,qBAAqBD,EAAY,IAExD5a,KAAK4Y,mBACR,CAED,mBAAAmC,GACI/a,KAAK8Y,SAAAA,EACL9Y,KAAKoY,WAAWhU,SAAS8U,IACrBA,EAAUC,SAAS4B,qBAAqB,GAE/C,CAED,eAAAC,GACI,OAAOhb,KAAK2Y,SACf,CAED,KAAAtJ,GACIrP,KAAK+Y,UACL/Y,KAAKoY,WAAWhU,SAAS8U,IACrBA,EAAUC,SAAS9J,OAAO,GAEjC,CAED,QAAAU,GACI/P,KAAKwY,aACLxY,KAAKoY,WAAWhU,SAAS8U,IACrBA,EAAUC,SAASpJ,UAAU,GAEpC,CAED,YAAAkL,CAAahB,EAAcf,EAAqBgB,EAAoB,EAAGgB,EAAwB,UAC3F,GAAGlb,KAAKoY,WAAWvG,IAAIoI,GACnB,OAEJ,QAAG,IAAAja,KAAKsY,QAAwBtY,KAAKsY,OAAO6C,kBAAkBjC,GAC1D,OAEJlZ,KAAKoY,WAAWhI,IAAI6J,EAAM,CAACd,SAAUD,EAAWgB,UAAWA,IAC3DhB,EAAUE,UAAUpZ,MACjBA,KAAK6Y,UAAYqB,GAChBhB,EAAUO,QAAQzZ,KAAK6Y,UAAYqB,GAEvC,MAAMkB,EAAUlB,EAAYhB,EAAUmB,SACtCra,KAAK2Y,UAAY1Z,KAAKD,IAAIgB,KAAK2Y,UAAWyC,GACxBxY,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,iBAAAO,CAAkBpB,EAAcf,EAAqBoC,EAAmBC,EAAgB,GACpF,IAAIC,EAAiBxb,KAAKoY,WAAW3H,IAAI6K,GACzC,GAAqB1Y,MAAlB4Y,EACC,OAE2B5Y,MAA5B4Y,EAAetB,YACdsB,EAAetB,UAAY,GAE/B,IAAIA,EAAYsB,EAAetB,UAAYsB,EAAerC,SAASkB,SACnEH,GAAaqB,EACbvb,KAAKib,aAAahB,EAAMf,EAAWgB,GACnCla,KAAK4Y,oBACahW,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,kBAAAW,CAAmBxB,EAAcf,EAAqBwC,EAAoBH,GACtE,IAAII,EAAkB3b,KAAKoY,WAAW3H,IAAIiL,GAC1C,GAAsB9Y,MAAnB+Y,EACC,OAE4B/Y,MAA7B+Y,EAAgBzB,YACfyB,EAAgBzB,UAAY,GAEhC,IAAIA,EAAYyB,EAAgBzB,UAAYqB,EAC5Cvb,KAAKib,aAAahB,EAAMf,EAAWgB,GACnCla,KAAK4Y,oBACahW,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,kBAAAc,CAAmB3B,EAAcf,EAAqB2C,EAAoBC,EAAoB,GAC1F,IAAIC,EAAkB/b,KAAKoY,WAAW3H,IAAIoL,GAC1C,GAAsBjZ,MAAnBmZ,EACC,OAE4BnZ,MAA7BmZ,EAAgB7B,YACf6B,EAAgB7B,UAAY,GAEhC,IAAIA,EAAY6B,EAAgB7B,UAGhC,GAFAA,GAAa4B,EACb9b,KAAKib,aAAahB,EAAMf,EAAWgB,GAC/BA,EAAY,EAAE,CACd,MAAM8B,EAAW,EAAI9B,EACrBla,KAAKoY,WAAWhU,SAAS8U,IACKtW,MAAvBsW,EAAUgB,YACThB,EAAUgB,UAAY,GAE1BhB,EAAUgB,WAAa8B,CAAQ,GAEtC,CACDhc,KAAK4Y,oBACahW,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,eAAAmB,CAAgBhC,GACZ,IAAIf,EAAYlZ,KAAKoY,WAAW3H,IAAIwJ,GACtBja,KAAKoY,WAAW8D,OAAOjC,KAEjBrX,MAAbsW,GACCA,EAAUC,SAASK,eAEvBxZ,KAAK4Y,oBACahW,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,iBAGvB,CAED,SAAIS,CAAMY,GACNnc,KAAKgZ,WAAamD,EACAvZ,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,SAAIS,GACA,OAAOvb,KAAKgZ,UACf,CAED,QAAIoD,CAAKC,GACLrc,KAAKiZ,UAAYoD,EACCzZ,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,QAAIsB,GACA,OAAOpc,KAAKiZ,SACf,CAED,WAAAqD,GACItc,KAAKgZ,WAAa,EACApW,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,UAAAyB,GACIvc,KAAKiZ,UAAY,EACCrW,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,cAAAA,GACO9a,KAAKwc,wBAGRxc,KAAK4Y,oBACahW,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,iBAEnB,CAED,iBAAAlC,GACI5Y,KAAK2Y,UAAY,EACjB3Y,KAAKoY,WAAWhU,SAAS8U,IACKtW,MAAvBsW,EAAUgB,YACThB,EAAUgB,UAAY,GAE1B,MAAMkB,EAAUlC,EAAUgB,UAAYhB,EAAUC,SAASkB,SACzDra,KAAK2Y,UAAY1Z,KAAKD,IAAIgB,KAAK2Y,UAAWyC,EAAQ,GAEzD,CAED,SAAItB,GACA,OAAO9Z,KAAKqY,IACf,CAED,SAAIyB,CAAMzB,GACNrY,KAAKqY,KAAOA,CACf,CAED,mBAAAmE,GACI,MAAMC,EAA0B,GAChCA,EAAYvQ,KAAKlM,MACjB,MAAM0c,EAAU,IAAIC,IACpB,KAAMF,EAAY1J,OAAS,GAAE,CACzB,MAAM6J,EAAUH,EAAYI,MAC5B,GAAcja,MAAXga,EAAH,CAGA,GAAGF,EAAQ7K,IAAI+K,GACX,OAAM,EAEVF,EAAQI,IAAIF,GACTA,aAAmBzE,GAClByE,EAAQxE,WAAWhU,SAAS8U,IACxBuD,EAAYvQ,KAAKgN,EAAUC,SAAS,GAP3C,CAUJ,CACD,OAAM,CACT,CAED,eAAA4D,CAAgB1E,GACZrY,KAAKqY,MAAAA,EACLrY,KAAKoY,WAAWhU,SAAS8U,IACrBA,EAAUC,SAASW,OAAAA,CAAY,GAEtC,CAED,iBAAAqB,CAAkB6B,GACd,QAAG,IAAAhd,KAAKsY,OACJ,OAAOtY,KAAKsY,OAAO6C,kBAAkB6B,GAEzC,MAAMP,EAA0B,GAChCA,EAAYvQ,KAAKlM,MACjB,MAAM0c,EAAU,IAAIC,IACpB,KAAMF,EAAY1J,OAAS,GAAE,CACzB,MAAM6J,EAAUH,EAAYI,MAC5B,GAAcja,MAAXga,EAAH,CAGA,GAAGA,GAAWI,EACV,OAAM,EAEPN,EAAQ7K,IAAI+K,KAGfF,EAAQI,IAAIF,GACTA,aAAmBzE,GAClByE,EAAQxE,WAAWhU,SAAS8U,IACxBuD,EAAYvQ,KAAKgN,EAAUC,SAAS,IAV3C,CAaJ,CACD,OAAM,CACT,CAED,KAAA8D,CAAMtR,GAEF,OADA3L,KAAKyY,aAAavM,KAAKP,GAChB,KACH3L,KAAKyY,aAAezY,KAAKyY,aAAatM,QAAQC,GAAOA,GAAMT,GAAAA,CAElE,CAED,OAAAuR,CAAQvR,GAEJ,OADA3L,KAAK0Y,eAAexM,KAAKP,GAClB,KACH3L,KAAK0Y,eAAiB1Y,KAAK0Y,eAAevM,QAAQC,GAAOA,GAAMT,GAAAA,CAEtE,CAED,UAAAwR,GACInd,KAAKyY,aAAe,EACvB,CAED,YAAA2E,GACIpd,KAAK0Y,eAAiB,EACzB,CAED,WAAI2E,GACA,OAAOrd,KAAK8Y,OACf,QAGQwE,EAyBT,WAAA/X,CAAYgY,EAA0BC,EAAyCC,EAAyDpD,EAAmB,IAAMhC,GAAAA,EAAuBC,OAAAA,EAAmDS,EAAoB,SAAQP,EAAuB,SAAQkF,EAAyCC,GAVvU3d,KAASmc,UAAW,EACpBnc,KAAQqc,SAAW,EAEnBrc,KAAOqZ,SAAAA,EACPrZ,KAAYyY,aAAe,GAC3BzY,KAAc0Y,eAAe,GAC7B1Y,KAAwB4d,yBAAe,GAK3C5d,KAAK2Y,UAAY0B,EACjBra,KAAK6d,UAAYN,EACjBvd,KAAKyd,0BAA4BA,EACjCzd,KAAKwd,oBAAsBA,EAC3Bxd,KAAK0d,OAASA,EACd1d,KAAK8Y,SAAAA,EACL9Y,KAAK6Y,UAAYwB,EAAW,GAC5Bra,KAAK8d,qBAAuB,EAC5B9d,KAAKqY,KAAOA,EACZrY,KAAK+Y,QAAUA,EACf/Y,KAAKwY,WAAaA,EAClBxY,KAAKsY,OAASA,EACdtY,KAAKsZ,WAAa,EAClBtZ,KAAK+d,oBAAsB/d,KAAKge,UAAU,EAAGT,EAAWE,EAC3D,CAED,aAAAlE,CAAcF,GACVrZ,KAAKqZ,QAAUA,CAClB,CAED,cAAAU,GACI/Z,KAAK6Y,UAAY,EACjB7Y,KAAK8d,qBAAuB,EAC5B9d,KAAK8Y,SAAAA,EACL9Y,KAAKwd,oBAAoBxd,KAAK+d,qBAC9B/d,KAAKqP,OACR,CAED,aAAAmL,GACIxa,KAAK8Y,SAAAA,EACL9Y,KAAK6Y,UAAY7Y,KAAK2Y,UAAY3Y,KAAKqc,SAAWrc,KAAKmc,UAAY,GACnEnc,KAAK+P,UACR,CAED,cAAAuK,GACIta,KAAK8Y,SAAAA,CACR,CAED,eAAAyB,GACIva,KAAK8Y,SAAAA,CACR,CAED,WAAIuE,GACA,OAAOrd,KAAK8Y,OACf,CAED,OAAAW,CAAQC,GACJ,KAAmB,GAAhB1Z,KAAK8Y,SAAmB9Y,KAAK6Y,UAAY,KAG5C7Y,KAAK6Y,WAAaa,EAIf1Z,KAAK6Y,UAAYa,GAAa,GAAKA,EAAY,GAQ9C1Z,KAAK0Y,eAAetU,SAASuH,IACzBD,gBAAe,KAAKC,GAAW,GAAC,IAGrC3L,KAAK6Y,WAAa7Y,KAAKmc,YAAcnc,KAAK6Y,WAAa7Y,KAAKmc,UAAYnc,KAAK2Y,UAAY3Y,KAAKqc,UAAYrc,KAAK6Y,UAAYa,GAAa1Z,KAAKmc,UAAYnc,KAAK2Y,UAAY3Y,KAAKqc,WAAU,CAKrLrc,KAAK6Y,UAAYa,GAAa1Z,KAAKmc,WAAgC,IAAnBnc,KAAKmc,WAAmBzC,EAAY,GACnF1Z,KAAK4d,yBAAyBxZ,SAASuH,IACnCD,gBAAe,KAAKC,GAAW,GAAC,IAGxC,IAKIvE,EALA6W,GAAuBje,KAAK6Y,UAAY7Y,KAAKmc,WAAcnc,KAAc,UACzEke,EAAmBle,KAAK0d,OAAOO,GAWnC,GAVIA,EAAsB,IACtBC,EAAmBle,KAAK0d,OAAO,IAK/BtW,EADDpH,KAAK8d,qBAAuB9d,KAAK6d,UAAU9K,QAAU/S,KAAK8d,sBAAwB,IAAM9d,KAAKqZ,QAAU,EAAIrZ,KAAK6d,UAAU7d,KAAK8d,sBAAsB9F,YAAckG,EAAmBle,KAAK6d,UAAU7d,KAAK8d,sBAAsB9F,YAAckG,GACrOle,KAAK6d,UAAU7d,KAAK8d,sBAAsB1W,MAE1CpH,KAAKge,UAAUE,EAAkBle,KAAK6d,UAAW7d,KAAKyd,2BAE/Dzd,KAAKqZ,QACJ,KAAMrZ,KAAK8d,sBAAwB,GAAK,EAAI9d,KAAK6d,UAAU7d,KAAK8d,sBAAsB9F,YAAckG,GAChGle,KAAK8d,sBAAwB,OAGjC,KAAM9d,KAAK8d,qBAAuB9d,KAAK6d,UAAU9K,QAAU/S,KAAK6d,UAAU7d,KAAK8d,sBAAsB9F,YAAckG,GAC/Gle,KAAK8d,sBAAwB,EAGrC9d,KAAKwd,oBAAoBpW,GACtBpH,KAAK6Y,WAAa7Y,KAAK2Y,UAAY3Y,KAAKqc,SAAWrc,KAAKmc,YAEvDnc,KAAKsZ,YAAc,EACnBtZ,KAAKyY,aAAarU,SAASuH,IACvBD,gBAAe,KAAKC,GAAW,GAAC,IAEpC3L,KAAK8Y,SAAAA,GAEL9Y,KAAK6Y,WAAa7Y,KAAK2Y,UAAY3Y,KAAKmc,UAAYnc,KAAKqc,UAAarc,KAAKqY,OAE3ErY,KAAK6Y,UAAY,EACjB7Y,KAAK8Y,SAAAA,EACL9Y,KAAK8d,qBAAuB,EAEnC,CACJ,CAED,SAAAE,CAAUG,EAAyBN,EAA0BJ,GACzD,GAAGU,EAAkB,EACjB,OAAGne,KAAKqZ,QACGoE,EAA0B5F,KAAKsG,EAAiBN,EAAU,GAAIA,EAAU,IAE5EJ,EAA0B5F,KAAKsG,EAAiBN,EAAUA,EAAU9K,OAAS,GAAI8K,EAAUA,EAAU9K,OAAS,IAEzH,GAAGoL,EAAkB,EACjB,OAAGne,KAAKqZ,QACGoE,EAA0B5F,KAAKsG,EAAiBN,EAAUA,EAAU9K,OAAS,GAAI8K,EAAUA,EAAU9K,OAAS,IAElH0K,EAA0B5F,KAAKsG,EAAiBN,EAAU,GAAIA,EAAU,IAEnF,IAAIrM,EAAO,EACP4M,EAAQP,EAAU9K,OAAS,EAC/B,KAAOvB,GAAQ4M,GAAO,CAClB,IAAIC,EAAM7M,EAAOvS,KAAKqf,OAAOF,EAAQ5M,GAAQ,GAC7C,MAAM+M,EAAgBve,KAAKqZ,QAAU,EAAIwE,EAAUQ,GAAKrG,WAAa6F,EAAUQ,GAAKrG,WACpF,GAAGuG,GAAiBJ,EAChB,OAAON,EAAUQ,GAAKjX,MAChBmX,EAAgBJ,EACnBne,KAAKqZ,QACJ+E,EAAQC,EAAM,EAEd7M,EAAO6M,EAAM,EAGdre,KAAKqZ,QACJ7H,EAAO6M,EAAM,EAEbD,EAAQC,EAAM,CAGzB,CACE7M,EAAOqM,EAAU9K,OAAS,IAEzBvB,EAAOqM,EAAU9K,OAAS,GAE9B,MAAMyL,EAAwBxe,KAAKqZ,QAAU,CAACrB,WAAY,EAAI6F,EAAUrM,GAAMwG,WAAY5Q,MAAOyW,EAAUrM,GAAMpK,OAASyW,EAAUrM,EAAO,GACrIiN,EAAqBze,KAAKqZ,QAAU,CAACrB,WAAY,EAAI6F,EAAUrM,EAAO,GAAGwG,WAAY5Q,MAAOyW,EAAUrM,EAAO,GAAGpK,OAASyW,EAAUrM,GAEzI,OAAOiM,EAA0B5F,KAAKsG,EAAiBK,EAAuBC,EACjF,CAED,KAAApP,GAEIrP,KAAK+Y,SACR,CAED,QAAAhJ,GACI/P,KAAKwY,YACR,CAED,SAAIsB,GACA,OAAO9Z,KAAKqY,IACf,CAED,SAAIyB,CAAMzB,GACNrY,KAAKqY,KAAOA,CACf,CAED,YAAIgC,GACA,OAAOra,KAAK2Y,UAAY3Y,KAAKmc,UAAYnc,KAAKqc,QACjD,CAED,YAAIhC,CAASA,GACT,GAAGA,EAAW,EACV,OAEJ,MACMI,EAAQJ,GADWra,KAAK2Y,UAAY3Y,KAAKmc,UAAYnc,KAAKqc,UAE1D3B,EAAe1a,KAAKmc,UAAY1B,EAChCE,EAAc3a,KAAKqc,SAAW5B,EACpCza,KAAKmc,UAAYzB,EACjB1a,KAAKqc,SAAW1B,EAChB3a,KAAK2Y,UAAY3Y,KAAK2Y,UAAY8B,EAChB7X,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,oBAAAD,CAAqBD,GACjB,GAAGA,EAAc,EACb,OAEJ,MACMH,EAAQG,GADW5a,KAAK2Y,UAAY3Y,KAAKmc,UAAYnc,KAAKqc,UAE1D3B,EAAe1a,KAAKmc,UAAY1B,EAChCE,EAAc3a,KAAKqc,SAAW5B,EACpCza,KAAKmc,UAAYzB,EACjB1a,KAAKqc,SAAW1B,EAChB3a,KAAK2Y,UAAYiC,CACpB,CAED,mBAAAG,GACI/a,KAAK8Y,SAAAA,EACL9Y,KAAKwd,oBAAoBxd,KAAK6d,UAAU,GAAGzW,OAC3CpH,KAAK8d,qBAAuB,EAC5B9d,KAAKqP,OACR,CAED,MAAAqP,GACI1e,KAAK8Y,SAAAA,EACL9Y,KAAK6Y,UAAY7Y,KAAK2Y,UAAY3Y,KAAKqc,SAAWrc,KAAKmc,UAAY,GACnEnc,KAAK8d,qBAAuB,CAC/B,CAED,SAAIvC,GACA,OAAOvb,KAAKmc,SACf,CAED,SAAIZ,CAAMY,GACNnc,KAAKmc,UAAYA,EACCvZ,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,QAAIsB,GACA,OAAOpc,KAAKqc,QACf,CAED,QAAID,CAAKC,GACLrc,KAAKqc,SAAWA,EACEzZ,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,gBAAI6D,GACA,OAAO3e,KAAK2Y,SACf,CAED,gBAAIgG,CAAatE,GACbra,KAAK2Y,UAAY0B,EACCzX,MAAf5C,KAAKsY,QACJtY,KAAKsY,OAAOwC,gBAEnB,CAED,SAAA1B,CAAUd,GACNtY,KAAKsY,OAASA,CACjB,CAED,YAAAkB,GACIxZ,KAAKsY,YAAAA,CACR,CAED,aAAIiF,CAAUA,GACVvd,KAAK6d,UAAYN,CACpB,CAED,aAAIA,GACA,OAAOvd,KAAK6d,SACf,CAED,gBAAIe,GACA,OAAO5e,KAAK0d,MACf,CAED,gBAAIkB,CAAalB,GACb1d,KAAK0d,OAASA,CACjB,CAED,KAAAT,CAAMtR,GAEF,OADA3L,KAAKyY,aAAavM,KAAKP,GAChB,KACH3L,KAAKyY,aAAezY,KAAKyY,aAAatM,QAAQC,GAAOA,GAAMT,GAAAA,CAElE,CAED,OAAAuR,CAAQvR,GAEJ,OADA3L,KAAK0Y,eAAexM,KAAKP,GAClB,KACH3L,KAAK0Y,eAAiB1Y,KAAK0Y,eAAevM,QAAQC,GAAOA,GAAMT,GAAAA,CAEtE,CAED,iBAAAkT,CAAkBlT,GAEd,OADA3L,KAAK4d,yBAAyB1R,KAAKP,GAC5B,KACH3L,KAAK4d,yBAA2B5d,KAAK4d,yBAAyBzR,QAAQC,GAAOA,GAAMT,GAAAA,CAE1F,CAED,UAAAwR,GACInd,KAAKyY,aAAe,EACvB,CAED,YAAA2E,GACIpd,KAAK0Y,eAAiB,EACzB,EH7wBC,SAAUoG,EAActf,GAC1B,OAAa,IAANA,EACH,EACM,IAANA,EACA,EACAA,EAAI,GAAMP,KAAKqY,IAAI,EAAG,GAAK9X,EAAI,IAAM,GACpC,EAAIP,KAAKqY,IAAI,GAAI,GAAK9X,EAAI,KAAO,CAC1C,ClB9DgB,SAAAZ,EAAeC,EAAmBC,GAC9C,OAYY,SAAsBD,EAAmBC,GACrD,gBAAGA,KAGAD,GAAa,YAAMC,SAAAA,IACpBA,EAAgBE,KAAqBF,EAAgBE,IAAMH,QAAAA,IACxDC,EAAgBI,KAAqBJ,EAAgBI,IAAML,GAKpE,CAvBOE,CAAsBF,EAAWC,SAAAA,IAAoBA,IAGrDA,EAAgBE,MACfH,EAAYI,KAAKC,IAAIJ,EAAgBE,IAAKH,IAE3CC,EAAgBI,MACfL,EAAYI,KAAKD,IAAIF,EAAgBI,IAAKL,KANnCA,CASf,CCxBA,MAAMM,EAAS,gBAAOC,CAAUC,EAAEC,GAAG,OAAO,MAAMD,EAAEE,GAAG,MAAMD,EAAEC,EAAE,CAACC,EAAEH,EAAEG,EAAEF,EAAEE,EAAEC,EAAEJ,EAAEI,EAAEH,EAAEG,IAAI,MAAMJ,EAAEE,GAAG,MAAMD,EAAEC,IAAI,MAAMF,EAAEE,IAAIF,EAAEE,EAAE,GAAG,MAAMD,EAAEC,IAAID,EAAEC,EAAE,IAAI,CAACC,EAAEH,EAAEG,EAAEF,EAAEE,EAAEC,EAAEJ,EAAEI,EAAEH,EAAEG,EAAEF,EAAEF,EAAEE,EAAED,EAAEC,GAAG,CAAC,gBAAOG,CAAUL,EAAEC,GAAG,OAAO,MAAMD,EAAEE,GAAG,MAAMD,EAAEC,EAAE,CAACC,EAAEH,EAAEG,EAAEF,EAAEE,EAAEC,EAAEJ,EAAEI,EAAEH,EAAEG,IAAI,MAAMJ,EAAEE,GAAG,MAAMD,EAAEC,IAAI,MAAMF,EAAEE,IAAIF,EAAEE,EAAE,GAAG,MAAMD,EAAEC,IAAID,EAAEC,EAAE,IAAI,CAACC,EAAEH,EAAEG,EAAEF,EAAEE,EAAEC,EAAEJ,EAAEI,EAAEH,EAAEG,EAAEF,EAAEF,EAAEE,EAAED,EAAEC,GAAG,CAAC,6BAAOI,CAAuBN,EAAEC,GAAG,OAAO,MAAMD,EAAEE,EAAE,CAACC,EAAEH,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,GAAG,CAACE,EAAEH,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,EAAEC,EAAEF,EAAEE,EAAED,EAAE,CAAC,2BAAOM,CAAqBP,EAAEC,GAAG,OAAO,GAAGA,EAAE,CAACE,EAAEH,EAAEG,EAAEC,EAAEJ,EAAEI,GAAG,MAAMJ,EAAEE,EAAE,CAACC,EAAEH,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,GAAG,CAACE,EAAEH,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,EAAEC,EAAEF,EAAEE,EAAED,EAAE,CAAC,gBAAOO,CAAUR,GAAG,OAAO,MAAMA,EAAEE,IAAIF,EAAEE,EAAE,GAAGN,KAAKa,KAAKT,EAAEG,EAAEH,EAAEG,EAAEH,EAAEI,EAAEJ,EAAEI,EAAEJ,EAAEE,EAAEF,EAAEE,EAAE,CAAC,iBAAOQ,CAAWV,GAAG,OAAO,MAAMA,EAAEE,IAAIF,EAAEE,EAAE,GAAG,GAAGS,KAAKH,UAAUR,GAAG,CAACG,EAAEH,EAAEG,EAAEQ,KAAKH,UAAUR,GAAGI,EAAEJ,EAAEI,EAAEO,KAAKH,UAAUR,GAAGE,EAAEF,EAAEE,EAAES,KAAKH,UAAUR,IAAI,CAACG,EAAE,EAAEC,EAAE,EAAEF,EAAE,EAAE,CAAC,iBAAOU,CAAWZ,EAAEC,GAAG,OAAO,MAAMD,EAAEE,GAAG,MAAMD,EAAEC,EAAEF,EAAEG,EAAEF,EAAEE,EAAEH,EAAEI,EAAEH,EAAEG,GAAG,MAAMJ,EAAEE,GAAG,MAAMD,EAAEC,IAAI,MAAMF,EAAEE,IAAIF,EAAEE,EAAE,GAAG,MAAMD,EAAEC,IAAID,EAAEC,EAAE,IAAIF,EAAEG,EAAEF,EAAEE,EAAEH,EAAEI,EAAEH,EAAEG,EAAEJ,EAAEE,EAAED,EAAEC,EAAE,CAAC,mBAAOW,CAAab,EAAEC,GAAG,OAAO,MAAMD,EAAEE,GAAG,MAAMD,EAAEC,IAAI,MAAMF,EAAEE,IAAIF,EAAEE,EAAE,GAAG,MAAMD,EAAEC,IAAID,EAAEC,EAAE,IAAI,CAACC,EAAEH,EAAEI,EAAEH,EAAEC,EAAEF,EAAEE,EAAED,EAAEG,EAAEA,EAAEJ,EAAEE,EAAED,EAAEE,EAAEH,EAAEG,EAAEF,EAAEC,EAAEA,EAAEF,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,EAAEE,EAAE,CAAC,wBAAOW,CAAkBd,EAAEC,GAAG,OAAOU,KAAKD,WAAWC,KAAKN,UAAUJ,EAAED,GAAG,CAAC,kBAAOe,CAAYC,EAAMC,GAAO,MAAM,CAACd,EAAEa,EAAMb,EAAEP,KAAKsB,IAAID,GAAOD,EAAMZ,EAAER,KAAKuB,IAAIF,GAAOb,EAAEY,EAAMb,EAAEP,KAAKuB,IAAIF,GAAOD,EAAMZ,EAAER,KAAKsB,IAAID,GAAO,CAAC,wBAAOG,CAAkBJ,EAAMK,GAAgC,MAAM,CAAClB,EAAEa,EAAMb,EAAEP,KAAKsB,IAAIG,GAAgCL,EAAMZ,EAAER,KAAKuB,IAAIE,GAAgCjB,GAAGY,EAAMb,EAAEP,KAAKuB,IAAIE,GAAgCL,EAAMZ,EAAER,KAAKsB,IAAIG,GAAgC,CAAC,mBAAOC,CAAatB,EAAEC,GAAG,OAAOL,KAAK2B,MAAMvB,EAAEG,EAAEF,EAAEG,EAAEJ,EAAEI,EAAEH,EAAEE,EAAEH,EAAEG,EAAEF,EAAEE,EAAEH,EAAEI,EAAEH,EAAEG,EAAE,CAAC,8BAAOoB,CAAwBR,EAAMS,EAAOR,GAAO,IAAIS,EAASf,KAAKI,YAAYJ,KAAKN,UAAUW,EAAMS,GAAQR,GAAO,OAAON,KAAKZ,UAAU2B,EAASD,EAAO,CAAC,4BAAOE,CAAsB3B,EAAEC,GAAG,OAAOU,KAAKH,UAAUG,KAAKN,UAAUL,EAAEC,GAAG,CAAC,gBAAO2B,CAAUZ,GAAO,MAAM,CAACb,EAAEa,EAAMb,EAAEC,GAAGY,EAAMZ,EAAEF,EAAEc,EAAMd,EAAE,CAAC,0BAAO2B,CAAoB7B,EAAEC,EAAE6B,GAAG,OAAO,MAAM9B,EAAEE,GAAG,MAAMD,EAAEC,EAAE,CAACC,EAAEH,EAAEG,GAAGF,EAAEE,EAAEH,EAAEG,GAAG2B,EAAE1B,EAAEJ,EAAEI,GAAGH,EAAEG,EAAEJ,EAAEI,GAAG0B,GAAG,CAAC3B,EAAEH,EAAEG,GAAGF,EAAEE,EAAEH,EAAEG,GAAG2B,EAAE1B,EAAEJ,EAAEI,GAAGH,EAAEG,EAAEJ,EAAEI,GAAG0B,EAAE5B,EAAEF,EAAEE,GAAGD,EAAEC,EAAEF,EAAEE,GAAG4B,EAAE,CAAC,cAAOC,CAAQ/B,EAAEC,GAAG,OAAO,MAAMD,EAAEE,IAAIF,EAAEE,EAAE,GAAG,MAAMD,EAAEC,IAAID,EAAEC,EAAE,GAAGF,EAAEG,GAAGF,EAAEE,GAAGH,EAAEI,GAAGH,EAAEG,GAAGJ,EAAEE,GAAGD,EAAEC,CAAC,CAAC,0BAAO8B,CAAoBC,EAAWC,EAASC,EAAYC,GAAW,MAAMC,GAAWD,EAAUjC,EAAEgC,EAAYhC,IAAI8B,EAAW7B,EAAE+B,EAAY/B,IAAIgC,EAAUhC,EAAE+B,EAAY/B,IAAI6B,EAAW9B,EAAEgC,EAAYhC,GAAGmC,GAAaF,EAAUhC,EAAE+B,EAAY/B,IAAI8B,EAAS/B,EAAE8B,EAAW9B,IAAIiC,EAAUjC,EAAEgC,EAAYhC,IAAI+B,EAAS9B,EAAE6B,EAAW7B,GAAG,GAAG,IAAIkC,EAAY,MAAM,CAACC,YAAW,GAAI,MAAMT,EAAEO,EAAUC,EAAY,OAAOR,GAAG,GAAGA,GAAG,EAAE,CAACS,YAAW,EAAGC,aAAa1C,EAAS+B,oBAAoBI,EAAWC,EAASJ,GAAGW,OAAOX,GAAG,CAACS,YAAW,EAAG,ECGppF,SAAAG,EAAsBC,EAAuBC,EAAsBC,EAAuBC,EAAwBC,EAAyBC,GAKvJ,IAAIC,EAAoB,CAAC9C,EAAG0C,EAAgB,EAAGzC,EAAG0C,EAAiB,GAC/DI,EAAcpD,EAASO,UAAUuC,EAAeK,GAGpD,OAFAC,EAAcpD,EAASQ,uBAAuB4C,EAAa,EAAIH,GAC/DG,EAAcpD,EAASiB,YAAYmC,EAAaF,GACzClD,EAASC,UAAU4C,EAAgBO,EAC9C,CAEgB,SAAAC,EAAmBnC,EAAc6B,EAAuBC,EAAwBM,EAAuBL,EAAyBC,GAC5I,IAAIC,EAAoB,CAAC9C,EAAG0C,EAAgB,EAAGzC,EAAG0C,EAAiB,GAC/DI,EAAcpD,EAASO,UAAUW,EAAOiC,GAG5C,OAFAC,EAAcpD,EAASQ,uBAAuB4C,EAAa,EAAIH,GAC/DG,EAAcpD,EAASiB,YAAYmC,EAAaF,GACzClD,EAASC,UAAUqD,EAAgBF,EAC9C,CC4CgB,SAAAU,GAAW5C,EAAcsC,GACrC,GAxDY,SAAiBtC,EAAcsC,GAC3C,GAAiBC,MAAdD,EAEC,OAAM,EAEV,IAAIE,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EAcJ,OAZqBJ,MAAlBD,EAAW3D,KAAwC4D,MAApBD,EAAW3D,IAAIQ,GAAkBa,EAAMb,GAAKmD,EAAW3D,IAAIQ,KACzFsD,GAAAA,IAEiBF,MAAlBD,EAAWzD,KAAwC0D,MAApBD,EAAWzD,IAAIM,GAAkBa,EAAMb,GAAKmD,EAAWzD,IAAIM,KACzFqD,GAAAA,IAEiBD,MAAlBD,EAAW3D,KAAwC4D,MAApBD,EAAW3D,IAAIS,GAAkBY,EAAMZ,GAAKkD,EAAW3D,IAAIS,KACzFsD,GAAAA,IAEiBH,MAAlBD,EAAWzD,KAAwC0D,MAApBD,EAAWzD,IAAIO,GAAkBY,EAAMZ,GAAKkD,EAAWzD,IAAIO,KACzFuD,GAAAA,GAEGH,GAAYC,GAAaC,GAAWC,CAC/C,CAiCON,CAAiBrC,EAAOsC,IAA6BC,MAAdD,EACtC,OAAOtC,EAEX,IAAI6C,EAAkB,CAAC1D,EAAGa,EAAMb,EAAGC,EAAGY,EAAMZ,GACxC0D,EAAQR,EAAWzD,IAkBvB,OAjBa0D,MAATO,IACcP,MAAXO,EAAM3D,IACL0D,EAAgB1D,EAAIP,KAAKD,IAAIkE,EAAgB1D,EAAG2D,EAAM3D,IAE5CoD,MAAXO,EAAM1D,IACLyD,EAAgBzD,EAAIR,KAAKD,IAAIkE,EAAgBzD,EAAG0D,EAAM1D,KAG9D0D,EAAQR,EAAW3D,IACP4D,MAATO,IACeP,MAAXO,EAAM3D,IACL0D,EAAgB1D,EAAIP,KAAKC,IAAIgE,EAAgB1D,EAAG2D,EAAM3D,IAE5CoD,MAAXO,EAAM1D,IACLyD,EAAgBzD,EAAIR,KAAKC,IAAIgE,EAAgBzD,EAAG0D,EAAM1D,KAGvDyD,CACX,CA0BgB,SAAAI,GAAyBjD,EAAc6B,EAAuBC,EAAwBQ,EAAoCP,EAAyBC,GAC/J,GAAiBO,MAAdD,EACC,OAAOtC,EAEX,IAAIkD,EAAgBxB,EAAsB1B,EAAO,CAACb,EAAG,EAAGC,EAAG0C,GAAiBD,EAAeC,EAAgBC,EAAiBC,GACxHmB,EAAmBzB,EAAsB1B,EAAO,CAACb,EAAG,EAAGC,EAAG,GAAIyC,EAAeC,EAAgBC,EAAiBC,GAC9GoB,EAAiB1B,EAAsB1B,EAAO,CAACb,EAAG0C,EAAezC,EAAG0C,GAAiBD,EAAeC,EAAgBC,EAAiBC,GACrIqB,EAAoB3B,EAAsB1B,EAAO,CAACb,EAAG0C,EAAezC,EAAG,GAAIyC,EAAeC,EAAgBC,EAAiBC,GAC3HsB,EAAuBV,GAAWM,EAAeZ,GACjDiB,EAAwBX,GAAWQ,EAAgBd,GACnDkB,EAA0BZ,GAAWO,EAAkBb,GACvDmB,EAA2Bb,GAAWS,EAAmBf,GAKzDoB,EAAQ,CAJY5E,EAASO,UAAUiE,EAAsBJ,GACxCpE,EAASO,UAAUkE,EAAuBH,GACxCtE,EAASO,UAAUmE,EAAyBL,GAC3CrE,EAASO,UAAUoE,EAA0BJ,IAErEM,EAAW/E,KAAKgF,IAAIF,EAAM,GAAGvE,GAC7B0E,EAAWjF,KAAKgF,IAAIF,EAAM,GAAGtE,GAC7B0E,EAAQJ,EAAM,GAWlB,OAVAA,EAAMK,SAASC,IACRpF,KAAKgF,IAAII,EAAK7E,GAAKwE,IAClBA,EAAW/E,KAAKgF,IAAII,EAAK7E,GACzB2E,EAAM3E,EAAI6E,EAAK7E,GAEhBP,KAAKgF,IAAII,EAAK5E,GAAKyE,IAClBA,EAAWjF,KAAKgF,IAAII,EAAK5E,GACzB0E,EAAM1E,EAAI4E,EAAK5E,EAClB,IAEEN,EAASC,UAAUiB,EAAO8D,EACrC,CChJgB,SAAAG,GAAcC,EAAkBC,GAC5C,GAkBY,SAAqBD,EAAkBC,GACnD,QAAG,IAAAA,EACC,OAAM,EAEV,MAAMG,EAAqBC,GAAUJ,EAAeK,MAAON,GACrDO,EAAmBF,GAAUJ,EAAeO,IAAKR,GACvD,QAAIC,EAAeQ,MAAQL,EAAqB,GAAKG,EAAmB,KAASN,EAAeQ,MAAQL,EAAqB,GAAKG,EAAmB,GAIzJ,CA5BOL,CAAqBF,EAAUC,SAAAA,IAAmBA,EACjD,OAAOD,EAEXA,EAAWG,GAAyBH,GACpC,MAAMI,EAAqBC,GAAUJ,EAAeK,MAAON,GACrDO,EAAmBF,GAAUJ,EAAeO,IAAKR,GACvD,OAAIC,EAAeQ,MAAQL,EAAqB,GAAKG,EAAmB,KAASN,EAAeQ,MAAQL,EAAqB,GAAKG,EAAmB,GAE9I7F,KAAKgF,IAAIU,KAAwB1F,KAAKgF,IAAIa,GAElCN,EAAeS,kBAAoBT,EAAeK,MAAQL,EAAeO,IAE9D9F,KAAKgF,IAAIU,GAAsB1F,KAAKgF,IAAIa,GACvCN,EAAeK,MAAQL,EAAeO,IAE1DR,CACX,CAcM,SAAUG,GAAyBpE,GAMrC,QAJAA,GAA2B,EAAVrB,KAAKiG,IAGK,EAAVjG,KAAKiG,KAAqB,EAAVjG,KAAKiG,GAE1C,CAEgB,SAAAN,GAAUO,EAAcC,GAEpCD,EAAOT,GAAyBS,GAEhC,IAAIE,GADJD,EAAKV,GAAyBU,IACTD,EASrB,OAPGE,EAAYpG,KAAKiG,KAChBG,IAAyB,EAAVpG,KAAKiG,GAASG,IAG9BA,GAAapG,KAAKiG,KACjBG,GAAwB,EAAVpG,KAAKiG,IAEhBG,CACX,CAQC,MC1CqBC,GAIlB,WAAAC,CAAYC,OAAAA,GACRxF,KAAKyF,aAAeD,CACvB,CAGD,eAAIA,CAAYE,GACZ1F,KAAKyF,aAAeC,CACvB,CAED,eAAIF,GACA,OAAOxF,KAAKyF,YACf,CAED,YAAAE,CAAaD,GAET,OADA1F,KAAKyF,aAAeC,EACbA,CACV,CAED,WAAAE,CAAYC,EAAqBC,GAC1B9F,KAAKyF,cACJzF,KAAKyF,aAAaG,YAAYC,EAAQC,EAE7C,CAED,WAAAC,CAAYF,EAAqB1B,GAC1BnE,KAAKyF,cACJzF,KAAKyF,aAAaM,YAAYF,EAAQ1B,EAE7C,EAGC,MAAO6B,WAAuBV,GAGhC,WAAAC,CAAYC,OAAAA,GACRS,MAAMT,EACT,CAEQ,WAAAI,CAAYC,EAAqBC,GACtCD,EAAOK,YAAYJ,EACtB,CAEQ,WAAAC,CAAYF,EAAqBxB,GACtCwB,EAAOK,YAAY/G,EAASC,UAAUyG,EAAOM,SAAU9B,GAC1D,EAGC,MAAO+B,WAAqBd,GAI9B,WAAAC,CAAYC,OAAAA,GACRS,MAAMT,GAHFxF,KAAeqG,iBAAAA,CAItB,CAED,kBAAIC,CAAeA,GACftG,KAAKqG,gBAAkBC,CAC1B,CAED,kBAAIA,GACA,OAAOtG,KAAKqG,eACf,CAED,WAAAT,CAAYC,EAAqBC,GAC7B,IAAIS,EAAatD,GAAW6C,EAAaD,EAAOlD,YAC7C3C,KAAKqG,kBACJE,EAAajD,GAAyBwC,EAAaD,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOlD,WAAYkD,EAAOhH,UAAWgH,EAAOtB,WAEhJ0B,MAAML,YAAYC,EAAQU,EAC7B,CAED,WAAAR,CAAYF,EAAqB1B,GAC7B,IAAIqC,EAAcrH,EAASO,UAAUuD,GAAW9D,EAASC,UAAUyG,EAAOM,SAAUhC,GAAQ0B,EAAOlD,YAAakD,EAAOM,UACpHnG,KAAKqG,kBACJG,EAAcrH,EAASO,UAAU4D,GAAyBnE,EAASC,UAAUyG,EAAOM,SAAUhC,GAAQ0B,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOlD,WAAYkD,EAAOhH,UAAWgH,EAAOtB,UAAWsB,EAAOM,WAErNF,MAAMF,YAAYF,EAAQW,EAC7B,EAIC,MAAOC,WAA2BnB,GAOpC,WAAAC,CAAYC,OAAAA,GACRS,MAAMT,GANFxF,KAAqB0G,uBAAAA,EACrB1G,KAAqB2G,uBAAAA,EACrB3G,KAA6B4G,+BAAAA,EAC7B5G,KAA6B6G,+BAAAA,CAIpC,CAED,wBAAIC,CAAqBA,GACrB9G,KAAK0G,sBAAwBI,CAChC,CAED,wBAAIA,GACA,OAAO9G,KAAK0G,qBACf,CAED,wBAAIK,CAAqBA,GACrB/G,KAAK2G,sBAAwBI,CAChC,CAED,wBAAIA,GACA,OAAO/G,KAAK2G,qBACf,CAED,gCAAIK,CAA6BA,GAC7BhH,KAAK4G,8BAAgCI,CACxC,CAED,gCAAIA,GACA,OAAOhH,KAAK4G,6BACf,CAED,gCAAIK,CAA6BA,GAC7BjH,KAAK6G,8BAAgCI,CACxC,CAED,gCAAIA,GACA,OAAOjH,KAAK6G,6BACf,CAED,mCAAAK,CAAoCrB,EAAqB1B,GACrD,GAAGnE,KAAK0G,uBAAyB1G,KAAK2G,sBAClC,MAAO,CAACnH,EAAG,EAAGC,EAAG,GAErB,GAAGO,KAAK4G,+BAAiC5G,KAAK6G,8BAC1C,MAAO,CAACrH,EAAG,EAAGC,EAAG,GAQrB,GANGO,KAAK0G,wBACJvC,EAAM3E,EAAI,GAEXQ,KAAK2G,wBACJxC,EAAM1E,EAAI,GAEXO,KAAK4G,8BAA8B,CAClC,MAAMO,EAAehI,EAASiB,YAAY,CAACZ,EAAG,EAAGC,EAAG,GAAIoG,EAAOtB,UACzD6C,EAAQjI,EAASc,WAAWkH,EAAahD,GAC/CA,EAAQhF,EAASQ,uBAAuBwH,EAAaC,EACxD,CACD,GAAGpH,KAAK6G,8BAA8B,CAClC,MAAMQ,EAAkBlI,EAASiB,YAAY,CAACZ,EAAG,EAAGC,EAAG,GAAIoG,EAAOtB,UAC5D6C,EAAQjI,EAASc,WAAWoH,EAAgBlD,GAClDA,EAAQhF,EAASQ,uBAAuB0H,EAAgBD,EAC3D,CACD,OAAOjD,CACV,CAEQ,WAAAyB,CAAYC,EAAqBC,GACtC,IAAI3B,EAAQhF,EAASO,UAAUoG,EAAaD,EAAOM,UAEnD,GADAhC,EAAQnE,KAAKkH,oCAAoCrB,EAAQ1B,GACzC,IAAZA,EAAM3E,GAAuB,IAAZ2E,EAAM1E,EACvB,OAEJ,MAAM6H,EAAOnI,EAASC,UAAUyG,EAAOM,SAAUhC,GACjD8B,MAAML,YAAYC,EAAQyB,EAC7B,CAEQ,WAAAvB,CAAYF,EAAqB1B,GACvCA,EAAQnE,KAAKkH,oCAAoCrB,EAAQ1B,GACzD8B,MAAMF,YAAYF,EAAQ1B,EAC5B,EAGC,MAAOoD,WAAejC,GAMxB,gCAAI0B,CAA6BA,GAC7BhH,KAAKwH,mBAAmBR,6BAA+BA,CAC1D,CAED,gCAAIC,CAA6BA,GAC7BjH,KAAKwH,mBAAmBP,6BAA+BA,CAC1D,CAED,wBAAIH,CAAqBA,GACrB9G,KAAKwH,mBAAmBV,qBAAuBA,CAClD,CAED,wBAAIC,CAAqBA,GACrB/G,KAAKwH,mBAAmBT,qBAAuBA,CAClD,CAED,uBAAIU,CAAoBA,GAEpBzH,KAAKwH,mBAAmBV,qBAAuBW,EAC/CzH,KAAKwH,mBAAmBT,qBAAuBU,CAClD,CAED,uBAAIA,GACA,OAAOzH,KAAKwH,mBAAmBV,oBAClC,CAED,wBAAIA,GACA,OAAO9G,KAAKwH,mBAAmBV,oBAClC,CAED,wBAAIC,GACA,OAAO/G,KAAKwH,mBAAmBT,oBAClC,CAED,gCAAIC,GACA,OAAOhH,KAAKwH,mBAAmBR,4BAClC,CAED,gCAAIC,GACA,OAAOjH,KAAKwH,mBAAmBP,4BAClC,CAED,uBAAIS,CAAoBA,GACpB1H,KAAK2H,aAAarB,eAAiBoB,CACtC,CAED,uBAAIA,GACA,OAAO1H,KAAK2H,aAAarB,cAC5B,CAED,WAAAf,GACIU,QACAjG,KAAK4H,YAAc,IAAI5B,GACvBhG,KAAK2H,aAAe,IAAIvB,GACxBpG,KAAKwH,mBAAqB,IAAIf,GAC9BzG,KAAKwH,mBAAmB7B,aAAa3F,KAAK2H,cAAchC,aAAa3F,KAAK4H,aAC1E5H,KAAKwF,YAAcxF,KAAKwH,kBAC3B,QCjPiBK,GAIlB,WAAAtC,CAAYC,OAAAA,GACRxF,KAAKyF,aAAeD,CACvB,CAED,eAAIA,CAAYE,GACZ1F,KAAKyF,aAAeC,CACvB,CAED,eAAIF,GACA,OAAOxF,KAAKyF,YACf,CAED,YAAAE,CAAaD,GAET,OADA1F,KAAKyF,aAAeC,EACbA,CACV,CAED,cAAAoC,CAAejC,EAAqBkC,GAC7B/H,KAAKyF,cACJzF,KAAKyF,aAAaqC,eAAejC,EAAQkC,EAEhD,CAED,cAAAC,CAAenC,EAAqB1B,GAC7BnE,KAAKyF,cACJzF,KAAKyF,aAAauC,eAAenC,EAAQ1B,EAEhD,EAIC,MAAO8D,WAA4BJ,GAErC,WAAAtC,CAAYC,OAAAA,GACRS,OACH,CAED,cAAA6B,CAAejC,EAAqBkC,GAChCA,EAAiBrD,GAAyBqD,GAC1ClC,EAAOqC,YAAYH,EACtB,CAED,cAAAC,CAAenC,EAAqBxB,GAChC,MAAM8D,EAActC,EAAOtB,SACrBwD,EAAiBrD,GAAyByD,EAAc9D,GAC9DA,EAAOO,GAAUuD,EAAaJ,GAC9BlC,EAAOqC,YAAYH,EACtB,EAGC,MAAOK,WAAmCP,GAI5C,WAAAtC,CAAYC,OAAAA,GACRS,MAAMT,GAHFxF,KAAiBqI,mBAAAA,CAIxB,CAED,oBAAIC,GACA,OAAOtI,KAAKqI,iBACf,CAED,oBAAIC,CAAiBA,GACjBtI,KAAKqI,kBAAoBC,CAC5B,CAED,cAAAN,CAAenC,EAAqBxB,GAC7BrE,KAAKqI,mBAGRpC,MAAM+B,eAAenC,EAAQxB,EAChC,CAED,cAAAyD,CAAejC,EAAqBkC,GAC7B/H,KAAKqI,mBAGRpC,MAAM6B,eAAejC,EAAQkC,EAChC,EAGC,MAAOQ,WAA6BV,GAGtC,WAAAtC,CAAYC,OAAAA,GACRS,MAAMT,EACT,CAED,cAAAwC,CAAenC,EAAqBxB,GAChC,MAAM8D,EAActC,EAAOtB,SAC3B,IAAIwD,EAAiBrD,GAAyByD,EAAc9D,GAC5D0D,EAAiBzD,GAAcyD,EAAgBlC,EAAO2C,oBACtDnE,EAAOO,GAAUuD,EAAaJ,GAC9B9B,MAAM+B,eAAenC,EAAQxB,EAChC,CAED,cAAAyD,CAAejC,EAAqBkC,GAEhCA,EAAiBzD,GADjByD,EAAiBrD,GAAyBqD,GACKlC,EAAO2C,oBACtDvC,MAAM6B,eAAejC,EAAQkC,EAChC,EAGC,MAAOU,WAAoBZ,GAM7B,oBAAIS,GACA,OAAOtI,KAAK0I,oBAAoBJ,gBACnC,CAED,oBAAIA,CAAiBA,GACjBtI,KAAK0I,oBAAoBJ,iBAAmBA,CAC/C,CAED,WAAA/C,CAAYC,OAAAA,GACRS,MAAMT,GACNxF,KAAK2I,aAAe,IAAIV,GACxBjI,KAAK4I,cAAgB,IAAIL,GAAqBvI,KAAK2I,cACnD3I,KAAK0I,oBAAsB,IAAIN,GAA2BpI,KAAK4I,cAClE,CAED,cAAAZ,CAAenC,EAAqBxB,GAChCrE,KAAK0I,oBAAoBV,eAAenC,EAAQxB,GAChD4B,MAAM+B,eAAenC,EAAQxB,EAChC,CAED,cAAAyD,CAAejC,EAAqBkC,GAChC/H,KAAK0I,oBAAoBZ,eAAejC,EAAQkC,GAChD9B,MAAM6B,eAAejC,EAAQkC,EAChC,QClIiBc,GAIlB,WAAAtD,CAAYC,OAAAA,GACRxF,KAAKyF,aAAeD,CACvB,CAED,eAAIA,CAAYE,GACZ1F,KAAKyF,aAAeC,CACvB,CAED,eAAIF,GACA,OAAOxF,KAAKyF,YACf,CAED,YAAAE,CAAaD,GAET,OADA1F,KAAKyF,aAAeC,EACbA,CACV,CAED,YAAAoD,CAAajD,EAAqBkD,GAC3B/I,KAAKyF,cACJzF,KAAKyF,aAAaqD,aAAajD,EAAQkD,EAE9C,CAED,YAAAC,CAAanD,EAAqB1B,GAC3BnE,KAAKyF,cACJzF,KAAKyF,aAAauD,aAAanD,EAAQ1B,EAE9C,CAED,cAAA8E,CAAepD,EAAqBT,EAAY8D,GACzClJ,KAAKyF,cACJzF,KAAKyF,aAAawD,eAAepD,EAAQT,EAAI8D,EAEpD,CAED,cAAAC,CAAetD,EAAqB1B,EAAe+E,GAC5ClJ,KAAKyF,cACJzF,KAAKyF,aAAa0D,eAAetD,EAAQ1B,EAAO+E,EAEvD,EAGC,MAAOE,WAAwBP,GAIjC,WAAAtD,CAAY8D,EAAwB7D,OAAAA,GAChCS,MAAMT,GACNxF,KAAKqJ,WAAaA,CACrB,CAED,eAAI7D,CAAYE,GACZ1F,KAAKyF,kBAAAA,CACR,CAED,YAAAqD,CAAajD,EAAqBkD,GAC9BlD,EAAOyD,aAAaP,EACvB,CAED,YAAAC,CAAanD,EAAqBxB,GAC9B,MACM0E,EADelD,EAAOhH,UACMwF,EAClCwB,EAAOyD,aAAaP,EACvB,CAED,cAAAE,CAAepD,EAAqBT,EAAY8D,GAC5C,IAAIK,EAAwB/G,EAAmB0G,EAAIrD,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOM,SAAUN,EAAOhH,UAAWgH,EAAOtB,UAChHsB,EAAOhH,UACjCgH,EAAOyD,aAAalE,GACpB,IAAIoE,EAAyBhH,EAAmB0G,EAAIrD,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOM,SAAUN,EAAOhH,UAAWgH,EAAOtB,UAC3I,MAAMF,EAAOlF,EAASO,UAAU6J,EAAuBC,GACvDxJ,KAAKqJ,WAAWtD,YAAYF,EAAQxB,EACvC,CAED,cAAA8E,CAAetD,EAAqB1B,EAAe+E,GAC/C,IAAIK,EAAwB/G,EAAmB0G,EAAIrD,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOM,SAAUN,EAAOhH,UAAWgH,EAAOtB,UAC1I,MACMwE,EADoBlD,EAAOhH,UACMsF,EACvC0B,EAAOyD,aAAaP,GACpB,IAAIS,EAAyBhH,EAAmB0G,EAAIrD,EAAO3D,cAAe2D,EAAO1D,eAAgB0D,EAAOM,SAAUN,EAAOhH,UAAWgH,EAAOtB,UAC3I,MAAMF,EAAOlF,EAASO,UAAU6J,EAAuBC,GACvDxJ,KAAKqJ,WAAWtD,YAAYF,EAAQxB,EACvC,EAGC,MAAOoF,WAAyBZ,GAGlC,WAAAtD,CAAYC,OAAAA,GACRS,MAAMT,EACT,CAED,YAAAsD,CAAajD,EAAqBkD,GAC9BA,EAAanK,EAAemK,EAAYlD,EAAO6D,gBAC/CzD,MAAM6C,aAAajD,EAAQkD,EAC9B,CAED,YAAAC,CAAanD,EAAqBxB,GAC9B,IAAI0E,EAAalD,EAAOhH,UAAYwF,EACpC0E,EAAanK,EAAemK,EAAYlD,EAAO6D,gBAC/CrF,EAAO0E,EAAalD,EAAOhH,UAC3BoH,MAAM+C,aAAanD,EAAQxB,EAC9B,CAED,cAAA4E,CAAepD,EAAqBT,EAAY8D,GAC5C9D,EAAKxG,EAAewG,EAAIS,EAAO6D,gBAC/BzD,MAAMgD,eAAepD,EAAQT,EAAI8D,EACpC,CAED,QAAAS,CAAS9D,EAAqB1B,EAAe+E,GACzC,IAAIH,EAAalD,EAAOhH,UAAYsF,EACpC4E,EAAanK,EAAemK,EAAYlD,EAAO6D,gBAC/CvF,EAAQ4E,EAAalD,EAAOhH,UAC5BoH,MAAMkD,eAAetD,EAAQ1B,EAAO+E,EACvC,EAGC,MAAOU,WAA+Bf,GAIxC,WAAAtD,CAAYC,OAAAA,GACRS,MAAMT,GAHFxF,KAAa6J,eAAAA,CAIpB,CAED,gBAAIC,CAAaA,GACb9J,KAAK6J,cAAgBC,CACxB,CAED,gBAAIA,GACA,OAAO9J,KAAK6J,aACf,CAED,YAAAf,CAAajD,EAAqBkD,GAC3B/I,KAAK6J,eAGR5D,MAAM6C,aAAajD,EAAQkD,EAC9B,CAED,YAAAC,CAAanD,EAAqBxB,GAC3BrE,KAAK6J,eAGR5D,MAAM+C,aAAanD,EAAQxB,EAC9B,CAED,cAAA4E,CAAepD,EAAqBT,EAAY8D,GACzClJ,KAAK6J,eAGR5D,MAAMgD,eAAepD,EAAQT,EAAI8D,EACpC,CAED,cAAAC,CAAetD,EAAqB1B,EAAe+E,GAC5ClJ,KAAK6J,eAGR5D,MAAMkD,eAAetD,EAAQ1B,EAAO+E,EACvC,EAGC,MAAOa,WAAgBlB,GAMzB,WAAAtD,CAAYyE,EAA4BxE,OAAAA,GACpCS,MAAMT,GACNxF,KAAK2I,aAAe,IAAIS,GAAgBY,GACxChK,KAAK4I,cAAgB,IAAIa,GACzBzJ,KAAK0I,oBAAsB,IAAIkB,GAC/B5J,KAAK0I,oBAAoB/C,aAAa3F,KAAK4I,eAAejD,aAAa3F,KAAK2I,cAC5E3I,KAAKyF,aAAezF,KAAK0I,mBAC5B,CAED,gBAAIoB,CAAaG,GACbjK,KAAK0I,oBAAoBoB,aAAeG,CAC3C,CAED,gBAAIH,GACA,OAAO9J,KAAK0I,oBAAoBoB,YACnC,CAED,YAAAhB,CAAajD,EAAqBkD,GAC9B9C,MAAM6C,aAAajD,EAAQkD,EAC9B,CAED,YAAAC,CAAanD,EAAqB1B,GAC9B8B,MAAM+C,aAAanD,EAAQ1B,EAC9B,CAED,cAAAgF,CAAetD,EAAqB1B,EAAe+E,GAC/CjD,MAAMkD,eAAetD,EAAQ1B,EAAO+E,EACvC,CAED,cAAAD,CAAepD,EAAqBT,EAAY8D,GAC5CjD,MAAMgD,eAAepD,EAAQT,EAAI8D,EACpC,EezEC,SAAU+N,GAAczX,GAC1B,MAAM0X,EAAK,OACLC,EAAK,KAEX,OAAI3X,EAAI,EAAI2X,EACDD,EAAK1X,EAAIA,EACTA,EAAI,EAAI2X,EACRD,GAAM1X,GAAK,IAAM2X,GAAM3X,EAAI,IAC3BA,EAAI,IAAM2X,EACVD,GAAM1X,GAAK,KAAO2X,GAAM3X,EAAI,MAE5B0X,GAAM1X,GAAK,MAAQ2X,GAAM3X,EAAI,OAE5C,CdwJkD,mBAApB2L,iBAAiCA,gBcxJ/D,yCAxEM,SAAqB3L,GAIvB,OAFW6X,QAEC7X,EAAIA,EAAIA,EAHT,QAGkBA,EAAIA,CACrC,eAkDM,SAAuBA,GACzB,OAAO,EAAIyX,GAAc,EAAIzX,EACjC,aAvEM,SAAqBA,GACvB,OAAO,EAAIP,KAAKa,KAAK,EAAIb,KAAKqY,IAAI9X,EAAG,GACzC,cAvDM,SAAsBA,GACxB,OAAOA,EAAIA,EAAIA,CACnB,gBAwFM,SAAwBA,GAC1B,MAAM+X,EAAM,EAAItY,KAAKiG,GAAM,EAE3B,OAAa,IAAN1F,EACH,EACM,IAANA,EACA,GACCP,KAAKqY,IAAI,EAAG,GAAK9X,EAAI,IAAMP,KAAKuB,KAAS,GAAJhB,EAAS,OAAS+X,EAChE,aA9DM,SAAqB/X,GACvB,OAAa,IAANA,EAAU,EAAIP,KAAKqY,IAAI,EAAG,GAAK9X,EAAI,GAC9C,gBA2CM,SAAwBA,GAC1B,MACMgY,EAAKH,UAEX,OAAO7X,EAAI,GACNP,KAAKqY,IAAI,EAAI9X,EAAG,IAAM,SAAeA,EAAIgY,GAAO,GAChDvY,KAAKqY,IAAI,EAAI9X,EAAI,EAAG,KAAOgY,EAAK,IAAU,EAAJhY,EAAQ,GAAKgY,GAAM,GAAK,CACvE,kBAqDM,SAA0BhY,GAC5B,OAAOA,EAAI,IACN,EAAIyX,GAAc,EAAI,EAAIzX,IAAM,GAChC,EAAIyX,GAAc,EAAIzX,EAAI,IAAM,CACzC,gBApFM,SAAwBA,GAC1B,OAAOA,EAAI,IACN,EAAIP,KAAKa,KAAK,EAAIb,KAAKqY,IAAI,EAAI9X,EAAG,KAAO,GACzCP,KAAKa,KAAK,EAAIb,KAAKqY,KAAK,EAAI9X,EAAI,EAAG,IAAM,GAAK,CACvD,iBAzDM,SAAyBA,GAC3B,OAAOA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAI,EAAIP,KAAKqY,KAAK,EAAI9X,EAAI,EAAG,GAAK,CACnE,mBAoGM,SAA2BA,GAC7B,MAAMiY,EAAM,EAAIxY,KAAKiG,GAAM,IAE3B,OAAa,IAAN1F,EACH,EACM,IAANA,EACA,EACAA,EAAI,IACFP,KAAKqY,IAAI,EAAG,GAAK9X,EAAI,IAAMP,KAAKuB,KAAK,GAAKhB,EAAI,QAAUiY,GAAO,EAChExY,KAAKqY,IAAI,GAAI,GAAK9X,EAAI,IAAMP,KAAKuB,KAAK,GAAKhB,EAAI,QAAUiY,GAAO,EAAI,CAC7E,gBA5EM,SAAwBjY,GAC1B,OAAa,IAANA,EACH,EACM,IAANA,EACA,EACAA,EAAI,GAAMP,KAAKqY,IAAI,EAAG,GAAK9X,EAAI,IAAM,GACpC,EAAIP,KAAKqY,IAAI,GAAI,GAAK9X,EAAI,KAAO,CAC1C,gBAvDM,SAAwBA,GAC1B,OAAOA,EAAI,GAAM,EAAIA,EAAIA,EAAI,EAAIP,KAAKqY,KAAK,EAAI9X,EAAI,EAAG,GAAK,CAC/D,iBAsBM,SAAyBA,GAC3B,OAAOA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAIP,KAAKqY,KAAK,EAAI9X,EAAI,EAAG,GAAK,CACvE,iBAUM,SAAyBA,GAC3B,OAAOA,EAAI,GAAM,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAIP,KAAKqY,KAAK,EAAI9X,EAAI,EAAG,GAAK,CAC5E,gBAlDM,SAAwBA,GAC1B,QAASP,KAAKsB,IAAItB,KAAKiG,GAAK1F,GAAK,GAAK,CAC1C,aAEM,SAAqBA,GACvB,OAAOA,EAAIA,CACf,cAsBM,SAAsBA,GACxB,OAAOA,EAAIA,EAAIA,EAAIA,CACvB,cAUM,SAAsBA,GACxB,OAAOA,EAAIA,EAAIA,EAAIA,EAAIA,CAC3B,aAlDM,SAAqBA,GACvB,OAAO,EAAIP,KAAKsB,IAAKf,EAAIP,KAAKiG,GAAM,EACxC,cAgGM,SAAsB1F,GAIxB,OAAO,EAFI6X,QAEKpY,KAAKqY,IAAI9X,EAAI,EAAG,GAHrB,QAG+BP,KAAKqY,IAAI9X,EAAI,EAAG,EAC9D,+BAtBM,SAAsBA,GACxB,OAAOP,KAAKa,KAAK,EAAIb,KAAKqY,IAAI9X,EAAI,EAAG,GACzC,eAvDM,SAAuBA,GACzB,OAAO,EAAIP,KAAKqY,IAAI,EAAI9X,EAAG,EAC/B,iBA8FM,SAAyBA,GAC3B,MAAM+X,EAAM,EAAItY,KAAKiG,GAAM,EAE3B,OAAa,IAAN1F,EACH,EACM,IAANA,EACA,EACAP,KAAKqY,IAAI,GAAI,GAAK9X,GAAKP,KAAKuB,KAAS,GAAJhB,EAAS,KAAQ+X,GAAM,CAChE,cApEM,SAAsB/X,GACxB,OAAa,IAANA,EAAU,EAAI,EAAIP,KAAKqY,IAAI,GAAI,GAAK9X,EAC/C,cAlDM,SAAsBA,GACxB,OAAO,GAAK,EAAIA,IAAM,EAAIA,EAC9B,eAsBM,SAAuBA,GACzB,OAAO,EAAIP,KAAKqY,IAAI,EAAI9X,EAAG,EAC/B,eAUM,SAAuBA,GACzB,OAAO,EAAIP,KAAKqY,IAAI,EAAI9X,EAAG,EAC/B,cAlDM,SAAsBA,GACxB,OAAOP,KAAKuB,IAAKhB,EAAIP,KAAKiG,GAAM,EACpC,SAsKM,SAAiB1F,GACnB,OAAOA,CACX,IClFO,MAAMuf,GAGT,WAAAxZ,CAAY0Q,GACRjW,KAAKkW,eAAiBD,CAC1B,CAEA,qBAAA+I,CAAsBnZ,EAAqBxB,GACvCrE,KAAKkW,eAAeW,cAAc9Q,YAAYF,EAAQxB,EAC1D,CAEA,qBAAA4a,CAAsBpZ,EAAqBiL,GACvC9Q,KAAKkW,eAAeW,cAAcjR,YAAYC,EAAQiL,EAC1D,CAEA,cAAAqF,CAAetQ,EAAqBxB,GAChCrE,KAAKkW,eAAegJ,yBACpBlf,KAAKkW,eAAeW,cAAc9Q,YAAYF,EAAQxB,EAE1D,CAEA,mBAAA8a,CAAoBtZ,EAAqBiL,GAEzC,EAIG,MAAMsO,GAIT,WAAA7Z,CAAY0Q,GACRjW,KAAKkW,eAAiBD,CAC1B,CAEA,qBAAA+I,CAAsBnZ,EAAqBxB,GAE3C,CAEA,qBAAA4a,CAAsBpZ,EAAqBiL,GAE3C,CAEA,cAAAqF,CAAetQ,EAAqBxB,GAChCrE,KAAKkW,eAAeW,cAAc9Q,YAAYF,EAAQxB,EAC1D,CAEA,mBAAA8a,CAAoBtZ,EAAqBiL,GAEzC,EAGG,MAAMuO,GAIT,WAAA9Z,CAAY0Q,GACRjW,KAAKkW,eAAiBD,CAC1B,CAEA,wBAAAqJ,CAAyBzZ,EAAqBgG,EAAyByF,GAEvE,CAEA,eAAA8E,CAAgBvQ,EAAqBgG,EAAyByF,GAC1DtR,KAAKkW,eAAeY,eAAe7N,eAAepD,EAAQA,EAAOhH,UAAYgN,EAAiByF,EAClG,CAEA,sBAAAiO,CAAuB1Z,EAAqBkD,EAAoBuI,GAEhE,ECrJJ,IAAI,GAAUkO,SAASC,eAAe,cAClCC,GAAQ,IC8BE,MAmBV,WAAAna,CAAYwI,GAXJ/N,KAAsB6O,wBAAAA,EACtB7O,KAAW2f,aAAAA,EAKX3f,KAAc4f,eAAW,EAM7B5f,KAAK0O,QAAUX,EACf/N,KAAK6f,mBAAqB,IAAIvL,EAAmB,IAAIhI,GACrDtM,KAAK6f,mBAAmBha,OAAO1D,eAAiB4L,EAAOf,OACvDhN,KAAK6f,mBAAmBha,OAAO3D,cAAgB6L,EAAOhB,MACtD/M,KAAK6f,mBAAmBha,OAAOlD,WAAa,CAACzD,IAAK,CAACM,GAAI,IAAMC,GAAI,KAAOT,IAAK,CAACQ,EAAG,IAAMC,EAAG,MAC1F,IAAIqgB,EAAU/R,EAAOgS,WAAW,MAChC,GAAc,MAAXD,EACC,MAAM,IAAItJ,MAAM,6BAGpBxW,KAAKggB,SAAWF,EAEhB,IAAIzW,EAAa,IAAI9B,EACjBgO,EAAc,IAAIxL,EAAQV,GAC1BqM,EAAkB,IAAIjN,EAE1BzI,KAAK8O,gBAEL9O,KAAKigB,kBAAoB,IAAIC,iBAAiBlgB,KAAKmgB,mBACnDngB,KAAKigB,kBAAkBG,QAAQpgB,KAAK0O,QAAS,CAAC2R,YAAW,IAEzDrgB,KAAKsgB,qBAAuB,IAAIC,eAAevgB,KAAKwgB,qBACpDxgB,KAAKsgB,qBAAqBF,QAAQZ,SAASiB,MAE3CzgB,KAAK0gB,mBAAqB,IAAI1K,EAAc,IAAIS,EAAYpN,EAAYkM,EAAaG,IAErF1V,KAAK2gB,aAAe,IAAI7S,EAAwB9N,KAAK0O,QAAS1O,KAAK6f,mBAAmBha,OAAQ7F,KAAK0gB,oBACnG1gB,KAAK6f,mBAAmBlL,kBAAkB3U,KAAK2gB,cAE/C3gB,KAAK4gB,eAAiB,IAAI5O,EAAqBhS,KAAK0O,QAAS1O,KAAK6f,mBAAmBha,OAAQ7F,KAAK0gB,oBAClG1gB,KAAK6f,mBAAmBlL,kBAAkB3U,KAAK4gB,gBAC/C5gB,KAAK6gB,wBACR,CAEO,sBAAAA,GACJ7gB,KAAK2gB,aAAatR,QAClBrP,KAAK4gB,eAAevR,OACvB,CAEO,oBAAAyR,GACJ9gB,KAAK4gB,eAAe7Q,WACpB/P,KAAK2gB,aAAa5Q,UACrB,CAMD,KAAAgR,GACI/gB,KAAK6gB,yBACL7gB,KAAKsgB,qBAAqBF,QAAQZ,SAASiB,MAC3CzgB,KAAKigB,kBAAkBG,QAAQpgB,KAAK0O,QAAS,CAAC2R,YAAW,GAC5D,CAMD,QAAAtQ,GACI/P,KAAK8gB,uBACL9gB,KAAKsgB,qBAAqBU,aAC1BhhB,KAAKigB,kBAAkBe,YAC1B,CAEO,aAAAlS,GACJ9O,KAAK2K,KAAO3K,KAAK2K,KAAKsF,KAAKjQ,MAC3BA,KAAKmgB,kBAAoBngB,KAAKmgB,kBAAkBlQ,KAAKjQ,MACrDA,KAAKwgB,oBAAsBxgB,KAAKwgB,oBAAoBvQ,KAAKjQ,KAC5D,CAMD,SAAI+M,CAAMA,GAKN,GAJA/M,KAAK0O,QAAQ3B,MAAQA,EACrB/M,KAAK6f,mBAAmBha,OAAO3D,cAAgB6K,EAG5C/M,KAAK0gB,mBAAmBzK,cAAcY,cAAcnP,oBAAoB,CAEvE,MAAMkM,EAAqBE,EAAwB9T,KAAK6f,mBAAmBha,OAAOlD,WAAY3C,KAAK0O,QAAQ3B,MAAO/M,KAAK0O,QAAQ1B,OAAQhN,KAAK6f,mBAAmBha,OAAOtB,UAC7I3B,MAAtBgR,GAAmCF,EAAgC1T,KAAK6f,mBAAmBha,OAAO6D,eAAgBkK,IAEjH5T,KAAK6f,mBAAmBha,OAAOyH,gBAAgBsG,EAEtD,CACJ,CAED,SAAI7G,GACA,OAAO/M,KAAK0O,QAAQ3B,KACvB,CAMD,UAAIC,CAAOA,GAGP,GAFAhN,KAAK0O,QAAQ1B,OAASA,EACtBhN,KAAK6f,mBAAmBha,OAAO1D,eAAiB6K,EAC7ChN,KAAK0gB,mBAAmBzK,cAAcY,cAAcnP,oBAAoB,CACvE,MAAMkM,EAAqBO,EAAyBnU,KAAK6f,mBAAmBha,OAAOlD,WAAY3C,KAAK0O,QAAQ3B,MAAO/M,KAAK0O,QAAQ1B,OAAQhN,KAAK6f,mBAAmBha,OAAOtB,UAC9I3B,MAAtBgR,GAAmCF,EAAgC1T,KAAK6f,mBAAmBha,OAAO6D,eAAgBkK,IACjH5T,KAAK6f,mBAAmBha,OAAOyH,gBAAgBsG,EAEtD,CACJ,CAED,UAAI5G,GACA,OAAOhN,KAAK0O,QAAQ1B,MACvB,CAKD,yBAAIkB,CAAsB+S,GACtBjhB,KAAK6O,uBAAyBoS,EAC9BjhB,KAAK2gB,aAAazS,sBAAwB+S,EAC1CjhB,KAAK4gB,eAAe1S,sBAAwB+S,CAC/C,CAED,yBAAI/S,GACA,OAAOlO,KAAK6O,sBACf,CAMD,cAAIqS,GACA,OAAOlhB,KAAK2f,WACf,CAED,cAAIuB,CAAW9Z,GACXpH,KAAK2f,YAAcvY,EAChBpH,KAAK2f,cACJ3f,KAAK+M,MAAQ4C,OAAOwR,WACpBnhB,KAAKgN,OAAS2C,OAAOyR,YAE5B,CAKD,WAAItB,GACA,OAAO9f,KAAKggB,QACf,CAMD,uBAAItY,CAAoBN,GAEpB,GADApH,KAAK0gB,mBAAmBzK,cAAcY,cAAcnP,oBAAsBN,EACvEA,EAAM,CACL,MAAMwM,EZxNZ,SAAuCjR,EAAoCoR,EAAqBC,EAAsB3R,GACxH,MAAM0K,EAAQ3J,EAAmBT,GAC3BqK,EAAS3J,EAAoBV,GACnC,GAAYC,MAATmK,GAAgCnK,MAAVoK,EACrB,OAOJ,IAAIqU,EAAyBtN,EAJA9U,KAAKgF,IAAI8I,EAAQ9N,KAAKsB,IAAI8B,IAKnD+R,EAA0BL,EAJA9U,KAAKgF,IAAI+I,EAAS/N,KAAKsB,IAAI8B,IAKrDif,EAA0BtN,EAJA/U,KAAKgF,IAAI8I,EAAQ9N,KAAKuB,IAAI6B,IAKpDgS,EAA2BL,EAJA/U,KAAKgF,IAAI+I,EAAS/N,KAAKuB,IAAI6B,IAKvDgf,GAA0BxN,MACzBwN,EAAyB,GAE1BjN,GAA2BP,MAC1BO,EAA0B,GAE3BkN,GAA2BzN,MAC1ByN,EAA0B,GAE3BjN,GAA4BR,MAC3BQ,EAA2B,GAK/B,MAAMkN,EAAqBvN,EAAehH,EACpCwU,EAAoBzN,EAAchH,EAExC,OADqB9N,KAAKD,IAAIuiB,EAAoBC,EAAmBH,EAAwBjN,EAAyBkN,EAAyBjN,EAEnJ,CYsLuCoN,CAA6BzhB,KAAK6f,mBAAmBha,OAAOlD,WAAY3C,KAAK0O,QAAQ3B,MAAO/M,KAAK0O,QAAQ1B,OAAQhN,KAAK6f,mBAAmBha,OAAOtB,UAClJ3B,MAAtBgR,GAAmCF,EAAgC1T,KAAK6f,mBAAmBha,OAAO6D,eAAgBkK,IACjH5T,KAAK6f,mBAAmBha,OAAOyH,gBAAgBsG,EAEtD,CACJ,CAED,uBAAIlM,GACA,OAAO1H,KAAK0gB,mBAAmBzK,cAAcY,cAAcnP,mBAC9D,CAMD,eAAIga,CAAYC,GACZ3hB,KAAK2gB,aAAa5Q,WAClB/P,KAAK6f,mBAAmBhL,oBAAoB7U,KAAK2gB,cACjDgB,EAAStS,QACTrP,KAAK2gB,aAAegB,EACpB3hB,KAAK6f,mBAAmBlL,kBAAkB3U,KAAK2gB,cAC/C3gB,KAAK2gB,aAAa9a,OAAS7F,KAAK6f,mBAAmBha,MACtD,CAED,eAAI6b,GACA,OAAO1hB,KAAK2gB,YACf,CAMD,iBAAIiB,CAAcD,GACd3hB,KAAK4gB,eAAe7Q,WACpB/P,KAAK6f,mBAAmBhL,oBAAoB7U,KAAK4gB,gBACjDe,EAAStS,QACTrP,KAAK4gB,eAAiBe,EACtB3hB,KAAK6f,mBAAmBlL,kBAAkB3U,KAAK4gB,gBAC/C5gB,KAAK4gB,eAAe/a,OAAS7F,KAAK6f,mBAAmBha,MACxD,CAED,iBAAI+b,GACA,OAAO5hB,KAAK4gB,cACf,CAMD,UAAI/a,GACA,OAAO7F,KAAK6f,mBAAmBha,MAClC,CAED,UAAIA,CAAOA,GACPA,EAAO1D,eAAiBnC,KAAK0O,QAAQ1B,OACrCnH,EAAO3D,cAAgBlC,KAAK0O,QAAQ3B,MACpC/M,KAAK6f,mBAAmBha,OAASA,CACpC,CAMD,cAAIwD,CAAW3D,GACX1F,KAAK0gB,mBAAmBzK,cAAcY,cAAgBnR,CACzD,CAED,cAAI2D,GACA,OAAOrJ,KAAK0gB,mBAAmBzK,cAAcY,aAChD,CAMD,eAAItB,CAAY7P,GACZ1F,KAAK6f,mBAAmBtK,YAAc7P,CACzC,CAED,eAAI6P,GACA,OAAOvV,KAAK6f,mBAAmBtK,WAClC,CAOD,iBAAIU,CAAcA,GACd,IAAI4L,EAAiB7hB,KAAK0gB,mBAAmBzK,cAAcY,cACvDiL,EAAkB9hB,KAAK0gB,mBAAmBzK,cAAca,eACxDiL,EAAsB/hB,KAAK0gB,mBAAmBzK,cAAcc,mBAChEd,EAAcY,cAAgBgL,EAC9B5L,EAAca,eAAiBgL,EAC/B7L,EAAcc,mBAAqBgL,EACnC/hB,KAAK0gB,mBAAmBzK,cAAgBA,CAC3C,CAED,iBAAIA,GACA,OAAOjW,KAAK0gB,mBAAmBzK,aAClC,CAMM,IAAAtL,CAAKqX,GAEoBhiB,KAAK4f,eACjC5f,KAAK4f,eAAiBoC,EAGtBhiB,KAAKggB,SAASiC,QACd,MAAMC,EAAgBliB,KAAK6f,mBAAmBha,OAAOlD,WACrD,GtBxRaC,OADkBD,EsByRHuf,ItBrRXtf,MAAlBD,EAAW3D,KAAsC4D,MAAlBD,EAAWzD,KAGtB0D,MAApBD,EAAW3D,IAAIQ,GAAsCoD,MAApBD,EAAW3D,IAAIS,GAAsCmD,MAApBD,EAAWzD,IAAIM,GAAsCoD,MAApBD,EAAWzD,IAAIO,EsBmR7G,MAAM,IAAI+W,MAAM,mGtB1RtB,IAAiC7T,EsB4R/B3C,KAAKggB,SAASmC,UAAUD,EAAchjB,IAAIM,GAAI0iB,EAAchjB,IAAIO,EAAGyiB,EAAcljB,IAAIQ,EAAI0iB,EAAchjB,IAAIM,IAAK0iB,EAAcljB,IAAIS,EAAIyiB,EAAchjB,IAAIO,IAExJO,KAAKggB,SAASoC,UAAWpiB,KAAK0O,QAAQ3B,MAAQ,EAAG/M,KAAK0O,QAAQ1B,OAAS,GACvEhN,KAAKggB,SAASvF,MAAMza,KAAK6f,mBAAmBha,OAAOhH,UAAWmB,KAAK6f,mBAAmBha,OAAOhH,WACzFmB,KAAK6O,wBACL7O,KAAKggB,SAASqC,QAAQriB,KAAK6f,mBAAmBha,OAAOtB,UACrDvE,KAAKggB,SAASoC,WAAWpiB,KAAK6f,mBAAmBha,OAAOM,SAAS3G,GAAKQ,KAAK6f,mBAAmBha,OAAOM,SAAS1G,KAE9GO,KAAKggB,SAASqC,OAAOriB,KAAK6f,mBAAmBha,OAAOtB,UACpDvE,KAAKggB,SAASoC,WAAWpiB,KAAK6f,mBAAmBha,OAAOM,SAAS3G,EAAIQ,KAAK6f,mBAAmBha,OAAOM,SAAS1G,GAEpH,CAEO,gCAAAyT,CAAiCK,EAAiCC,GACtE,MAAMC,EAAMtU,EAASO,UAAU8T,EAAoBD,GACnD,OAAGvT,KAAK6O,uBACG,CAACrP,EAAGiU,EAAIjU,EAAGC,EAAGgU,EAAIhU,GAElB,CAACD,EAAGiU,EAAIjU,EAAGC,GAAIgU,EAAIhU,EAEjC,CAOD,6BAAA6iB,CAA8B9O,GAC1B,GAAGxT,KAAK6O,uBAAuB,CAC3B,MAAM0T,EAAwBviB,KAAKkT,iCAAiC,CAACzT,EAAGO,KAAK0O,QAAQ6C,wBAAwBE,IAAKjS,EAAGQ,KAAK0O,QAAQ6C,wBAAwBC,MAAOgC,GACjK,OAAOxT,KAAK6f,mBAAmBha,OAAO6H,+BAA+B6U,EACxE,CAAM,CACH,MAAMA,EAAwBviB,KAAKkT,iCAAiC,CAACzT,EAAGO,KAAK0O,QAAQ6C,wBAAwBG,OAAQlS,EAAGQ,KAAK0O,QAAQ6C,wBAAwBC,MAAOgC,GACpK,OAAOxT,KAAK6f,mBAAmBha,OAAO6H,+BAA+B6U,EACxE,CACJ,CAQD,EAAAvW,CAAgCC,EAAcN,GAC1C,OAAO3L,KAAK6f,mBAAmBha,OAAOmG,GAAGC,EAAWN,EACvD,CASD,OAAA4K,CAAyCtK,EAAcN,GACnD,OAAO3L,KAAK0gB,mBAAmBnK,QAAQtK,EAAWN,EACrD,CAKD,sBAAI6W,GACA,OtBhSF,SAAkC7f,GACpC,MAAM8f,EAAoBpf,EAAoBV,GAC9C,OAA4BC,MAArB6f,EAAiCA,EAAoB,QAChE,CAHM,CsBgSiCziB,KAAK6f,mBAAmBha,OAAOlD,WACjE,CAKD,qBAAI+f,GACA,OtBnTF,SAAiC/f,GACnC,MAAMggB,EAAmBvf,EAAmBT,GAC5C,OAA2BC,MAApB+f,EAAgCA,EAAmB,QAC9D,CAHM,CsBmTgC3iB,KAAK6f,mBAAmBha,OAAOlD,WAChE,CAEO,iBAAAwd,CAAkByC,EAAiC3V,GACvD,IAAI,IAAI4V,KAAYD,EAChB,GAAqB,eAAlBC,EAASC,KACR,GAA8B,UAA3BD,EAASE,eAGR,GADA/iB,KAAK6f,mBAAmBha,OAAO3D,cAAgBlC,KAAK0O,QAAQ3B,MACzD/M,KAAK0H,oBAAoB,CACxB,MAAMkM,EAAqBE,EAAwB9T,KAAK6f,mBAAmBha,OAAOlD,WAAY3C,KAAK0O,QAAQ3B,MAAO/M,KAAK0O,QAAQ1B,OAAQhN,KAAK6f,mBAAmBha,OAAOtB,UACnKmP,EAAgC1T,KAAK6f,mBAAmBha,OAAO6D,eAAgBkK,IAC9E5T,KAAK6f,mBAAmBha,OAAOyH,gBAAgBsG,EAEtD,OACE,GAA8B,WAA3BiP,EAASE,gBAEf/iB,KAAK6f,mBAAmBha,OAAO1D,eAAiBnC,KAAK0O,QAAQ1B,OAC1DhN,KAAK0H,qBAAoB,CACxB,MAAMkM,EAAqBO,EAAyBnU,KAAK6f,mBAAmBha,OAAOlD,WAAY3C,KAAK0O,QAAQ3B,MAAO/M,KAAK0O,QAAQ1B,OAAQhN,KAAK6f,mBAAmBha,OAAOtB,UACpKmP,EAAgC1T,KAAK6f,mBAAmBha,OAAO6D,eAAgBkK,IAC9E5T,KAAK6f,mBAAmBha,OAAOyH,gBAAgBsG,EAEtD,CAIhB,CAEO,mBAAA4M,GACDxgB,KAAK2f,cACJ3f,KAAK+M,MAAQ4C,OAAOwR,WACpBnhB,KAAKgN,OAAS2C,OAAOyR,YAE5B,CAED,0BAAA4B,CAA2B5b,GACvB,MAAM8a,EAAgBliB,KAAK6f,mBAAmBha,OAAOlD,WAC/CsgB,EAA0BrgB,MAAjBsf,OAAAA,EAAwCA,EAAchjB,IAC/DgkB,EAA6BtgB,MAAVqgB,OAAAA,EAAiCA,EAAOzjB,EAMjE,GALuBoD,MAApBsgB,EACCljB,KAAK6f,mBAAmBha,OAAO+H,yBAAyBxG,EAAOA,GAE/DpH,KAAK6f,mBAAmBha,OAAO+H,wBAAwBsV,EAAkBA,EAA2B,EAAR9b,GAE7FpH,KAAK0H,oBAAoB,CACxB,MAAMkM,EAAqBE,EAAwB9T,KAAK6f,mBAAmBha,OAAOlD,WAAY3C,KAAK0O,QAAQ3B,MAAO/M,KAAK0O,QAAQ1B,OAAQhN,KAAK6f,mBAAmBha,OAAOtB,UACnKmP,EAAgC1T,KAAK6f,mBAAmBha,OAAO6D,eAAgBkK,IAC9E5T,KAAK6f,mBAAmBha,OAAOyH,gBAAgBsG,EAEtD,CACJ,GD1biB,IAEtB8L,GAAMhY,qBAAsB,EAC5BgY,GAAMrW,WAAW5B,qBAAsB,EACvC,MAAM0b,GAAkB,IDZjB,MAQH,WAAA5d,CAAYsR,EAA+B,IAAI,GAAUC,EAAiC,IAAI,GAAQD,GAAgBE,EAAyC,IAAI,IAC/J/W,KAAK0W,eAAiBG,EACtB7W,KAAK2W,gBAAkBG,EACvB9W,KAAK4W,oBAAsBG,EAC3B/W,KAAKojB,UAAY,IAAIhE,GAAsBpf,MAC3CA,KAAKqjB,WAAa,IAAIhE,GAAuBrf,KACjD,CAEA,cAAAmW,CAAetQ,EAAqBxB,GAEhCrE,KAAKojB,UAAUjN,eAAetQ,EAAQxB,EAC1C,CAEA,eAAA+R,CAAgBvQ,EAAqBgG,EAAyByF,GAE1DtR,KAAKqjB,WAAWjN,gBAAgBvQ,EAAQgG,EAAiByF,EAC7D,CAEA,mBAAAgF,CAAoBzQ,EAAqBkG,GAEzC,CAEA,qBAAAiT,CAAsBnZ,EAAqBxB,GAE3C,CAEA,qBAAA4a,CAAsBpZ,EAAqBiL,GACvC9Q,KAAKojB,UAAUnE,sBAAsBpZ,EAAQiL,EACjD,CAEA,wBAAAwO,CAAyBzZ,EAAqBgG,EAAyByF,GAEnEtR,KAAKqjB,WAAW/D,yBAAyBzZ,EAAQgG,EAAiByF,EAEtE,CAEA,0BAAAgS,CAA2Bzd,EAAqBkG,GAEhD,CAEA,2BAAAwX,GACIvjB,KAAKojB,UAAY,IAAIrE,GAAmB/e,KAC5C,CAEA,sBAAAkf,GACIlf,KAAKojB,UAAY,IAAIhE,GAAsBpf,KAC/C,CAEA,uBAAAwjB,GAEIxjB,KAAKqjB,WAAa,IAAIhE,GAAuBrf,KACjD,CAEA,iBAAI6W,GACA,OAAO7W,KAAK0W,cAChB,CAEA,kBAAII,GACA,OAAO9W,KAAK2W,eAChB,CAEA,sBAAII,GACA,OAAO/W,KAAK4W,mBAChB,CAEA,iBAAIC,CAAcA,GACd7W,KAAK0W,eAAiBG,CAC1B,CAEA,kBAAIC,CAAeA,GACf9W,KAAK2W,gBAAkBG,CAC3B,CAEA,sBAAIC,CAAmBA,GACnB/W,KAAK4W,oBAAsBG,CAC/B,GCtEJ2I,GAAMzJ,cAAgBkN,GAUtB,IAAIM,GAAc,EAElB,MAAMC,GAAuB,IAAI,EANgB,CAC/C,CAAE1L,WAAY,EAAG5Q,MAAO,GACxB,CAAE4Q,WAAY,EAAG5Q,MAAO,OAMvBA,IACCqc,GAAcrc,CAAK,GAErB,IAAI,GAEAuc,GAAkB,IAAI,EAjBc,CACxC,CAAE3L,WAAY,EAAG5Q,MAAO,CAAE5H,EAAG,EAAGC,EAAG,IACnC,CAAEuY,WAAY,EAAG5Q,MAAO,CAAE5H,EAAG,IAAKC,EAAG,QAiBpCY,IACC8iB,GAAgBlE,sBAAsBS,GAAM7Z,OAAQxF,EAAM,GAE5D,IL3CkzD,MCUhzD,WAAAkF,GAEC,CAED,IAAAsS,CAAKC,EAAejT,EAAwBE,GACxC,MAAMgT,GAAkBD,EAAQjT,EAAMmT,aAAejT,EAAIiT,WAAanT,EAAMmT,YAC5E,IAAIC,EAAcF,EAKlB,OAJGlT,EAAMqT,WACLD,EAAcpT,EAAMqT,SAASH,IAErB5Y,EAASC,UAAUyF,EAAMuC,MAAOjI,EAASQ,uBAAuBR,EAASO,UAAUqF,EAAIqC,MAAOvC,EAAMuC,OAAQ6Q,GAE3H,IIuBL0L,GAAgB/E,aNzCV,SAAsBpf,GACxB,OAAOP,KAAKuB,IAAKhB,EAAIP,KAAKiG,GAAM,EACpC,EMwCAwe,GAAqB9E,aNUf,SAAyBpf,GAC3B,OAAOA,EAAI,GAAM,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAIP,KAAKqY,KAAK,EAAI9X,EAAI,EAAG,GAAK,CAC5E,EMXA,MAAMokB,GAAmB,IAAI,EAC7BA,GAAiB3I,aAAa,eAAgByI,GAAsB,GACpEhE,GAAM7Z,OAAOqC,YAAa,GAAKjJ,KAAKiG,GAAK,KACzC,MAAM2e,GAA0C,CAC9C,CAAE7L,WAAY,EAAG5Q,OAAQnI,KAAKiG,GAAK,EAAGgT,SAAU,GAChD,CAAEF,WAAY,GAAK5Q,MAAkB,EAAVnI,KAAKiG,GAAU,EAAGgT,SAAU,IAGzD,IAAI4L,IAAc7kB,KAAKiG,GAAK,EAC5B,MAAM6e,GAAsB,IAAI,EAC9BF,IACCzc,IACC0c,GAAa1c,CAAK,GAEpB,IAAI,GAEN2c,GAAoB7G,SAAQ,KAC1B8G,QAAQC,IAAI,2DAA2D,IAEzEF,GAAoBlF,mBAAkB,KACpCmF,QAAQC,IAAI,oDAAoD,IAGlEF,GAAoBxI,MAAQ,EAC5BwI,GAAoB3H,KAAO,IAC3B4H,QAAQC,IAAI,oBAAqBF,GAAoBxI,OACrDyI,QAAQC,IAAI,mBAAoBF,GAAoB3H,MACpD4H,QAAQC,IAAI,uBAAwBF,GAAoB1J,UACxD2J,QAAQC,IAAI,4BAA6BF,GAAoBpF,cAE7DoF,GAAoB9G,OAAM,KACxB+G,QAAQC,IAAI,kCAAkC,IAKhDP,GAAqBrJ,SAAW,IAChCuJ,GAAiBvI,kBACf,cACA0I,GACA,gBAEFH,GAAiB3G,OAAM,KACrB+G,QAAQC,IAAI,+BACZvE,GAAMrW,WAAW5B,qBAAsB,CAAK,IAE9Cuc,QAAQC,IAAI,gCAAiCL,GAAiBvJ,UAC9D,MAAM6J,GAAqB,IAAI,EAK/BA,GAAmBjH,OAAM,KACvB+G,QAAQC,IAAI,gCAAgC,IAI9CC,GAAmB7J,SAAW,IAC9B,MAAM8J,GAAW,CAAE3kB,EAAG,EAAGC,EAAG,GAE5B,GAAQ6P,iBAAiB,eAAgB8U,IACvCD,GAAS3kB,EAAI4kB,EAAM1T,QAAU,GAAQa,wBAAwBC,KAC7D2S,GAAS1kB,EAAI2kB,EAAMzT,QAAU,GAAQY,wBAAwBE,GAAG,IAGlE,GAAQnC,iBAAiB,eAAgB8U,IACvC,MAAMC,EAAe3E,GAAM4C,8BAA8B,CACvD9iB,EAAG4kB,EAAM1T,QACTjR,EAAG2kB,EAAMzT,UAEXqT,QAAQC,IAAI,gBAAiBI,GAC7B,MAAMxG,EAA+B,CACnC,CAAE7F,WAAY,EAAG5Q,MAAO,OAAF,UAAOsY,GAAM7Z,OAAOM,WAC1C,CAAE6R,WAAY,EAAG5Q,MAAOid,IAE1BlB,GAAgBI,8BAChBI,GAAgBpG,UAAYM,EAC5BqG,GAAmBnK,iBACnB6J,GAAiB7J,gBAAgB,IAGnC,IAAI6F,GAAiB,GACrB,SAASjV,EAAKqX,GACZtC,GAAM/U,KAAKqX,GACX,MACMsC,EAAgBtC,EAAYpC,GAClCA,GAAiBoC,EVhFb,SAAmBlC,EAAmCnd,EAAwB9D,EAAmBqP,GACnG,IAAI8I,EAAuBrU,GAEvB,OAEJ,MAAMoK,EAAQ3J,EAAmBT,GAC3BqK,EAAS3J,EAAoBV,GAC7BsgB,EAAuBrgB,MAAdD,OAAAA,EAAqCA,EAAWzD,IACzDqlB,EAAoB3hB,MAAVqgB,OAAAA,EAAiCA,EAAOzjB,EAClDglB,EAAoB5hB,MAAVqgB,OAAAA,EAAiCA,EAAOxjB,EAC1CmD,MAAX2hB,GAAmC3hB,MAAX4hB,GAAiC5hB,MAATmK,GAAgCnK,MAAVoK,IAGzE8S,EAAQ2E,UAAY,EAAI5lB,EAExBihB,EAAQ4E,YACR5E,EAAQ6E,YAAc,yBACtB7E,EAAQ8E,OAAO,EAAG,GACf1W,EACC4R,EAAQ+E,OAAO,EAAGL,EAAWxX,GAE7B8S,EAAQ+E,OAAO,GAAIL,EAAWxX,GAElC8S,EAAQgF,SAGRhF,EAAQ4E,YACR5E,EAAQ6E,YAAc,yBACtB7E,EAAQ8E,OAAO,EAAG,GAClB9E,EAAQ+E,OAAON,EAAUxX,EAAO,GAChC+S,EAAQgF,SACRhF,EAAQ6E,YAAc,QAC1B,CUiDE,CACEjF,GAAMI,QACNJ,GAAM7Z,OAAOlD,WACb+c,GAAM7Z,OAAOhH,UACb6gB,GAAMxR,uBAGR,MAAM6W,EAAc,GAAQxT,wBACNmO,GAAM4C,8BAA8B,CACxD9iB,EAAGulB,EAAYvT,KACf/R,EAAGslB,EAAYtT,MAEMiO,GAAM4C,8BAA8B,CACzD9iB,EAAGulB,EAAY3G,MACf3e,EAAGslB,EAAYtT,MAEQiO,GAAM4C,8BAA8B,CAC3D9iB,EAAGulB,EAAYvT,KACf/R,EAAGslB,EAAYrT,SAESgO,GAAM4C,8BAA8B,CAC5D9iB,EAAGulB,EAAY3G,MACf3e,EAAGslB,EAAYrT,SVlIlB,SAE+BoO,EAAmCnd,EAAwBuL,GACvF,IAAI8I,EAAuBrU,GACvB,OAEJ,MAAMoK,EAAQ3J,EAAmBT,GAC3BqK,EAAS3J,EAAoBV,GAC7BsgB,EAAuBrgB,MAAdD,OAAAA,EAAqCA,EAAWzD,IACzDqlB,EAAoB3hB,MAAVqgB,OAAAA,EAAiCA,EAAOzjB,EAClDglB,EAAoB5hB,MAAVqgB,OAAAA,EAAiCA,EAAOxjB,EAC1CmD,MAAX2hB,GAAmC3hB,MAAX4hB,GAAiC5hB,MAATmK,GAAgCnK,MAAVoK,IAGzE8S,EAAQ4E,YACR5E,EAAQ6E,YAAc,OACtB7E,EAAQ2E,UAAY,IAIhB3E,EAAQkF,UAAUT,GAAUC,EAASzX,GAAQC,EAAQ,GAEzD8S,EAAQgF,SACRhF,EAAQ2E,UAAY,EACpB3E,EAAQ6E,YAAc,QAC1B,CU2GE,CAAgBjF,GAAMI,QAASJ,GAAM7Z,OAAOlD,YAE5C+c,GAAMI,QAAQ4E,YACdhF,GAAMI,QAAQ8E,OAAO,EAAG,GACxB,MAAMrjB,EAAkB,CACtB/B,EAAGikB,GAAcxkB,KAAKsB,IAAIujB,IAC1BrkB,EAAGgkB,GAAcxkB,KAAKuB,IAAIsjB,KAE5BpE,GAAMI,QAAQ+E,OAAOtjB,EAAS/B,EAAG+B,EAAS9B,GAC1CigB,GAAMI,QAAQgF,SAEdZ,GAAmBzK,QAAQ6K,GAC3BV,GAAiBnK,QAAQ6K,GAEzB3U,OAAOsV,sBAAsBta,EAC/B,CAEAA,CAAK,GAEL,MAAMua,GAAU,IAAIC,OAAO,iBAC3BD,GAAQE,YAAY,0BAEpB,MAAMC,GAAU,IAAIF,OAAO,iBAErBG,GAAU,IAAIC,eACpBL,GAAQE,YAAY,CAAEI,KAAMF,GAAQG,OAAS,CAACH,GAAQG,QACtDJ,GAAQD,YAAY,CAAEI,KAAMF,GAAQI,OAAS,CAACJ,GAAQI,QAEtDlG,SAASlQ,iBAAiB,oBAG1B,WACMkQ,SAASmG,OACX3B,QAAQC,IAAI,0BAEZD,QAAQC,IAAI,0BACZrE,GAAiBgG,KAAKC,MAE1B,G","sources":["webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/board-camera/utils/zoom.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/node_modules/.pnpm/point2point@0.0.95/node_modules/point2point/esm/index.js","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/board-camera/utils/coordinate-conversion.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/board-camera/utils/position.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/board-camera/utils/rotation.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/board-camera/pan/pan.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/board-camera/rotation/rotation.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/board-camera/zoom/zoom.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/node_modules/.pnpm/@rollup+plugin-typescript@11.1.6_rollup@3.29.4_tslib@2.6.2_typescript@5.3.3/node_modules/tslib/tslib.es6.js","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/camera-observer/camera-observer.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/board-camera/board-camera-v2.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/kmt-strategy/kmt-strategy.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/touch-strategy/touch-strategy.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/boardify/utils/zoomlevel-adjustment.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/boardify/utils/drawing-utils.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/boardify/board-state-observer.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/input-observer/input-observer.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/control-center/control-center.ts","webpack:///./node_modules/.pnpm/@niuee+bounce@0.0.4/node_modules/@niuee/src/ease-functions/index.ts","webpack:///./node_modules/.pnpm/@niuee+bounce@0.0.4/node_modules/@niuee/node_modules/.pnpm/point2point@0.0.93/node_modules/point2point/build/esm/index.js","webpack:///./node_modules/.pnpm/@niuee+bounce@0.0.4/node_modules/@niuee/src/animatable-attribute/animatable-attribute.ts","webpack:///./node_modules/.pnpm/@niuee+bounce@0.0.4/node_modules/@niuee/src/composite-animation/composite-animation.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/ease-functions/ease-functions.ts","webpack:///./src/control-center.ts","webpack:///./src/index.ts","webpack:///./node_modules/.pnpm/@niuee+board@0.0.7/node_modules/@niuee/src/boardify/board.ts"],"sourcesContent":["\nexport type ZoomLevelLimits = {min?: number, max?: number};\n\nexport function isValidZoomLevelLimits(zoomLevelLimits: ZoomLevelLimits | undefined): boolean{\n    if(zoomLevelLimits === undefined){\n        return true;\n    }\n    if(zoomLevelLimits.min !== undefined && zoomLevelLimits.max !== undefined && zoomLevelLimits.min > zoomLevelLimits.max){\n        return false;\n    }\n    return true;\n}\n\nexport function clampZoomLevel(zoomLevel: number, zoomLevelLimits?: ZoomLevelLimits): number{\n    if(zoomLevelWithinLimits(zoomLevel, zoomLevelLimits) || zoomLevelLimits === undefined){\n        return zoomLevel;\n    }\n    if(zoomLevelLimits.max){\n        zoomLevel = Math.min(zoomLevelLimits.max, zoomLevel);\n    }\n    if(zoomLevelLimits.min){\n        zoomLevel = Math.max(zoomLevelLimits.min, zoomLevel);\n    }\n    return zoomLevel;\n}\n\nexport function zoomLevelWithinLimits(zoomLevel: number, zoomLevelLimits?: ZoomLevelLimits): boolean{\n    if(zoomLevelLimits === undefined){\n        return true;\n    }\n    if(zoomLevel <= 0 || (zoomLevelLimits !== undefined && \n    ((zoomLevelLimits.max !== undefined && zoomLevelLimits.max < zoomLevel) || \n        (zoomLevelLimits.min !== undefined && zoomLevelLimits.min > zoomLevel)\n    ))){\n        return false;\n    }\n    return true;\n}\n","class PointCal{static addVector(a,b){return null==a.z&&null==b.z?{x:a.x+b.x,y:a.y+b.y}:(null!=a.z&&null!=b.z||(null==a.z&&(a.z=0),null==b.z&&(b.z=0)),{x:a.x+b.x,y:a.y+b.y,z:a.z+b.z})}static subVector(a,b){return null==a.z&&null==b.z?{x:a.x-b.x,y:a.y-b.y}:(null!=a.z&&null!=b.z||(null==a.z&&(a.z=0),null==b.z&&(b.z=0)),{x:a.x-b.x,y:a.y-b.y,z:a.z-b.z})}static multiplyVectorByScalar(a,b){return null==a.z?{x:a.x*b,y:a.y*b}:{x:a.x*b,y:a.y*b,z:a.z*b}}static divideVectorByScalar(a,b){return 0==b?{x:a.x,y:a.y}:null==a.z?{x:a.x/b,y:a.y/b}:{x:a.x/b,y:a.y/b,z:a.z/b}}static magnitude(a){return null==a.z&&(a.z=0),Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z)}static unitVector(a){return null==a.z&&(a.z=0),0!=this.magnitude(a)?{x:a.x/this.magnitude(a),y:a.y/this.magnitude(a),z:a.z/this.magnitude(a)}:{x:0,y:0,z:0}}static dotProduct(a,b){return null==a.z&&null==b.z?a.x*b.x+a.y*b.y:(null!=a.z&&null!=b.z||(null==a.z&&(a.z=0),null==b.z&&(b.z=0)),a.x*b.x+a.y*b.y+a.z*b.z)}static crossProduct(a,b){return null!=a.z&&null!=b.z||(null==a.z&&(a.z=0),null==b.z&&(b.z=0)),{x:a.y*b.z-a.z*b.y,y:a.z*b.x-a.x*b.z,z:a.x*b.y-a.y*b.x}}static unitVectorFromA2B(a,b){return this.unitVector(this.subVector(b,a))}static rotatePoint(point,angle){return{x:point.x*Math.cos(angle)-point.y*Math.sin(angle),y:point.x*Math.sin(angle)+point.y*Math.cos(angle)}}static transform2NewAxis(point,angleFromOriginalAxis2DestAxis){return{x:point.x*Math.cos(angleFromOriginalAxis2DestAxis)+point.y*Math.sin(angleFromOriginalAxis2DestAxis),y:-point.x*Math.sin(angleFromOriginalAxis2DestAxis)+point.y*Math.cos(angleFromOriginalAxis2DestAxis)}}static angleFromA2B(a,b){return Math.atan2(a.x*b.y-a.y*b.x,a.x*b.x+a.y*b.y)}static transformPointWRTAnchor(point,anchor,angle){let newPoint=this.rotatePoint(this.subVector(point,anchor),angle);return this.addVector(newPoint,anchor)}static distanceBetweenPoints(a,b){return this.magnitude(this.subVector(a,b))}static flipYAxis(point){return{x:point.x,y:-point.y,z:point.z}}static linearInterpolation(a,b,t){return null==a.z||null==b.z?{x:a.x+(b.x-a.x)*t,y:a.y+(b.y-a.y)*t}:{x:a.x+(b.x-a.x)*t,y:a.y+(b.y-a.y)*t,z:a.z+(b.z-a.z)*t}}static isEqual(a,b){return null==a.z&&(a.z=0),null==b.z&&(b.z=0),a.x==b.x&&a.y==b.y&&a.z==b.z}static getLineIntersection(startPoint,endPoint,startPoint2,endPoint2){const numerator=(endPoint2.x-startPoint2.x)*(startPoint.y-startPoint2.y)-(endPoint2.y-startPoint2.y)*(startPoint.x-startPoint2.x),denominator=(endPoint2.y-startPoint2.y)*(endPoint.x-startPoint.x)-(endPoint2.x-startPoint2.x)*(endPoint.y-startPoint.y);if(0===denominator)return{intersects:!1};const t=numerator/denominator;return t>=0&&t<=1?{intersects:!0,intersection:PointCal.linearInterpolation(startPoint,endPoint,t),offset:t}:{intersects:!1}}}export{PointCal};\n//# sourceMappingURL=index.js.map\n","import { Point } from \"src\";\nimport { PointCal } from \"point2point\";\n\nexport function convert2WorldSpaceWRT(targetPosition: Point, interestPoint: Point, viewPortWidth: number, viewPortHeight: number, cameraZoomLevel: number, cameraRotation: number): Point{\n    // this function is to find the world space coordinate of the interest point if the camera is at target position\n    \n    // the target position is the position of the camera in world space\n    // the coordinate for the interest point is in view port space where bottom left corner is the origin \n    let cameraFrameCenter = {x: viewPortWidth / 2, y: viewPortHeight / 2};\n    let delta2Point = PointCal.subVector(interestPoint, cameraFrameCenter);\n    delta2Point = PointCal.multiplyVectorByScalar(delta2Point, 1 / cameraZoomLevel);\n    delta2Point = PointCal.rotatePoint(delta2Point, cameraRotation);\n    return PointCal.addVector(targetPosition, delta2Point);\n}\n\nexport function convert2WorldSpace(point: Point, viewPortWidth: number, viewPortHeight: number, cameraPosition: Point, cameraZoomLevel: number, cameraRotation: number): Point{\n    let cameraFrameCenter = {x: viewPortWidth / 2, y: viewPortHeight / 2};\n    let delta2Point = PointCal.subVector(point, cameraFrameCenter);\n    delta2Point = PointCal.multiplyVectorByScalar(delta2Point, 1 / cameraZoomLevel);\n    delta2Point = PointCal.rotatePoint(delta2Point, cameraRotation);\n    return PointCal.addVector(cameraPosition, delta2Point);\n}\n\nexport function invertFromWorldSpace(point: Point, viewPortWidth: number, viewPortHeight: number, cameraPosition: Point, cameraZoomLevel: number, cameraRotation: number): Point{\n    let cameraFrameCenter = {x: viewPortWidth / 2, y: viewPortHeight / 2};\n    let delta2Point = PointCal.subVector(point, cameraPosition);\n    delta2Point = PointCal.rotatePoint(delta2Point, -cameraRotation);\n    delta2Point = PointCal.multiplyVectorByScalar(delta2Point, cameraZoomLevel);\n    return PointCal.addVector(cameraFrameCenter, delta2Point);\n}\n\nexport function pointIsInViewPort(point: Point, viewPortWidth: number, viewPortHeight: number, cameraPosition: Point, cameraZoomLevel: number, cameraRotation: number): boolean{\n    const pointInCameraFrame = invertFromWorldSpace(point, viewPortWidth, viewPortHeight, cameraPosition, cameraZoomLevel, cameraRotation);\n    if(pointInCameraFrame.x < 0 || pointInCameraFrame.x > viewPortWidth || pointInCameraFrame.y < 0 || pointInCameraFrame.y > viewPortHeight){\n        return false;\n    }\n    return true;\n}\n","import { Point } from \"src\";\nimport { PointCal } from \"point2point\";\n\nimport { convert2WorldSpaceWRT } from \"./coordinate-conversion\";\n\nexport type Boundaries = {\n    min?: {x?: number, y?: number};\n    max?: {x?: number, y?: number};\n}\n\nexport function withinBoundaries(point: Point, boundaries: Boundaries | undefined): boolean{\n    if(boundaries == undefined){\n        // no boundaries \n        return true;\n    }\n    let leftSide = false;\n    let rightSide = false;\n    let topSide = false;\n    let bottomSide = false;\n    // check within boundaries horizontally\n    if(boundaries.max == undefined || boundaries.max.x == undefined || point.x <= boundaries.max.x){\n        rightSide = true;\n    }\n    if(boundaries.min == undefined || boundaries.min.x == undefined || point.x >= boundaries.min.x){\n        leftSide = true;\n    }\n    if(boundaries.max == undefined || boundaries.max.y == undefined || point.y <= boundaries.max.y){\n        topSide = true;\n    }\n    if(boundaries.min == undefined || boundaries.min.y == undefined || point.y >= boundaries.min.y){\n        bottomSide = true;\n    }\n    return leftSide && rightSide && topSide && bottomSide;\n}\n\nexport function isValidBoundaries(boundaries: Boundaries | undefined): boolean{\n    if(boundaries == undefined){\n        return true;\n    }\n    const minX = boundaries.min?.x;\n    const maxX = boundaries.max?.x;\n    if (minX != undefined && maxX != undefined && minX >= maxX){\n        return false;\n    }\n    const minY = boundaries.min?.y;\n    const maxY = boundaries.max?.y;\n    if (minY != undefined && maxY != undefined && minY >= maxY){\n        return false;\n    }\n    return true;\n}\n\nexport function boundariesFullyDefined(boundaries: Boundaries | undefined): boolean{\n    if(boundaries == undefined){\n        return false;\n    }\n    if(boundaries.max == undefined || boundaries.min == undefined){\n        return false;\n    }\n    if(boundaries.max.x == undefined || boundaries.max.y == undefined || boundaries.min.x == undefined || boundaries.min.y == undefined){\n        return false;\n    }\n    return true;\n}\n\nexport function clampPoint(point: Point, boundaries: Boundaries | undefined): Point{\n    if(withinBoundaries(point, boundaries) || boundaries == undefined){\n        return point;\n    }\n    let manipulatePoint = {x: point.x, y: point.y};\n    let limit = boundaries.min;\n    if (limit != undefined){\n        if(limit.x != undefined){\n            manipulatePoint.x = Math.max(manipulatePoint.x, limit.x);\n        }\n        if(limit.y != undefined){\n            manipulatePoint.y = Math.max(manipulatePoint.y, limit.y);\n        }\n    }\n    limit = boundaries.max;\n    if(limit != undefined){\n        if(limit.x != undefined){\n            manipulatePoint.x = Math.min(manipulatePoint.x, limit.x);\n        }\n        if(limit.y != undefined){\n            manipulatePoint.y = Math.min(manipulatePoint.y, limit.y);\n        }\n    }\n    return manipulatePoint;\n}\n\nexport function translationWidthOf(boundaries: Boundaries | undefined): number | undefined{\n    if(boundaries == undefined || boundaries.min == undefined || boundaries.max == undefined || boundaries.min.x == undefined || boundaries.max.x == undefined){\n        return undefined;\n    }\n    return boundaries.max.x - boundaries.min.x;\n}\n\nexport function halfTranslationWidthOf(boundaries: Boundaries): number | undefined{\n    const translationWidth = translationWidthOf(boundaries);\n    return translationWidth != undefined ? translationWidth / 2 : undefined;\n}\n\nexport function translationHeightOf(boundaries: Boundaries | undefined): number | undefined{\n    if(boundaries == undefined || boundaries.min == undefined || boundaries.max == undefined || boundaries.min.y == undefined || boundaries.max.y == undefined){\n        return undefined;\n    }\n    return boundaries.max.y - boundaries.min.y;\n}\n\nexport function halfTranslationHeightOf(boundaries: Boundaries): number | undefined{\n    const translationHeight = translationHeightOf(boundaries);\n    return translationHeight != undefined ? translationHeight / 2 : undefined;\n}\n\nexport function clampPointEntireViewPort(point: Point, viewPortWidth: number, viewPortHeight: number, boundaries: Boundaries | undefined, cameraZoomLevel: number, cameraRotation: number): Point{\n    if(boundaries == undefined){\n        return point;\n    }\n    let topLeftCorner = convert2WorldSpaceWRT(point, {x: 0, y: viewPortHeight}, viewPortWidth, viewPortHeight, cameraZoomLevel, cameraRotation);\n    let bottomLeftCorner = convert2WorldSpaceWRT(point, {x: 0, y: 0}, viewPortWidth, viewPortHeight, cameraZoomLevel, cameraRotation);\n    let topRightCorner = convert2WorldSpaceWRT(point, {x: viewPortWidth, y: viewPortHeight}, viewPortWidth, viewPortHeight, cameraZoomLevel, cameraRotation);\n    let bottomRightCorner = convert2WorldSpaceWRT(point, {x: viewPortWidth, y: 0}, viewPortWidth, viewPortHeight, cameraZoomLevel, cameraRotation);\n    let topLeftCornerClamped = clampPoint(topLeftCorner, boundaries);\n    let topRightCornerClamped = clampPoint(topRightCorner, boundaries);\n    let bottomLeftCornerClamped = clampPoint(bottomLeftCorner, boundaries);\n    let bottomRightCornerClamped = clampPoint(bottomRightCorner, boundaries);\n    let topLeftCornerDiff = PointCal.subVector(topLeftCornerClamped, topLeftCorner);\n    let topRightCornerDiff = PointCal.subVector(topRightCornerClamped, topRightCorner);\n    let bottomLeftCornerDiff = PointCal.subVector(bottomLeftCornerClamped, bottomLeftCorner);\n    let bottomRightCornerDiff = PointCal.subVector(bottomRightCornerClamped, bottomRightCorner);\n    let diffs = [topLeftCornerDiff, topRightCornerDiff, bottomLeftCornerDiff, bottomRightCornerDiff];\n    let maxXDiff = Math.abs(diffs[0].x);\n    let maxYDiff = Math.abs(diffs[0].y);\n    let delta = diffs[0];\n    diffs.forEach((diff)=>{\n        if(Math.abs(diff.x) > maxXDiff){\n            maxXDiff = Math.abs(diff.x);\n            delta.x = diff.x;\n        }\n        if(Math.abs(diff.y) > maxYDiff){\n            maxYDiff = Math.abs(diff.y);\n            delta.y = diff.y;\n        }\n    });\n    return PointCal.addVector(point, delta);\n}\n","export type RotationLimits = {start: number, end: number, ccw: boolean, startAsTieBreaker: boolean};\n\nexport function clampRotation(rotation: number, rotationLimits?: RotationLimits): number{\n    if(rotationWithinLimits(rotation, rotationLimits) || rotationLimits === undefined){\n        return rotation;\n    }\n    rotation = normalizeAngleZero2TwoPI(rotation);\n    const angleSpanFromStart = angleSpan(rotationLimits.start, rotation);\n    const angleSpanFromEnd = angleSpan(rotationLimits.end, rotation);\n    if((rotationLimits.ccw && (angleSpanFromStart < 0 || angleSpanFromEnd > 0)) || (!rotationLimits.ccw && (angleSpanFromStart > 0 || angleSpanFromEnd < 0))){\n        // ccw out of bounds\n        if(Math.abs(angleSpanFromStart) === Math.abs(angleSpanFromEnd)){\n            // console.log(\"tie\", \"start:\", rotationLimits.start, \"end:\", rotationLimits.end, \"rotation:\", rotation);\n            return rotationLimits.startAsTieBreaker ? rotationLimits.start : rotationLimits.end;\n        }\n        const closerToStart = Math.abs(angleSpanFromStart) < Math.abs(angleSpanFromEnd);\n        return closerToStart ? rotationLimits.start : rotationLimits.end;\n    }\n    return rotation;\n}\n\nexport function rotationWithinLimits(rotation: number, rotationLimits?: RotationLimits): boolean{\n    if(rotationLimits === undefined){\n        return true;\n    }\n    const angleSpanFromStart = angleSpan(rotationLimits.start, rotation);\n    const angleSpanFromEnd = angleSpan(rotationLimits.end, rotation);\n    if((rotationLimits.ccw && (angleSpanFromStart < 0 || angleSpanFromEnd > 0)) || (!rotationLimits.ccw && (angleSpanFromStart > 0 || angleSpanFromEnd < 0))){\n        return false;\n    }\n    return true;\n}\n\nexport function normalizeAngleZero2TwoPI(angle: number){\n    // reduce the angle  \n    angle = angle % (Math.PI * 2);\n\n    // force it to be the positive remainder, so that 0 <= angle < 2 * Math.PI \n    angle = (angle + Math.PI * 2) % (Math.PI * 2); \n    return angle;\n}\n\nexport function angleSpan(from: number, to: number): number{\n    // in radians\n    from = normalizeAngleZero2TwoPI(from);\n    to = normalizeAngleZero2TwoPI(to);\n    let angleDiff = to - from;\n    \n    if(angleDiff > Math.PI){\n        angleDiff = - (Math.PI * 2 - angleDiff);\n    }\n\n    if(angleDiff < -Math.PI){\n        angleDiff += (Math.PI * 2);\n    }\n    return angleDiff;\n}\n\nexport function deg2rad(deg: number): number{\n    return deg * Math.PI / 180;\n}\n\nexport function rad2deg(rad: number): number{\n    return rad * 180 / Math.PI;\n}\n","import { Point } from \"src\";\nimport { BoardCamera } from \"../interface\";\nimport { PointCal } from \"point2point\";\n\nimport { clampPoint, clampPointEntireViewPort } from \"src/board-camera/utils/position\";\n\nexport interface PanHandler {\n    nextHandler?: PanHandler;\n    chainHandler(handler: PanHandler): PanHandler;\n    panCameraTo(camera: BoardCamera, destination: Point): void\n    panCameraBy(camera: BoardCamera, delta: Point): void\n}\n\nexport interface PanController extends PanHandler {\n    limitEntireViewPort: boolean;\n    restrictXTranslation: boolean;\n    restrictYTranslation: boolean;\n    restrictRelativeXTranslation: boolean;\n    restrictRelativeYTranslation: boolean;\n    restrictTranslation: boolean;\n}\n\nexport abstract class PanHandlerBoilerPlate implements PanHandler {\n\n    protected _nextHandler?: PanHandler;\n\n    constructor(nextHandler: PanHandler | undefined = undefined) {\n        this._nextHandler = nextHandler;\n    }\n\n\n    set nextHandler(handler: PanHandler | undefined) {\n        this._nextHandler = handler;\n    }\n\n    get nextHandler(): PanHandler | undefined {\n        return this._nextHandler;\n    }\n\n    chainHandler(handler: PanHandler): PanHandler {\n        this._nextHandler = handler;\n        return handler;\n    }\n\n    panCameraTo(camera: BoardCamera, destination: Point): void {\n        if(this._nextHandler){\n            this._nextHandler.panCameraTo(camera, destination);\n        }\n    }\n\n    panCameraBy(camera: BoardCamera, delta: Point): void {\n        if(this._nextHandler){\n            this._nextHandler.panCameraBy(camera, delta);\n        }\n    }\n}\n\nexport class BasePanHandler extends PanHandlerBoilerPlate {\n\n\n    constructor(nextHandler: PanHandler | undefined = undefined) {\n        super(nextHandler);\n    }\n\n    override panCameraTo(camera: BoardCamera, destination: Point): void{\n        camera.setPosition(destination);\n    }\n\n    override panCameraBy(camera: BoardCamera, diff: Point): void {\n        camera.setPosition(PointCal.addVector(camera.position, diff));\n    }\n}\n\nexport class ClampHandler extends PanHandlerBoilerPlate {\n\n    private _entireViewPort: boolean = false;\n\n    constructor(nextHandler: PanHandler | undefined = undefined) {\n        super(nextHandler);\n    }\n\n    set entireViewPort(entireViewPort: boolean) {\n        this._entireViewPort = entireViewPort;\n    }\n\n    get entireViewPort(): boolean {\n        return this._entireViewPort;\n    }\n\n    panCameraTo(camera: BoardCamera, destination: Point): void {\n        let actualDest = clampPoint(destination, camera.boundaries);\n        if(this._entireViewPort){\n            actualDest = clampPointEntireViewPort(destination, camera.viewPortWidth, camera.viewPortHeight, camera.boundaries, camera.zoomLevel, camera.rotation);\n        }\n        super.panCameraTo(camera, actualDest);\n    }\n\n    panCameraBy(camera: BoardCamera, delta: Point): void {\n        let actualDelta = PointCal.subVector(clampPoint(PointCal.addVector(camera.position, delta), camera.boundaries), camera.position);\n        if(this._entireViewPort){\n            actualDelta = PointCal.subVector(clampPointEntireViewPort(PointCal.addVector(camera.position, delta), camera.viewPortWidth, camera.viewPortHeight, camera.boundaries, camera.zoomLevel, camera.rotation), camera.position);\n        }\n        super.panCameraBy(camera, actualDelta);\n    }\n\n}\n\nexport class PanWithRestriction extends PanHandlerBoilerPlate {\n\n    private _restrictXTranslation: boolean = false;\n    private _restrictYTranslation: boolean = false;\n    private _restrictRelativeXTranslation: boolean = false;\n    private _restrictRelativeYTranslation: boolean = false;\n\n    constructor(nextHandler: PanHandler | undefined = undefined) {\n        super(nextHandler);\n    }\n\n    set restrictXTranslation(restrictXTranslation: boolean) {\n        this._restrictXTranslation = restrictXTranslation;\n    }\n\n    get restrictXTranslation(): boolean {\n        return this._restrictXTranslation;\n    }\n\n    set restrictYTranslation(restrictYTranslation: boolean) {\n        this._restrictYTranslation = restrictYTranslation;\n    }\n\n    get restrictYTranslation(): boolean {\n        return this._restrictYTranslation;\n    }\n\n    set restrictRelativeXTranslation(restrictRelativeXTranslation: boolean) {\n        this._restrictRelativeXTranslation = restrictRelativeXTranslation;\n    }\n\n    get restrictRelativeXTranslation(): boolean {\n        return this._restrictRelativeXTranslation;\n    }\n\n    set restrictRelativeYTranslation(restrictRelativeYTranslation: boolean) {\n        this._restrictRelativeYTranslation = restrictRelativeYTranslation;\n    }\n\n    get restrictRelativeYTranslation(): boolean {\n        return this._restrictRelativeYTranslation;\n    }\n\n    convertDeltaToComplyWithRestriction(camera: BoardCamera, delta: Point): Point {\n        if(this._restrictXTranslation && this._restrictYTranslation){\n            return {x: 0, y: 0};\n        }\n        if(this._restrictRelativeXTranslation && this._restrictRelativeYTranslation){\n            return {x: 0, y: 0};\n        }\n        if(this._restrictXTranslation){\n            delta.x = 0;\n        }\n        if(this._restrictYTranslation){\n            delta.y = 0;\n        }\n        if(this._restrictRelativeXTranslation){\n            const upDirection =  PointCal.rotatePoint({x: 0, y: 1}, camera.rotation);\n            const value = PointCal.dotProduct(upDirection, delta);\n            delta = PointCal.multiplyVectorByScalar(upDirection, value);\n        }\n        if(this._restrictRelativeYTranslation){\n            const rightDirection =  PointCal.rotatePoint({x: 1, y: 0}, camera.rotation);\n            const value = PointCal.dotProduct(rightDirection, delta);\n            delta = PointCal.multiplyVectorByScalar(rightDirection, value);\n        }\n        return delta;\n    }\n\n    override panCameraTo(camera: BoardCamera, destination: Point): void {\n        let delta = PointCal.subVector(destination, camera.position);\n        delta = this.convertDeltaToComplyWithRestriction(camera, delta);\n        if (delta.x === 0 && delta.y === 0) {\n            return;\n        }\n        const dest = PointCal.addVector(camera.position, delta);\n        super.panCameraTo(camera, dest);\n    }\n\n    override panCameraBy(camera: BoardCamera, delta: Point): void {\n       delta = this.convertDeltaToComplyWithRestriction(camera, delta);\n       super.panCameraBy(camera, delta);\n    }\n}\n\nexport class PanRig extends PanHandlerBoilerPlate implements PanController {\n\n    private baseHandler: BasePanHandler;\n    private clampHandler: ClampHandler;\n    private restrictionHandler: PanWithRestriction;\n\n    set restrictRelativeXTranslation(restrictRelativeXTranslation: boolean) {\n        this.restrictionHandler.restrictRelativeXTranslation = restrictRelativeXTranslation;\n    }\n\n    set restrictRelativeYTranslation(restrictRelativeYTranslation: boolean) {\n        this.restrictionHandler.restrictRelativeYTranslation = restrictRelativeYTranslation;\n    }\n\n    set restrictXTranslation(restrictXTranslation: boolean) {\n        this.restrictionHandler.restrictXTranslation = restrictXTranslation;\n    }\n\n    set restrictYTranslation(restrictYTranslation: boolean) {\n        this.restrictionHandler.restrictYTranslation = restrictYTranslation;\n    }\n\n    set restrictTranslation(restrictTranslation: boolean) {\n        // console.log(\"setting\", restrictTranslation);\n        this.restrictionHandler.restrictXTranslation = restrictTranslation;\n        this.restrictionHandler.restrictYTranslation = restrictTranslation;\n    }\n\n    get restrictTranslation(): boolean {\n        return this.restrictionHandler.restrictXTranslation;\n    }\n\n    get restrictXTranslation(): boolean {\n        return this.restrictionHandler.restrictXTranslation;\n    }\n\n    get restrictYTranslation(): boolean {\n        return this.restrictionHandler.restrictYTranslation;\n    }\n\n    get restrictRelativeXTranslation(): boolean {\n        return this.restrictionHandler.restrictRelativeXTranslation;\n    }\n\n    get restrictRelativeYTranslation(): boolean {\n        return this.restrictionHandler.restrictRelativeYTranslation;\n    }\n\n    set limitEntireViewPort(limitEntireViewPort: boolean) {\n        this.clampHandler.entireViewPort = limitEntireViewPort;\n    }\n\n    get limitEntireViewPort(): boolean {\n        return this.clampHandler.entireViewPort;\n    }\n\n    constructor() {\n        super();\n        this.baseHandler = new BasePanHandler();\n        this.clampHandler = new ClampHandler();\n        this.restrictionHandler = new PanWithRestriction();\n        this.restrictionHandler.chainHandler(this.clampHandler).chainHandler(this.baseHandler);\n        this.nextHandler = this.restrictionHandler;\n    }\n}\n","import { normalizeAngleZero2TwoPI, angleSpan, clampRotation } from \"src/board-camera/utils/rotation\";\nimport { BoardCamera } from \"src/board-camera/interface\"\n\nexport interface RotationHandler {\n    nextHandler?: RotationHandler;\n    chainHandler(handler: RotationHandler): RotationHandler;\n    rotateCameraTo(camera: BoardCamera, targetRotation: number): void\n    rotateCameraBy(camera: BoardCamera, delta: number): void\n}\n\nexport interface RotationController extends RotationHandler {\n    restrictRotation: boolean;\n}\n\nexport abstract class RotationHandlerBoilerPlate implements RotationHandler {\n\n    private _nextHandler?: RotationHandler;\n\n    constructor(nextHandler: RotationHandler | undefined = undefined) {\n        this._nextHandler = nextHandler;\n    }\n\n    set nextHandler(handler: RotationHandler | undefined) {\n        this._nextHandler = handler;\n    }\n\n    get nextHandler(): RotationHandler | undefined {\n        return this._nextHandler;\n    }\n\n    chainHandler(handler: RotationHandler): RotationHandler {\n        this._nextHandler = handler;\n        return handler;\n    }\n\n    rotateCameraTo(camera: BoardCamera, targetRotation: number): void {\n        if(this._nextHandler){\n            this._nextHandler.rotateCameraTo(camera, targetRotation);\n        }\n    }\n\n    rotateCameraBy(camera: BoardCamera, delta: number): void {\n        if(this._nextHandler){\n            this._nextHandler.rotateCameraBy(camera, delta);\n        }\n    }\n\n}\n\nexport class BaseRotationHandler extends RotationHandlerBoilerPlate{\n\n    constructor(nextHandler: RotationHandler | undefined = undefined) {\n        super();\n    }\n\n    rotateCameraTo(camera: BoardCamera, targetRotation: number): void{\n        targetRotation = normalizeAngleZero2TwoPI(targetRotation);\n        camera.setRotation(targetRotation);\n    }\n\n    rotateCameraBy(camera: BoardCamera, diff: number): void {\n        const curRotation = camera.rotation;\n        const targetRotation = normalizeAngleZero2TwoPI(curRotation + diff);\n        diff = angleSpan(curRotation, targetRotation);\n        camera.setRotation(targetRotation);\n    }\n}\n\nexport class RotationRestrictionHandler extends RotationHandlerBoilerPlate{\n\n    private _restrictRotation: boolean = false;\n\n    constructor(nextHandler: RotationHandler | undefined = undefined) {\n        super(nextHandler);\n    }\n\n    get restrictRotation(): boolean{\n        return this._restrictRotation;\n    }\n\n    set restrictRotation(restrictRotation: boolean){\n        this._restrictRotation = restrictRotation;\n    }\n\n    rotateCameraBy(camera: BoardCamera, diff: number): void {\n        if(this._restrictRotation){\n            return;\n        }\n        super.rotateCameraBy(camera, diff);\n    }\n\n    rotateCameraTo(camera: BoardCamera, targetRotation: number): void {\n        if(this._restrictRotation){\n            return;\n        }\n        super.rotateCameraTo(camera, targetRotation);\n    }\n}\n\nexport class RotationClampHandler extends RotationHandlerBoilerPlate{\n    \n\n    constructor(nextHandler: RotationHandler | undefined = undefined) {\n        super(nextHandler);\n    }\n\n    rotateCameraBy(camera: BoardCamera, diff: number): void {\n        const curRotation = camera.rotation;\n        let targetRotation = normalizeAngleZero2TwoPI(curRotation + diff);\n        targetRotation = clampRotation(targetRotation, camera.rotationBoundaries); \n        diff = angleSpan(curRotation, targetRotation);\n        super.rotateCameraBy(camera, diff);\n    }\n\n    rotateCameraTo(camera: BoardCamera, targetRotation: number): void {\n        targetRotation = normalizeAngleZero2TwoPI(targetRotation);\n        targetRotation = clampRotation(targetRotation, camera.rotationBoundaries);\n        super.rotateCameraTo(camera, targetRotation);\n    }\n}\n\nexport class RotationRig extends RotationHandlerBoilerPlate implements RotationController {\n\n    private _baseHandler: BaseRotationHandler;\n    private _clampHandler: RotationClampHandler;\n    private _restrictionHandler: RotationRestrictionHandler;\n\n    get restrictRotation(): boolean{\n        return this._restrictionHandler.restrictRotation;\n    }\n\n    set restrictRotation(restrictRotation: boolean){\n        this._restrictionHandler.restrictRotation = restrictRotation;\n    }\n\n    constructor(nextHandler: RotationHandler | undefined = undefined) {\n        super(nextHandler);\n        this._baseHandler = new BaseRotationHandler();\n        this._clampHandler = new RotationClampHandler(this._baseHandler);\n        this._restrictionHandler = new RotationRestrictionHandler(this._clampHandler);\n    }\n\n    rotateCameraBy(camera: BoardCamera, diff: number): void {\n        this._restrictionHandler.rotateCameraBy(camera, diff);\n        super.rotateCameraBy(camera, diff);\n    }\n\n    rotateCameraTo(camera: BoardCamera, targetRotation: number): void {\n        this._restrictionHandler.rotateCameraTo(camera, targetRotation);\n        super.rotateCameraTo(camera, targetRotation);\n    }\n}\n","import { BoardCameraSubscriber, Point } from \"src\";\nimport { BoardCamera } from \"src/board-camera/interface\";\nimport { convert2WorldSpace } from \"src/board-camera/utils/coordinate-conversion\";\nimport { clampZoomLevel } from \"src/board-camera/utils/zoom\";\nimport { PointCal } from \"point2point\";\nimport { PanController, PanHandler } from \"src/board-camera/pan/pan\";\n\nexport interface ZoomHandler {\n    nextHandler?: ZoomHandler;\n    chainHandler(handler: ZoomHandler): ZoomHandler;\n    zoomCameraTo(camera: BoardCamera, targetZoom: number): void;\n    zoomCameraBy(camera: BoardCamera, delta: number): void;\n    zoomCameraToAt(camera: BoardCamera, to: number, at: Point): void;\n    zoomCameraByAt(camera: BoardCamera, delta: number, at: Point): void;\n}\n\nexport interface ZoomController extends ZoomHandler {\n    restrictZoom: boolean;\n}\n\nexport abstract class ZoomHandlerBoilerPlate implements ZoomHandler {\n\n    protected _nextHandler?: ZoomHandler;\n\n    constructor(nextHandler: ZoomHandler | undefined = undefined) {\n        this._nextHandler = nextHandler;\n    }\n\n    set nextHandler(handler: ZoomHandler | undefined) {\n        this._nextHandler = handler;\n    }\n\n    get nextHandler(): ZoomHandler | undefined {\n        return this._nextHandler;\n    }\n\n    chainHandler(handler: ZoomHandler): ZoomHandler {\n        this._nextHandler = handler;\n        return handler;\n    }\n\n    zoomCameraTo(camera: BoardCamera, targetZoom: number): void {\n        if(this._nextHandler){\n            this._nextHandler.zoomCameraTo(camera, targetZoom);\n        }\n    }\n\n    zoomCameraBy(camera: BoardCamera, delta: number): void {\n        if(this._nextHandler){\n            this._nextHandler.zoomCameraBy(camera, delta);\n        }\n    }\n\n    zoomCameraToAt(camera: BoardCamera, to: number, at: Point): void {\n        if(this._nextHandler){\n            this._nextHandler.zoomCameraToAt(camera, to, at);\n        }\n    }\n\n    zoomCameraByAt(camera: BoardCamera, delta: number, at: Point): void {\n        if(this._nextHandler){\n            this._nextHandler.zoomCameraByAt(camera, delta, at);\n        }\n    }\n}\n\nexport class BaseZoomHandler extends ZoomHandlerBoilerPlate {\n\n    private panHandler: PanHandler;\n\n    constructor(panHandler: PanHandler, nextHandler: ZoomHandler | undefined = undefined) {\n        super(nextHandler);\n        this.panHandler = panHandler;\n    }\n\n    set nextHandler(handler: ZoomHandler | undefined) {\n        this._nextHandler = undefined;\n    }\n\n    zoomCameraTo(camera: BoardCamera, targetZoom: number): void{\n        camera.setZoomLevel(targetZoom);\n    }\n\n    zoomCameraBy(camera: BoardCamera, diff: number): void {\n        const curZoomLevel = camera.zoomLevel;\n        const targetZoom = curZoomLevel + diff;\n        camera.setZoomLevel(targetZoom);\n    }\n\n    zoomCameraToAt(camera: BoardCamera, to: number, at: Point): void {\n        let originalAnchorInWorld = convert2WorldSpace(at, camera.viewPortWidth, camera.viewPortHeight, camera.position, camera.zoomLevel, camera.rotation);\n        const originalZoomLevel = camera.zoomLevel;\n        camera.setZoomLevel(to);\n        let anchorInWorldAfterZoom = convert2WorldSpace(at, camera.viewPortWidth, camera.viewPortHeight, camera.position, camera.zoomLevel, camera.rotation);\n        const diff = PointCal.subVector(originalAnchorInWorld, anchorInWorldAfterZoom);\n        this.panHandler.panCameraBy(camera, diff);\n    }\n\n    zoomCameraByAt(camera: BoardCamera, delta: number, at: Point): void {\n        let originalAnchorInWorld = convert2WorldSpace(at, camera.viewPortWidth, camera.viewPortHeight, camera.position, camera.zoomLevel, camera.rotation);\n        const originalZoomLevel = camera.zoomLevel;\n        const targetZoom = originalZoomLevel + delta;\n        camera.setZoomLevel(targetZoom);\n        let anchorInWorldAfterZoom = convert2WorldSpace(at, camera.viewPortWidth, camera.viewPortHeight, camera.position, camera.zoomLevel, camera.rotation);\n        const diff = PointCal.subVector(originalAnchorInWorld, anchorInWorldAfterZoom);\n        this.panHandler.panCameraBy(camera, diff);\n    }\n}\n\nexport class ZoomClampHandler extends ZoomHandlerBoilerPlate{\n    \n\n    constructor(nextHandler: ZoomHandler | undefined = undefined) {\n        super(nextHandler);\n    }\n\n    zoomCameraTo(camera: BoardCamera, targetZoom: number): void{\n        targetZoom = clampZoomLevel(targetZoom, camera.zoomBoundaries);\n        super.zoomCameraTo(camera, targetZoom);\n    }\n\n    zoomCameraBy(camera: BoardCamera, diff: number): void {\n        let targetZoom = camera.zoomLevel + diff;\n        targetZoom = clampZoomLevel(targetZoom, camera.zoomBoundaries);\n        diff = targetZoom - camera.zoomLevel;\n        super.zoomCameraBy(camera, diff);\n    }\n\n    zoomCameraToAt(camera: BoardCamera, to: number, at: Point): void {\n        to = clampZoomLevel(to, camera.zoomBoundaries);\n        super.zoomCameraToAt(camera, to, at);\n    }\n\n    zoomByAt(camera: BoardCamera, delta: number, at: Point): void {\n        let targetZoom = camera.zoomLevel + delta;\n        targetZoom = clampZoomLevel(targetZoom, camera.zoomBoundaries);\n        delta = targetZoom - camera.zoomLevel;\n        super.zoomCameraByAt(camera, delta, at);\n    }\n}\n\nexport class ZoomRestrictionHandler extends ZoomHandlerBoilerPlate{\n\n    private _restrictZoom: boolean = false;\n\n    constructor(nextHandler: ZoomHandler | undefined = undefined) {\n        super(nextHandler);\n    }\n\n    set restrictZoom(restrictZoom: boolean){\n        this._restrictZoom = restrictZoom;\n    }\n\n    get restrictZoom(): boolean{\n        return this._restrictZoom;\n    }\n\n    zoomCameraTo(camera: BoardCamera, targetZoom: number): void{\n        if(this._restrictZoom){\n            return;\n        }\n        super.zoomCameraTo(camera, targetZoom);\n    }\n\n    zoomCameraBy(camera: BoardCamera, diff: number): void {\n        if(this._restrictZoom){\n            return;\n        }\n        super.zoomCameraBy(camera, diff);\n    }\n\n    zoomCameraToAt(camera: BoardCamera, to: number, at: Point): void {\n        if(this._restrictZoom){\n            return;\n        }\n        super.zoomCameraToAt(camera, to, at);\n    }\n\n    zoomCameraByAt(camera: BoardCamera, delta: number, at: Point): void {\n        if(this._restrictZoom){\n            return;\n        }\n        super.zoomCameraByAt(camera, delta, at);\n    }\n}\n\nexport class ZoomRig extends ZoomHandlerBoilerPlate implements ZoomController{\n\n    private _baseHandler: BaseZoomHandler;\n    private _clampHandler: ZoomClampHandler;\n    private _restrictionHandler: ZoomRestrictionHandler;\n\n    constructor(basePanHandler: PanHandler, nextHandler: ZoomHandler | undefined = undefined) {\n        super(nextHandler);\n        this._baseHandler = new BaseZoomHandler(basePanHandler);\n        this._clampHandler = new ZoomClampHandler();\n        this._restrictionHandler = new ZoomRestrictionHandler();\n        this._restrictionHandler.chainHandler(this._clampHandler).chainHandler(this._baseHandler);\n        this._nextHandler = this._restrictionHandler;\n    }\n\n    set restrictZoom(restrict: boolean) {\n        this._restrictionHandler.restrictZoom = restrict;\n    }\n\n    get restrictZoom(): boolean {\n        return this._restrictionHandler.restrictZoom;\n    }\n\n    zoomCameraTo(camera: BoardCamera, targetZoom: number): void {\n        super.zoomCameraTo(camera, targetZoom);\n    }\n\n    zoomCameraBy(camera: BoardCamera, delta: number): void {\n        super.zoomCameraBy(camera, delta);\n    }\n\n    zoomCameraByAt(camera: BoardCamera, delta: number, at: Point): void {\n        super.zoomCameraByAt(camera, delta, at);\n    }\n\n    zoomCameraToAt(camera: BoardCamera, to: number, at: Point): void {\n        super.zoomCameraToAt(camera, to, at);\n    }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","import { Point } from \"point2point\";\n\nexport type CameraPanEventPayload = {\n    diff: Point;\n}\n\nexport type CameraZoomEventPayload = {\n    deltaZoomAmount: number;\n    anchorPoint: Point;\n}\n\nexport type CameraRotateEventPayload = {\n    deltaRotation: number;\n}\n\nexport type CameraEventMapping = {\n    \"pan\": CameraPanEventPayload,\n    \"zoom\": CameraZoomEventPayload,\n    \"rotate\": CameraRotateEventPayload\n}\n\nexport type CameraPanEvent = {\n    diff: Point;\n}\n\nexport type CameraZoomEvent = {\n    deltaZoomAmount: number;\n}\n\nexport type CameraRotateEvent = {\n    deltaRotation: number;\n}\n\nexport type CameraEvent = {\n    \"pan\": CameraPanEvent,\n    \"zoom\": CameraZoomEvent,\n    \"rotate\": CameraRotateEvent\n}\n\nexport type CameraRotateCommandPayload = {\n    type: \"rotate\",\n    deltaRotation: number\n}\n\nexport type CameraPanCommandPayload = {\n    type: \"pan\",\n    diff: Point\n}\n\nexport type CameraZoomCommandPayload = {\n    type: \"zoom\",\n    deltaZoomAmount: number,\n    anchorPoint: Point\n}\n\n\nexport type CameraUpdateNotification = {\n    position: Point;\n    zoomLevel: number;\n    rotation: number;\n}\n\nexport type CameraState = {\n    position: Point;\n    zoomLevel: number;\n    rotation: number;\n}\n\nexport type CameraCommandPayload = CameraRotateCommandPayload | CameraPanCommandPayload | CameraZoomCommandPayload;\n\nexport type CameraChangeEventName = \"pan\" | \"zoom\" | \"rotate\";\n\nexport type CallbackList<K extends keyof CameraEventMapping> = ((event: CameraEventMapping[K], cameraState: CameraState)=>void)[];\nexport type CallbackListV2<K extends keyof CameraEvent> = ((event: CameraEvent[K], cameraState: CameraState)=>void)[];\n\nexport type UnSubscribe = () => void;\n\n/**\n * @category Camera Observer\n */\nexport class CameraObserverV2 {\n\n    private panCallbackList: CallbackListV2<\"pan\"> = [];\n    private zoomCallbackList: CallbackListV2<\"zoom\"> = [];\n    private rotateCallbackList: CallbackListV2<\"rotate\"> = [];\n\n    constructor() {\n    }\n\n    async notifyPositionChange(delta: Point, cameraState: CameraState): Promise<void> {\n        // return new Promise((resolve, reject) => {\n            queueMicrotask(()=>{this.panCallbackList.forEach((callback) => {\n                callback({ diff: delta }, cameraState);\n            });});\n        //     resolve();\n        // });\n    }\n\n    async notifyZoomChange(deltaZoomAmount: number, cameraState: CameraState): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.zoomCallbackList.forEach((callback) => {\n                callback({ deltaZoomAmount: deltaZoomAmount }, cameraState);\n            });\n            resolve();\n        });\n    }\n\n    async notifyRotationChange(deltaRotation: number, cameraState: CameraState): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.rotateCallbackList.forEach((callback) => {\n                callback({ deltaRotation: deltaRotation }, cameraState);\n            });\n            resolve();\n        });\n    }\n\n    on<K extends keyof CameraEvent>(eventName: K, callback: (event: CameraEvent[K], cameraState: CameraState)=>void): UnSubscribe {\n        switch (eventName){\n        case \"pan\":\n            this.panCallbackList.push(callback as (event: CameraEvent[\"pan\"], cameraState: CameraState)=>void);\n            return ()=>{this.panCallbackList = this.panCallbackList.filter((cb) => cb !== callback)};\n        case \"zoom\":\n            this.zoomCallbackList.push(callback as (event: CameraEvent[\"zoom\"], cameraState: CameraState)=>void);\n            return ()=>{this.zoomCallbackList = this.zoomCallbackList.filter((cb) => cb !== callback)};\n        case \"rotate\":\n            this.rotateCallbackList.push(callback as (event: CameraEvent[\"rotate\"], cameraState: CameraState)=>void);\n            return ()=>{this.rotateCallbackList = this.rotateCallbackList.filter((cb) => cb !== callback)};\n        }\n        return ()=>{};\n    }\n\n    clearCallbacks(): void {\n        this.panCallbackList = [];\n        this.zoomCallbackList = [];\n        this.rotateCallbackList = [];\n    }\n    \n}\n","import { Point } from 'src';\nimport { Boundaries } from 'src/board-camera';\nimport { CameraObserverV2, UnSubscribe } from 'src/camera-observer';\nimport { withinBoundaries } from 'src/board-camera/utils/position';\nimport { zoomLevelWithinLimits, ZoomLevelLimits, clampZoomLevel } from 'src/board-camera/utils/zoom';\nimport { RotationLimits, rotationWithinLimits, normalizeAngleZero2TwoPI, clampRotation } from 'src/board-camera/utils/rotation';\nimport { convert2WorldSpace } from 'src/board-camera/utils/coordinate-conversion';\nimport { PointCal } from 'point2point';\nimport { CameraEvent, CameraState } from 'src/camera-observer';\nimport { BoardCamera } from 'src/board-camera/interface';\n\nexport default class BoardCameraV2 implements BoardCamera {\n\n    private _position: Point;\n    private _rotation: number;\n    private _zoomLevel: number;\n\n    private _viewPortWidth: number;\n    private _viewPortHeight: number;\n\n    private _boundaries?: Boundaries;\n    private _zoomBoundaries?: ZoomLevelLimits;\n    private _rotationBoundaries?: RotationLimits;\n\n    private _observer: CameraObserverV2;\n\n    constructor(cameraObserver: CameraObserverV2 = new CameraObserverV2(), position: Point = {x: 0, y: 0}, viewPortWidth: number = 1000, viewPortHeight: number = 1000, zoomLevel: number =  1, rotation: number = 0){\n        this._position = position;\n        this._zoomLevel = zoomLevel;\n        this._rotation = rotation;\n        this._viewPortHeight = viewPortHeight;\n        this._viewPortWidth = viewPortWidth;\n        this._observer = cameraObserver;\n    }\n\n    get boundaries(): Boundaries | undefined{\n        return this._boundaries;\n    }\n\n    set boundaries(boundaries: Boundaries | undefined){\n        this._boundaries = boundaries;\n    }\n\n    get viewPortWidth(): number{\n        return this._viewPortWidth;\n    }\n\n    set viewPortWidth(width: number){\n        this._viewPortWidth = width;\n    }\n\n    get viewPortHeight(): number{\n        return this._viewPortHeight;\n    }\n\n    set viewPortHeight(height: number){\n        this._viewPortHeight = height;\n    }\n\n    get position(): Point{\n        return this._position;\n    }\n\n    get observer(): CameraObserverV2{\n        return this._observer;\n    }\n\n    setPosition(destination: Point){\n        if(withinBoundaries(destination, this._boundaries)){\n            const diff = PointCal.subVector(destination, this._position);\n            if(PointCal.magnitude(diff) < 10E-10 && PointCal.magnitude(diff) < 1 / this._zoomLevel){\n                return;\n            }\n            this._position = destination;\n            this._observer.notifyPositionChange(diff, {position: this._position, rotation: this._rotation, zoomLevel: this._zoomLevel})\n        }\n    }\n\n    get zoomLevel(): number{\n        return this._zoomLevel;\n    }\n\n    get zoomBoundaries(): ZoomLevelLimits | undefined{\n        return this._zoomBoundaries;\n    }\n\n    set zoomBoundaries(zoomBoundaries: ZoomLevelLimits | undefined){\n        if(zoomBoundaries !== undefined && zoomBoundaries.min !== undefined && zoomBoundaries.max !== undefined && zoomBoundaries.min > zoomBoundaries.max){\n            let temp = zoomBoundaries.max;\n            zoomBoundaries.max = zoomBoundaries.min;\n            zoomBoundaries.min = temp;\n        }\n        this._zoomBoundaries = zoomBoundaries;\n    }\n\n    setMaxZoomLevel(maxZoomLevel: number){\n        if(this._zoomBoundaries == undefined){\n            this._zoomBoundaries = {min: undefined, max: undefined};\n        }\n        if((this._zoomBoundaries.min != undefined && this._zoomBoundaries.min > maxZoomLevel) || this._zoomLevel > maxZoomLevel){\n            return false;\n        }\n        this._zoomBoundaries.max = maxZoomLevel;\n        return true\n    }\n\n    setMinZoomLevel(minZoomLevel: number){\n        if(this._zoomBoundaries == undefined){\n            this._zoomBoundaries = {min: undefined, max: undefined};\n        }\n        if((this._zoomBoundaries.max != undefined && this._zoomBoundaries.max < minZoomLevel)){\n            return false;\n        }\n        this._zoomBoundaries.min = minZoomLevel;\n        if(this._zoomLevel < minZoomLevel){\n            this._zoomLevel = minZoomLevel;\n        }\n        return true;\n    }\n\n    setZoomLevel(zoomLevel: number){\n        if(zoomLevelWithinLimits(zoomLevel, this._zoomBoundaries)){\n            if(this._zoomBoundaries !== undefined && this._zoomBoundaries.max !== undefined && clampZoomLevel(zoomLevel, this._zoomBoundaries) == this._zoomBoundaries.max && this._zoomLevel == this._zoomBoundaries.max){\n                return;\n            }\n            if(this._zoomBoundaries !== undefined && this._zoomBoundaries.min !== undefined && clampZoomLevel(zoomLevel, this._zoomBoundaries) == this._zoomBoundaries.min && this._zoomLevel == this._zoomBoundaries.min){\n                return;\n            }\n            const curZoom = this._zoomLevel;\n            this._zoomLevel = zoomLevel;\n            this._observer.notifyZoomChange(this._zoomLevel - curZoom, {position: this._position, rotation: this._rotation, zoomLevel: this._zoomLevel});\n        }\n    }\n\n    get rotation(): number{\n        return this._rotation;\n    }\n\n    get rotationBoundaries(): RotationLimits | undefined{\n        return this._rotationBoundaries;\n    }\n\n    set rotationBoundaries(rotationBoundaries: RotationLimits | undefined){\n        if(rotationBoundaries !== undefined && rotationBoundaries.start !== undefined && rotationBoundaries.end !== undefined && rotationBoundaries.start > rotationBoundaries.end){\n            let temp = rotationBoundaries.end;\n            rotationBoundaries.end = rotationBoundaries.start;\n            rotationBoundaries.start = temp;\n        }\n        this._rotationBoundaries = rotationBoundaries;\n    }\n\n    setRotation(rotation: number){\n        if(rotationWithinLimits(rotation, this._rotationBoundaries)){\n            rotation = normalizeAngleZero2TwoPI(rotation);\n            if(this._rotationBoundaries !== undefined && this._rotationBoundaries.end !== undefined && clampRotation(rotation, this._rotationBoundaries) == this._rotationBoundaries.end && this._rotation == this._rotationBoundaries.end){\n                return;\n            }\n            if(this._rotationBoundaries !== undefined && this.rotationBoundaries.start !== undefined && clampRotation(rotation, this._rotationBoundaries) == this._rotationBoundaries.start && this._rotation == this._rotationBoundaries.start){\n                return;\n            }\n            this._observer.notifyRotationChange(rotation - this._rotation, {position: this._position, rotation: rotation, zoomLevel: this._zoomLevel});\n            this._rotation = rotation;\n        }\n    }\n\n    convertFromViewPort2WorldSpace(point: Point): Point{\n        return convert2WorldSpace(point, this._viewPortWidth, this._viewPortHeight, this._position, this._zoomLevel, this._rotation);\n    }\n    \n    invertFromWorldSpace2ViewPort(point: Point): Point{\n        let cameraFrameCenter = {x: this.viewPortWidth / 2, y: this._viewPortHeight / 2};\n        let delta2Point = PointCal.subVector(point, this._position);\n        delta2Point = PointCal.rotatePoint(delta2Point, -this._rotation);\n        delta2Point = PointCal.multiplyVectorByScalar(delta2Point, this._zoomLevel);\n        return PointCal.addVector(cameraFrameCenter, delta2Point);\n    }\n\n    setHorizontalBoundaries(min: number, max: number){\n        if (min > max){\n            let temp = max;\n            max = min;\n            min = temp;\n        }\n        if(this._boundaries == undefined){\n            this._boundaries = {min: {x: undefined, y: undefined}, max: {x: undefined, y: undefined}};\n        }\n        this._boundaries.min.x = min;\n        this._boundaries.max.x = max;\n        //NOTE leave for future optimization when setting the boundaries if the camera lies outside the boundaries clamp the position of the camera\n        // if(!this.withinBoundaries(this.position)){\n        //     this.position = this.clampPoint(this.position);\n        // }\n    }\n\n    setVerticalBoundaries(min: number, max: number){\n        if (min > max){\n            let temp = max;\n            max = min;\n            min = temp;\n        }\n        if(this._boundaries == undefined){\n            this._boundaries = {min: {x: undefined, y: undefined}, max: {x: undefined, y: undefined}};\n        }\n        this._boundaries.min.y = min;\n        this._boundaries.max.y = max;\n    }\n\n    on<K extends keyof CameraEvent>(eventName: K, callback: (event: CameraEvent[K], cameraState: CameraState)=>void): UnSubscribe {\n        return this._observer.on(eventName, callback);\n    }\n     \n}\n","import { PointCal } from \"point2point\";\nimport { Point } from \"..\";\nimport { BoardCamera } from \"src/board-camera\";\n\nimport { InputObserver } from \"src/input-observer/input-observer\";\n/**\n * @category Input Strategy\n */\nexport interface BoardKMTStrategy {\n    disabled: boolean;\n    debugMode: boolean;\n    alignCoordinateSystem: boolean;\n    panDisabled: boolean;\n    zoomDisabled: boolean;\n    rotateDisabled: boolean;\n    camera: BoardCamera;\n    canvas: HTMLCanvasElement;\n    setUp(): void;\n    tearDown(): void;\n    enableStrategy(): void;\n    disableStrategy(): void;\n    updateCamera(camera: BoardCamera): void;\n}\n\nexport class DefaultBoardKMTStrategy implements BoardKMTStrategy {\n\n    private SCROLL_SENSATIVITY: number;\n    private isDragging: boolean;\n    private dragStartPoint: Point;\n    private _canvas: HTMLCanvasElement;\n    private _camera: BoardCamera;\n    private _disabled: boolean;\n    private _debugMode: boolean;\n    private _alignCoordinateSystem: boolean;\n    private _panDisabled: boolean = false;\n    private _zoomDisabled: boolean = false;\n    private _rotateDisabled: boolean = false;\n    private _keyController: Map<string, boolean> = new Map<string, boolean>();\n\n    private inputObserver: InputObserver;\n\n    constructor(canvas: HTMLCanvasElement, camera:BoardCamera, inputObserver: InputObserver, debugMode: boolean = false, alignCoordinateSystem: boolean = true){\n        this.SCROLL_SENSATIVITY = 0.005;\n        this.isDragging = false;\n        this._canvas = canvas;\n        this._camera = camera;\n        this._debugMode = debugMode;\n        this._alignCoordinateSystem = alignCoordinateSystem;\n        this.bindFunctions();\n        this.inputObserver = inputObserver;\n    }\n\n    get debugMode(): boolean {\n        return this._debugMode;\n    }\n\n    set debugMode(value: boolean){\n        this._debugMode = value;\n    }\n\n    get alignCoordinateSystem(): boolean {\n        return this._alignCoordinateSystem;\n    }\n\n    set alignCoordinateSystem(value: boolean){\n        this._alignCoordinateSystem = value;\n    }\n\n    get panDisabled(): boolean {\n        return this._panDisabled;\n    }\n\n    set panDisabled(value: boolean){\n        this._panDisabled = value;\n        if(value){\n            this.canvas.style.cursor = \"auto\";\n            this.isDragging = false;\n            this.dragStartPoint = {x: 0, y: 0};\n        }\n    }\n\n    get zoomDisabled(): boolean {\n        return this._zoomDisabled;\n    }\n\n    set zoomDisabled(value: boolean){\n        this._zoomDisabled = value;\n    }\n\n    get rotateDisabled(): boolean {\n        return this._rotateDisabled;\n    }\n\n    set rotateDisabled(value: boolean){\n        this._rotateDisabled = value;\n    }\n\n    get camera(): BoardCamera {\n        return this._camera;\n    }\n\n    set camera(value: BoardCamera){\n        this._camera = value;\n    }\n\n    get canvas(): HTMLCanvasElement {\n        return this._canvas;\n    }\n\n    setUp(): void {\n        this.canvas.addEventListener('pointerdown', this.pointerDownHandler);\n        this.canvas.addEventListener('pointerup', this.pointerUpHandler);\n        this.canvas.addEventListener('pointermove', this.pointerMoveHandler);\n        this.canvas.addEventListener('wheel', this.scrollHandler);\n        window.addEventListener('keydown', this.keypressHandler);\n        window.addEventListener('keyup', this.keyupHandler);\n        this.setupKeyController([\" \"]);\n    }\n\n    tearDown(): void {\n        this.canvas.removeEventListener('pointerdown', this.pointerDownHandler);\n        this.canvas.removeEventListener('pointerup', this.pointerUpHandler);\n        this.canvas.removeEventListener('pointermove', this.pointerMoveHandler);\n        this.canvas.removeEventListener('wheel', this.scrollHandler);\n        window.removeEventListener('keydown', this.keypressHandler);\n        window.removeEventListener('keyup', this.keyupHandler);\n    }\n\n    bindFunctions(): void {\n        this.pointerDownHandler = this.pointerDownHandler.bind(this);\n        this.pointerUpHandler = this.pointerUpHandler.bind(this);\n        this.pointerMoveHandler = this.pointerMoveHandler.bind(this);\n        this.scrollHandler = this.scrollHandler.bind(this);\n        this.keypressHandler = this.keypressHandler.bind(this);\n        this.keyupHandler = this.keyupHandler.bind(this);\n    }\n\n    setupKeyController(keys: string[]): void {\n        keys.forEach((key) => {\n            this._keyController.set(key, false);\n        });\n    }\n\n    pointerDownHandler(e: PointerEvent){\n        if(this._disabled){\n            return;\n        }\n        if(e.pointerType === \"mouse\" && (e.button == 1 || e.metaKey || this._keyController.get(\" \")) && !this._panDisabled){\n            this.isDragging = true;\n            this.dragStartPoint = {x: e.clientX, y: e.clientY};\n        }\n    }\n\n    disableStrategy(): void {\n        this.isDragging = false;\n        this.dragStartPoint = {x: 0, y: 0};\n        this._disabled = true;\n    }\n\n    enableStrategy(): void {\n        this._disabled = false;\n    }\n\n    pointerUpHandler(e: PointerEvent){\n        if(this._disabled){\n            return;\n        }\n        if(e.pointerType === \"mouse\"){\n            if (this.isDragging) {\n                this.isDragging = false;\n            }\n            if (!this._debugMode) {\n                this.canvas.style.cursor = \"auto\";\n            } else {\n                this.canvas.style.cursor = \"none\";\n            }\n        }\n    }\n\n    pointerMoveHandler(e: PointerEvent){\n        if(this._disabled){\n            return;\n        }\n        if (e.pointerType == \"mouse\" && this.isDragging && !this._panDisabled){\n            if (this._debugMode) {\n                this.canvas.style.cursor = \"none\";\n            } else {\n                this.canvas.style.cursor = \"grabbing\";\n            }\n            const target = {x: e.clientX, y: e.clientY};\n            let diff = PointCal.subVector(this.dragStartPoint, target);\n            if(!this._alignCoordinateSystem){\n                diff = PointCal.flipYAxis(diff);\n            }\n            let diffInWorld = PointCal.rotatePoint(diff, this._camera.rotation);\n            diffInWorld = PointCal.multiplyVectorByScalar(diffInWorld, 1 / this._camera.zoomLevel);\n            this.inputObserver.notifyOnPan(this._camera, diffInWorld);\n            this.dragStartPoint = target;\n        }\n    }\n\n    scrollHandler(e: WheelEvent){\n        if(this._disabled) return;\n        e.preventDefault();\n        const zoomAmount = e.deltaY * this.SCROLL_SENSATIVITY;\n        if (!e.ctrlKey){\n            if(this._panDisabled){\n                return;\n            }\n            //NOTE this is panning the camera\n            // console.log(\"panning?: \", (Math.abs(e.deltaY) % 40 !== 0 || Math.abs(e.deltaY) == 0) ? \"yes\": \"no\");\n            // console.log(\"panning?\", e.deltaMode == 0 ? \"yes\": \"no\");\n            let diff = {x: e.deltaX, y: e.deltaY};\n            if(!this._alignCoordinateSystem){\n                diff = PointCal.flipYAxis(diff);\n            }\n            let diffInWorld = PointCal.rotatePoint(diff, this._camera.rotation);\n            diffInWorld = PointCal.multiplyVectorByScalar(diffInWorld, 1 / this._camera.zoomLevel);\n            this.inputObserver.notifyOnPan(this._camera, diffInWorld);\n        } else {\n            //NOTE this is zooming the camera\n            // console.log(\"zooming\");\n            if(this._zoomDisabled){\n                return;\n            }\n            const cursorPosition = {x: e.clientX, y: e.clientY};\n            let anchorPoint = PointCal.subVector(cursorPosition, {x: this.canvas.getBoundingClientRect().left, y: this.canvas.getBoundingClientRect().top});\n            if(!this._alignCoordinateSystem){\n                anchorPoint = PointCal.subVector(cursorPosition, {x: this.canvas.getBoundingClientRect().left, y: this.canvas.getBoundingClientRect().bottom});\n                anchorPoint = PointCal.flipYAxis(anchorPoint);\n            }\n            // const zoomLevel = this._camera.zoomLevel - (this._camera.zoomLevel * zoomAmount * 5);\n            this.inputObserver.notifyOnZoom(this._camera, -(this._camera.zoomLevel * zoomAmount * 5), anchorPoint);\n        }\n    }\n\n    keypressHandler(e: KeyboardEvent){\n        // console.log(\"key pressed is spacebar\", e.key == \" \");\n        if(this._keyController.has(e.key) && this._keyController.get(e.key) == false){\n            e.preventDefault();\n            this._keyController.set(e.key, true);\n        }\n    }\n\n    keyupHandler(e: KeyboardEvent){\n        if(this._keyController.has(e.key) && this._keyController.get(e.key) == true){\n            e.preventDefault();\n            this._keyController.set(e.key, false);\n            this.isDragging = false;\n            this.canvas.style.cursor = \"auto\";\n        }\n    }\n\n    updateCamera(camera: BoardCamera): void {\n        this._camera = camera;\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n}\n","import { PointCal } from \"point2point\";\nimport { Point } from \"src\";\nimport { BoardCamera } from \"src/board-camera/interface\";\nimport { InputCallBackList, InputObserver } from \"src/input-observer\";\nexport interface BoardTouchStrategy {\n    disabled: boolean;\n    alignCoordinateSystem: boolean;\n    panDisabled: boolean;\n    zoomDisabled: boolean;\n    rotateDisabled: boolean;\n    camera: BoardCamera;\n    updateCamera(camera: BoardCamera): void;\n    enableStrategy(): void;\n    disableStrategy(): void;\n    setUp(): void;\n    tearDown(): void;\n}\n\n/**\n * @category Input Strategy\n */\nexport class DefaultTouchStrategy implements BoardTouchStrategy {\n\n    private touchPoints: Point[];\n    private controlCamera: BoardCamera;\n    private canvas: HTMLCanvasElement;\n    private _disabled: boolean;\n    private _alignCoordinateSystem: boolean;\n    private _panDisabled: boolean = false;\n    private _zoomDisabled: boolean = false;\n    private _rotateDisabled: boolean = false;\n    private zoomStartDist: number;\n\n    private inputObserver: InputObserver;\n\n    private isDragging: boolean = false;\n    private dragStartPoint: Point;\n    private tapPoint: Point;\n\n\n    private ZOOM_SENSATIVITY: number = 0.005;\n\n    private panInputCallBackList: InputCallBackList<\"pan\"> = [];\n    private zoomInputCallBackList: InputCallBackList<\"zoom\"> = [];\n\n    constructor(canvas: HTMLCanvasElement, controlCamera: BoardCamera, inputObserver: InputObserver,alignCoordinateSystem: boolean = true){\n        this.controlCamera = controlCamera;\n        this.canvas = canvas;\n        this._disabled = false;\n        this.touchPoints = [];\n        this.zoomStartDist = 0;\n        this.isDragging = false;\n        this.dragStartPoint = {x: 0, y: 0};\n        this._alignCoordinateSystem = alignCoordinateSystem;\n\n        this.inputObserver = inputObserver;\n\n        this.bindListeners();\n    }\n\n    bindListeners(): void{\n        this.touchstartHandler = this.touchstartHandler.bind(this);\n        this.touchendHandler = this.touchendHandler.bind(this);\n        this.touchcancelHandler = this.touchcancelHandler.bind(this);\n        this.touchmoveHandler = this.touchmoveHandler.bind(this);\n    }\n\n    resetAttributes(): void{\n        this.touchPoints = [];\n        this.zoomStartDist = 0;\n        this.isDragging = false;\n        this.dragStartPoint = null;\n        this.tapPoint = null;\n    }\n\n    enableStrategy(): void {\n        this._disabled = false;\n    }\n\n    disableStrategy(): void {\n        this.resetAttributes();\n        this._disabled = true;\n    }\n\n    setUp(): void {\n        this.canvas.addEventListener('touchstart', this.touchstartHandler);\n        this.canvas.addEventListener('touchend', this.touchendHandler);\n        this.canvas.addEventListener('touchcancel', this.touchcancelHandler);\n        this.canvas.addEventListener('touchmove', this.touchmoveHandler);\n    }\n\n    tearDown(): void {\n        this.resetAttributes();\n        this.canvas.removeEventListener('touchstart', this.touchstartHandler);\n        this.canvas.removeEventListener('touchend', this.touchendHandler);\n        this.canvas.removeEventListener('touchcancel', this.touchcancelHandler);\n        this.canvas.removeEventListener('touchmove', this.touchmoveHandler);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    get alignCoordinateSystem(): boolean {\n        return this._alignCoordinateSystem;\n    }\n\n    set alignCoordinateSystem(alignCoordinateSystem: boolean){\n        this._alignCoordinateSystem = alignCoordinateSystem;\n    }\n\n    get panDisabled(): boolean {\n        return this._panDisabled;\n    }\n\n    set panDisabled(panDisabled: boolean){\n        this._panDisabled = panDisabled;\n    }\n\n    get zoomDisabled(): boolean {\n        return this._zoomDisabled;\n    }\n\n    set zoomDisabled(zoomDisabled: boolean){\n        this._zoomDisabled = zoomDisabled;\n    }\n\n    get rotateDisabled(): boolean {\n        return this._rotateDisabled;\n    }\n\n    set rotateDisabled(rotateDisabled: boolean){\n        this._rotateDisabled = rotateDisabled;\n    }\n\n    get camera(): BoardCamera {\n        return this.controlCamera;\n    }\n\n    set camera(camera: BoardCamera){\n        this.controlCamera = camera;\n    }\n\n    updateCamera(camera: BoardCamera): void {\n        this.controlCamera = camera;\n    }\n\n    touchstartHandler(e: TouchEvent){\n        if(this._disabled) {\n            return;\n        }\n        e.preventDefault();\n        if(e.targetTouches.length === 2){\n            this.isDragging = false;\n            let firstTouchPoint = {x: e.targetTouches[0].clientX, y: e.targetTouches[0].clientY};\n            let secondTouchPoint = {x: e.targetTouches[1].clientX, y: e.targetTouches[1].clientY};\n            this.zoomStartDist = PointCal.distanceBetweenPoints(firstTouchPoint, secondTouchPoint);\n            this.touchPoints = [firstTouchPoint, secondTouchPoint];\n        } else if (e.targetTouches.length === 1){\n            this.tapPoint = {x: e.targetTouches[0].clientX, y: e.targetTouches[0].clientY};\n            this.tapPoint = this.controlCamera.convertFromViewPort2WorldSpace(this.convertWindowPoint2ViewPortPoint({x: this.canvas.getBoundingClientRect().left, y: this.canvas.getBoundingClientRect().top}, this.tapPoint));\n            this.isDragging = true;\n            this.dragStartPoint = {x: e.targetTouches[0].clientX, y: e.targetTouches[0].clientY};\n        }\n    }\n\n    touchcancelHandler(e: TouchEvent){\n        if(this._disabled) {\n            return;\n        }\n        this.isDragging = false;\n        this.touchPoints = [];\n    }\n\n    touchendHandler(e: TouchEvent){\n        if(this._disabled) {\n            return;\n        }\n        this.isDragging = false;\n        this.touchPoints = [];\n    }\n\n    touchmoveHandler(e: TouchEvent){\n        if(this._disabled) {\n            return;\n        }\n        e.preventDefault();\n        if(e.targetTouches.length == 2 && this.touchPoints.length == 2){\n            //NOTE Touch Zooming\n            if(this._zoomDisabled){\n                return;\n            }\n            let startPoint = {x: e.targetTouches[0].clientX, y: e.targetTouches[0].clientY};\n            let endPoint = {x: e.targetTouches[1].clientX, y: e.targetTouches[1].clientY};\n            let touchPointDist = PointCal.distanceBetweenPoints(startPoint, endPoint);\n            let distDiff = this.zoomStartDist - touchPointDist;\n            let midPoint = PointCal.linearInterpolation(startPoint, endPoint, 0.5);\n            if(this._alignCoordinateSystem){\n                midPoint = this.convertWindowPoint2ViewPortPoint({x: this.canvas.getBoundingClientRect().left, y: this.canvas.getBoundingClientRect().top}, midPoint);\n            } else {\n                midPoint = this.convertWindowPoint2ViewPortPoint({x: this.canvas.getBoundingClientRect().left, y: this.canvas.getBoundingClientRect().bottom}, midPoint);\n            }\n            let zoomAmount = distDiff * 0.1 * this.controlCamera.zoomLevel * this.ZOOM_SENSATIVITY;\n            this.inputObserver.notifyOnZoom(this.controlCamera, -zoomAmount, midPoint);\n            // this._zoomHandler.zoomCameraToAt(this.controlCamera, this.controlCamera.zoomLevel - zoomAmount, midPoint);\n            // this.controlCamera.setZoomLevelWithClampFromGestureAtAnchorPoint(this.controlCamera.getZoomLevel() - zoomAmount, midPoint);\n            this.touchPoints = [startPoint, endPoint];\n            this.tapPoint = null;\n        } else if(e.targetTouches.length == 1 && this.isDragging && !this._panDisabled){\n            let touchPoint = {x: e.targetTouches[0].clientX, y: e.targetTouches[0].clientY};\n            let diff = PointCal.subVector(this.dragStartPoint, touchPoint);\n            if(!this._alignCoordinateSystem){\n                diff = PointCal.flipYAxis(diff);\n            }\n            let diffInWorld = PointCal.rotatePoint(diff, this.controlCamera.rotation);\n            diffInWorld = PointCal.multiplyVectorByScalar(diffInWorld, 1 / this.controlCamera.zoomLevel);\n            this.inputObserver.notifyOnPan(this.controlCamera, diffInWorld);\n            // this._panHandler.panCameraBy(this.camera, diffInWorld);\n            this.dragStartPoint = touchPoint;\n            this.tapPoint = null;\n        }\n    }\n\n    convertWindowPoint2ViewPortPoint(bottomLeftCornerOfCanvas: Point, clickPointInWindow: Point): Point {\n        const res = PointCal.subVector(clickPointInWindow, bottomLeftCornerOfCanvas);\n        if(this._alignCoordinateSystem) {\n            return {x: res.x, y: res.y};\n        } else {\n            return {x: res.x, y: -res.y};\n        }\n    }\n}\n","import { Boundaries, translationHeightOf, translationWidthOf } from \"src/board-camera/utils/position\";\nimport { ZoomLevelLimits } from \"src/board-camera/utils/zoom\";\n\nexport function minZoomLevelBaseOnDimensions(boundaries: Boundaries | undefined, canvasWidth: number, canvasHeight: number, cameraRotation: number): number | undefined{\n    const width = translationWidthOf(boundaries);\n    const height = translationHeightOf(boundaries);\n    if(width == undefined || height == undefined){\n        return undefined;\n    }\n    // console.log(canvasHeight, canvasWidth);\n    const widthWidthProjection = Math.abs(width * Math.cos(cameraRotation));\n    const heightWidthProjection = Math.abs(height * Math.cos(cameraRotation));\n    const widthHeightProjection = Math.abs(width * Math.sin(cameraRotation));\n    const heightHeightProjection = Math.abs(height * Math.sin(cameraRotation));\n    let minZoomLevelWidthWidth = canvasWidth / widthWidthProjection;\n    let minZoomLevelHeightWidth = canvasWidth / heightWidthProjection;\n    let minZoomLevelWidthHeight = canvasHeight / widthHeightProjection;\n    let minZoomLevelHeightHeight = canvasHeight / heightHeightProjection;\n    if(minZoomLevelWidthWidth == Infinity){\n        minZoomLevelWidthWidth = 0;\n    }\n    if(minZoomLevelHeightWidth == Infinity){\n        minZoomLevelHeightWidth = 0;\n    }\n    if(minZoomLevelWidthHeight == Infinity){\n        minZoomLevelWidthHeight = 0;\n    }\n    if(minZoomLevelHeightHeight == Infinity){\n        minZoomLevelHeightHeight = 0;\n    }\n\n    // console.log(minZoomLevelWidthWidth, minZoomLevelHeightWidth, minZoomLevelWidthHeight, minZoomLevelHeightHeight);\n\n    const minZoomLevelHeight = canvasHeight / height;\n    const minZoomLevelWidth = canvasWidth / width;\n    const minZoomLevel = Math.max(minZoomLevelHeight, minZoomLevelWidth, minZoomLevelWidthWidth, minZoomLevelHeightWidth, minZoomLevelWidthHeight, minZoomLevelHeightHeight);\n    return minZoomLevel;\n}\n\nexport function zoomLevelBoundariesShouldUpdate(zoomLevelBoundaries: ZoomLevelLimits | undefined, targetMinZoomLevel: number | undefined): boolean{\n    if(targetMinZoomLevel == undefined){\n        return false;\n    }\n    if(zoomLevelBoundaries == undefined){\n        return true;\n    }\n    if(targetMinZoomLevel == Infinity){\n        return false;\n    }\n    if(zoomLevelBoundaries !== undefined && (zoomLevelBoundaries.min == undefined || targetMinZoomLevel > zoomLevelBoundaries.min)){\n        return true;\n    }\n    return false;\n}\n\nexport function minZoomLevelBaseOnWidth(boundaries: Boundaries | undefined, canvasWidth: number, canvasHeight: number, cameraRotation: number): number | undefined{\n    const width = translationWidthOf(boundaries);\n    if(width == undefined){\n        return undefined;\n    }\n    const widthWidthProjection = Math.abs(width * Math.cos(cameraRotation));\n    const widthHeightProjection = Math.abs(width * Math.sin(cameraRotation));\n    const minZoomLevelWidthWidth = canvasWidth / widthWidthProjection;\n    const minZoomLevelWidthHeight = canvasHeight / widthHeightProjection;\n    if(minZoomLevelWidthWidth == Infinity){\n        return minZoomLevelWidthHeight;\n    }\n    const minZoomLevel = Math.max(canvasWidth / widthWidthProjection, canvasHeight / widthHeightProjection);\n    return minZoomLevel;\n}\n\nexport function minZoomLevelBaseOnHeight(boundaries: Boundaries | undefined, canvasWidth: number, canvasHeight: number, cameraRotation: number): number | undefined{\n    const height = translationHeightOf(boundaries);\n    if(height == undefined){\n        return undefined;\n    }\n    const heightWidthProjection = Math.abs(height * Math.cos(cameraRotation));\n    const heightHeightProjection = Math.abs(height * Math.sin(cameraRotation));\n    const minZoomLevelHeightWidth = canvasWidth / heightWidthProjection;\n    const minZoomLevelHeightHeight = canvasHeight / heightHeightProjection;\n    if(minZoomLevelHeightHeight == Infinity){\n        return minZoomLevelHeightWidth;\n    }\n    const minZoomLevel = Math.max(minZoomLevelHeightWidth, minZoomLevelHeightHeight);\n    return minZoomLevel;\n}\n","import { Point } from \"src\";\nimport { calculateOrderOfMagnitude } from \"src/util\";\nimport { Boundaries } from \"src/board-camera\";\nimport { boundariesFullyDefined, translationHeightOf, translationWidthOf } from \"src/board-camera/utils/position\";\nimport { PointCal } from \"point2point\";\n\nexport function drawCrossHair(context: CanvasRenderingContext2D, pos: Point, cameraZoomLevel: number, alignCoordinateSystem: boolean, size: number, color: string = \"red\"): void{\n    // size is the pixel shown in the viewport\n    let halfSize = size / 2;\n    halfSize = halfSize / cameraZoomLevel;\n    context.beginPath();\n    context.strokeStyle = color;\n    context.lineWidth = 2 / cameraZoomLevel;\n    if(alignCoordinateSystem){\n        context.moveTo(pos.x - halfSize, pos.y);\n        context.lineTo(pos.x + halfSize, pos.y);\n        context.moveTo(pos.x, pos.y - halfSize);\n        context.lineTo(pos.x, pos.y + halfSize);\n    } else {\n        context.moveTo(pos.x - halfSize, -pos.y);\n        context.lineTo(pos.x + halfSize, -pos.y);\n        context.moveTo(pos.x, -pos.y - halfSize);\n        context.lineTo(pos.x, -pos.y + halfSize);\n    }\n    context.stroke();\n    context.lineWidth = 3;\n}\n\nexport function drawBoundingBox(context: CanvasRenderingContext2D, boundaries: Boundaries, alignCoordinateSystem: boolean): void{\n    if(!boundariesFullyDefined(boundaries)){\n        return;\n    }\n    const width = translationWidthOf(boundaries);\n    const height = translationHeightOf(boundaries);\n    const curMin = boundaries == undefined ? undefined: boundaries.min;\n    const curMinX = curMin == undefined ? undefined: curMin.x;\n    const curMinY = curMin == undefined ? undefined: curMin.y;\n    if(curMinX == undefined || curMinY == undefined || width == undefined || height == undefined){\n        return;\n    }\n    context.beginPath();\n    context.strokeStyle = \"blue\";\n    context.lineWidth = 100;\n    if(alignCoordinateSystem){\n        context.roundRect(curMinX, curMinY,  width, height, 5);\n    } else {\n        context.roundRect(curMinX, -curMinY, width, -height, 5);\n    }\n    context.stroke();\n    context.lineWidth = 3;\n    context.strokeStyle = \"black\";\n}\n\nexport function drawAxis(context: CanvasRenderingContext2D, boundaries: Boundaries, zoomLevel: number, alignCoordinateSystem: boolean): void{\n    if(!boundariesFullyDefined(boundaries)){\n        // one of the direction is not defined\n        return;\n    }\n    const width = translationWidthOf(boundaries);\n    const height = translationHeightOf(boundaries);\n    const curMin = boundaries == undefined ? undefined: boundaries.min;\n    const curMinX = curMin == undefined ? undefined: curMin.x;\n    const curMinY = curMin == undefined ? undefined: curMin.y;\n    if(curMinX == undefined || curMinY == undefined || width == undefined || height == undefined){\n        return;\n    }\n    context.lineWidth = 1 / zoomLevel;\n    // y axis\n    context.beginPath();\n    context.strokeStyle = `rgba(87, 173, 72, 0.8)`;\n    context.moveTo(0, 0);\n    if(alignCoordinateSystem){\n        context.lineTo(0, curMinY + (height));\n    } else {\n        context.lineTo(0, -curMinY - (height));\n    }\n    context.stroke();\n    \n    // x axis\n    context.beginPath();\n    context.strokeStyle = `rgba(220, 59, 59, 0.8)`;\n    context.moveTo(0, 0);\n    context.lineTo(curMinX + width, 0);\n    context.stroke();\n    context.strokeStyle = \"black\";\n}\n\n// argument points are in world space\nexport function drawGrid(context: CanvasRenderingContext2D, topLeftCorner: Point, topRightCorner: Point, bottomLeftCorner: Point, bottomRightCorner: Point, alignCoordinateSystem: boolean, cameraZoomLevel: number, viewPortWidth: number, viewPortHeight: number): void{\n    // let topLeftCorner = {y: this._canvas.getBoundingClientRect().top, x: this._canvas.getBoundingClientRect().left};\n    // topLeftCorner = this.convertWindowPoint2WorldCoord(topLeftCorner);\n    // let topRightCorner = {y: this._canvas.getBoundingClientRect().top, x: this._canvas.getBoundingClientRect().right};\n    // topRightCorner = this.convertWindowPoint2WorldCoord(topRightCorner);\n    // let bottomLeftCorner = {y: this._canvas.getBoundingClientRect().bottom, x: this._canvas.getBoundingClientRect().left};\n    // bottomLeftCorner = this.convertWindowPoint2WorldCoord(bottomLeftCorner);\n    // let bottomRightCorner = {y: this._canvas.getBoundingClientRect().bottom, x: this._canvas.getBoundingClientRect().right};\n    // bottomRightCorner = this.convertWindowPoint2WorldCoord(bottomRightCorner);\n    let leftRightDirection = PointCal.unitVectorFromA2B(topLeftCorner, topRightCorner);\n    let topDownDirection = PointCal.unitVectorFromA2B(bottomLeftCorner, topLeftCorner);\n    let width = PointCal.distanceBetweenPoints(topLeftCorner, topRightCorner);\n    let orderOfMagnitude = calculateOrderOfMagnitude(width);\n    let divisor = Math.pow(10, orderOfMagnitude);\n    let subDivisor = divisor / 10;\n    let minHorizontalSmallTick = Math.ceil(topLeftCorner.x / subDivisor) * subDivisor;\n    let maxHorizontalSmallTick = Math.floor(topRightCorner.x / subDivisor) * subDivisor;\n    let minVerticalSmallTick = alignCoordinateSystem ? Math.floor(topLeftCorner.y / subDivisor) * subDivisor : Math.ceil(bottomLeftCorner.y / subDivisor) * subDivisor;\n    let maxVerticalSmallTick = alignCoordinateSystem ? Math.ceil(bottomLeftCorner.y / subDivisor) * subDivisor : Math.floor(topLeftCorner.y / subDivisor) * subDivisor;;\n\n    for(let i = minHorizontalSmallTick; i <= maxHorizontalSmallTick; i += subDivisor){\n        context.beginPath();\n        context.strokeStyle = \"black\";\n        context.fillStyle = \"black\";\n        context.lineWidth = 0.5 / cameraZoomLevel;\n        if(alignCoordinateSystem){\n            context.moveTo(i, topLeftCorner.y);\n            context.lineTo(i, topLeftCorner.y + viewPortHeight / cameraZoomLevel);\n        } else {\n            context.moveTo(i, -topLeftCorner.y);\n            context.lineTo(i, -topLeftCorner.y + viewPortHeight / cameraZoomLevel);\n        }\n        context.stroke();\n    }\n    for(let i = minVerticalSmallTick; i <= maxVerticalSmallTick; i += subDivisor){\n        context.beginPath();\n        context.strokeStyle = \"black\";\n        context.fillStyle = \"black\";\n        context.lineWidth = 0.5 / cameraZoomLevel;\n        if(!alignCoordinateSystem){\n            context.moveTo(topLeftCorner.x, -i);\n            context.lineTo(topLeftCorner.x + width / cameraZoomLevel, -i);\n        } else {\n            context.moveTo(topLeftCorner.x, i);\n            context.lineTo(topLeftCorner.x + width / cameraZoomLevel, i);\n        }\n        context.stroke();\n    }\n}\n\n// argument points are in world space\nexport function drawRuler(context: CanvasRenderingContext2D, topLeftCorner: Point, topRightCorner: Point, bottomLeftCorner: Point, bottomRightCorner: Point, alignCoordinateSystem: boolean, cameraZoomLevel: number): void{\n        // let topLeftCorner = {y: this._canvas.getBoundingClientRect().top, x: this._canvas.getBoundingClientRect().left};\n        // topLeftCorner = this.convertWindowPoint2WorldCoord(topLeftCorner);\n        // let topRightCorner = {y: this._canvas.getBoundingClientRect().top, x: this._canvas.getBoundingClientRect().right};\n        // topRightCorner = this.convertWindowPoint2WorldCoord(topRightCorner);\n        // let bottomLeftCorner = {y: this._canvas.getBoundingClientRect().bottom, x: this._canvas.getBoundingClientRect().left};\n        // bottomLeftCorner = this.convertWindowPoint2WorldCoord(bottomLeftCorner);\n        // let bottomRightCorner = {y: this._canvas.getBoundingClientRect().bottom, x: this._canvas.getBoundingClientRect().right};\n        // bottomRightCorner = this.convertWindowPoint2WorldCoord(bottomRightCorner);\n        let leftRightDirection = PointCal.unitVectorFromA2B(topLeftCorner, topRightCorner);\n        let topDownDirection = PointCal.unitVectorFromA2B(bottomLeftCorner, topLeftCorner);\n        let width = PointCal.distanceBetweenPoints(topLeftCorner, topRightCorner);\n        let orderOfMagnitude = calculateOrderOfMagnitude(width);\n        let divisor = Math.pow(10, orderOfMagnitude);\n        let halfDivisor = divisor / 2;\n        let subDivisor = divisor / 10;\n        let minHorizontalLargeTick = Math.ceil(topLeftCorner.x / divisor) * divisor;\n        let maxHorizontalLargeTick = Math.floor(topRightCorner.x / divisor) * divisor;\n        let minVerticalLargeTick = alignCoordinateSystem ? Math.ceil(topLeftCorner.y / divisor) * divisor : Math.floor(bottomLeftCorner.y / divisor) * divisor;\n        let maxVerticalLargeTick = alignCoordinateSystem ? Math.floor(bottomLeftCorner.y / divisor) * divisor : Math.ceil(topLeftCorner.y / divisor) * divisor;\n        let minHorizontalMediumTick = Math.ceil(topLeftCorner.x / halfDivisor) * halfDivisor;\n        let maxHorizontalMediumTick = Math.floor(topRightCorner.x / halfDivisor) * halfDivisor;\n        let minVerticalMediumTick = alignCoordinateSystem ? Math.ceil(topLeftCorner.y / halfDivisor) * halfDivisor : Math.floor(bottomLeftCorner.y / halfDivisor) * halfDivisor;\n        let maxVerticalMediumTick = alignCoordinateSystem ? Math.floor(bottomLeftCorner.y / halfDivisor) * halfDivisor : Math.ceil(topLeftCorner.y / halfDivisor) * halfDivisor;\n        let minHorizontalSmallTick = Math.ceil(topLeftCorner.x / subDivisor) * subDivisor;\n        let maxHorizontalSmallTick = Math.floor(topRightCorner.x / subDivisor) * subDivisor;\n        let minVerticalSmallTick = alignCoordinateSystem ? Math.ceil(topLeftCorner.y / subDivisor) * subDivisor : Math.floor(bottomLeftCorner.y / subDivisor) * subDivisor;\n        let maxVerticalSmallTick = alignCoordinateSystem ? Math.floor(bottomLeftCorner.y / subDivisor) * subDivisor : Math.ceil(topLeftCorner.y / subDivisor) * subDivisor;\n       \n        let divisorInActualPixel = divisor * cameraZoomLevel;\n        let halfDivisorInActualPixel = halfDivisor * cameraZoomLevel;\n        let subDivisorInActualPixel = subDivisor * cameraZoomLevel;\n\n        \n        context.font = `bold ${20 / cameraZoomLevel}px Helvetica`;\n        const midBaseLineTextDimensions = context.measureText(`${-(halfDivisor + minHorizontalMediumTick)}`);\n        const midBaseLineHeight =  midBaseLineTextDimensions.fontBoundingBoxAscent + midBaseLineTextDimensions.fontBoundingBoxDescent;\n        const subBaseLineTextDimensions = context.measureText(`${-(subDivisor + minHorizontalSmallTick)}`);\n        const subBaseLineHeight = subBaseLineTextDimensions.fontBoundingBoxAscent + subBaseLineTextDimensions.fontBoundingBoxDescent;\n\n        for(let i = minHorizontalLargeTick; i <= maxHorizontalLargeTick; i += divisor){\n            context.beginPath();\n            context.strokeStyle = \"black\";\n            context.fillStyle = \"black\";\n            context.lineWidth = 5 / cameraZoomLevel;\n            let resPoint = PointCal.addVector({x: i, y: topLeftCorner.y}, PointCal.multiplyVectorByScalar(topDownDirection, 50 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.moveTo(resPoint.x, -resPoint.y);\n            } else {\n                context.moveTo(resPoint.x, resPoint.y);\n            }\n            resPoint = PointCal.addVector({x: i, y: topLeftCorner.y}, PointCal.multiplyVectorByScalar(topDownDirection, -50 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.lineTo(resPoint.x, -resPoint.y);\n            } else {\n                context.lineTo(resPoint.x, resPoint.y);\n            }\n            context.textAlign = \"center\";\n            context.textBaseline = \"middle\";\n            context.font = `bold ${20 / cameraZoomLevel}px Helvetica`;\n            const textDimensions = context.measureText(`${i.toFixed(0)}`);\n            const height = textDimensions.fontBoundingBoxAscent + textDimensions.fontBoundingBoxDescent;\n            if(!alignCoordinateSystem){\n                resPoint = PointCal.addVector(resPoint, {x: 0, y: -height / 2 - height * 0.2})\n                context.fillText(`${i.toFixed(0)}`, resPoint.x , -resPoint.y);\n            } else {\n                resPoint = PointCal.addVector(resPoint, {x: 0, y: height / 2 + height * 0.2})\n                context.fillText(`${i.toFixed(0)}`, resPoint.x , resPoint.y);\n            }\n            context.stroke();\n        }\n        for(let i = minVerticalLargeTick; i <= maxVerticalLargeTick; i += divisor){\n            context.beginPath();\n            context.strokeStyle = \"black\";\n            context.fillStyle = \"black\";\n            context.lineWidth = 5 / cameraZoomLevel;\n            let resPoint = PointCal.addVector({x: topLeftCorner.x, y: i}, PointCal.multiplyVectorByScalar(leftRightDirection, -50 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.moveTo(resPoint.x, -resPoint.y);\n            } else {\n                context.moveTo(resPoint.x, resPoint.y);\n            }\n            resPoint = PointCal.addVector({x: topLeftCorner.x, y: i}, PointCal.multiplyVectorByScalar(leftRightDirection, 50 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.lineTo(resPoint.x, -resPoint.y);\n            } else {\n                context.lineTo(resPoint.x, resPoint.y);\n            }\n            context.textAlign = \"center\";\n            context.textBaseline = \"middle\";\n            context.font = `bold ${20 / cameraZoomLevel}px Helvetica`;\n            \n            const textDimensions = context.measureText(`${i.toFixed(0)}`);\n            resPoint = PointCal.addVector(resPoint, {x: textDimensions.width / 2 + textDimensions.width * 0.3, y: 0});\n            if(!alignCoordinateSystem){\n                context.fillText(`${i.toFixed(0)}`, resPoint.x, -resPoint.y);\n            } else {\n                context.fillText(`${i.toFixed(0)}`, resPoint.x, resPoint.y);\n            }\n            context.stroke();\n        }\n        for(let i = minHorizontalMediumTick; i <= maxHorizontalMediumTick; i += halfDivisor){\n            if(i % divisor == 0) continue;\n            context.beginPath();\n            context.strokeStyle = \"black\";\n            context.fillStyle = \"black\";\n            context.lineWidth = 3 / cameraZoomLevel;\n            let resPoint = PointCal.addVector({x: i, y: topLeftCorner.y}, PointCal.multiplyVectorByScalar(topDownDirection, 25 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.moveTo(resPoint.x, -resPoint.y);\n            } else {\n                context.moveTo(resPoint.x, resPoint.y);\n            }\n            resPoint = PointCal.addVector({x: i, y: topLeftCorner.y}, PointCal.multiplyVectorByScalar(topDownDirection, -25 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.lineTo(resPoint.x, -resPoint.y);\n            } else {\n                context.lineTo(resPoint.x, resPoint.y);\n            }\n            context.font = `${15 / cameraZoomLevel}px Helvetica`;\n            const textDimensions = context.measureText(`${i.toFixed(0)}`);\n            if(halfDivisorInActualPixel > midBaseLineTextDimensions.width * 2) {\n                context.textAlign = \"center\";\n                context.textBaseline = \"middle\";\n                const height = textDimensions.fontBoundingBoxAscent + textDimensions.fontBoundingBoxDescent;\n                if(!alignCoordinateSystem){\n                    resPoint = PointCal.addVector(resPoint, {x: 0, y: -height / 2 - height * 0.2});\n                    resPoint = PointCal.flipYAxis(resPoint);\n                } else {\n                    resPoint = PointCal.addVector(resPoint, {x: 0, y: height / 2 + height * 0.2});\n                }\n                context.fillText(`${i.toFixed(0)}`, resPoint.x , resPoint.y);\n            }\n            context.stroke();\n        }\n        for(let i = minVerticalMediumTick; i <= maxVerticalMediumTick; i += halfDivisor){\n            if(i % divisor == 0) continue;\n            context.beginPath();\n            context.strokeStyle = \"black\";\n            context.fillStyle = \"black\";\n            context.lineWidth = 3 / cameraZoomLevel;\n            let resPoint = PointCal.addVector({x: topLeftCorner.x, y: i}, PointCal.multiplyVectorByScalar(leftRightDirection, -25 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.moveTo(resPoint.x, -resPoint.y);\n            } else {\n                context.moveTo(resPoint.x, resPoint.y);\n            }\n            resPoint = PointCal.addVector({x: topLeftCorner.x, y: i}, PointCal.multiplyVectorByScalar(leftRightDirection, 25 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.lineTo(resPoint.x, -resPoint.y);\n            } else {\n                context.lineTo(resPoint.x, resPoint.y);\n            }\n            context.font = `${18 / cameraZoomLevel}px Helvetica`;\n            const textDimensions = context.measureText(`${i.toFixed(0)}`);\n            const height = textDimensions.fontBoundingBoxAscent + textDimensions.fontBoundingBoxDescent;\n            if(halfDivisorInActualPixel > midBaseLineHeight * 2) {\n                context.textAlign = \"center\";\n                context.textBaseline = \"middle\";\n                resPoint = PointCal.addVector(resPoint, {x: textDimensions.width / 2 + textDimensions.width * 0.3, y: 0});\n                if(!alignCoordinateSystem){\n                    resPoint = PointCal.flipYAxis(resPoint);\n                }\n                context.fillText(`${i.toFixed(0)}`, resPoint.x, resPoint.y );\n            }\n            context.stroke();\n        }\n        for(let i = minHorizontalSmallTick; i <= maxHorizontalSmallTick; i += subDivisor){\n            if(i % divisor == 0 || i % halfDivisor == 0) continue;\n            context.beginPath();\n            context.strokeStyle = \"black\";\n            context.fillStyle = \"black\";\n            context.lineWidth = 1 / cameraZoomLevel;\n            let resPoint = PointCal.addVector({x: i, y: topLeftCorner.y}, PointCal.multiplyVectorByScalar(topDownDirection, 12.5 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.moveTo(resPoint.x, -resPoint.y);\n            } else {\n                context.moveTo(resPoint.x, resPoint.y);\n            }\n            resPoint = PointCal.addVector({x: i, y: topLeftCorner.y}, PointCal.multiplyVectorByScalar(topDownDirection, -12.5 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.lineTo(resPoint.x, -resPoint.y);\n            } else {\n                context.lineTo(resPoint.x, resPoint.y);\n            }\n            context.font = `${10 / cameraZoomLevel}px Helvetica`;\n            const textDimensions = context.measureText(`${i.toFixed(0)}`);\n            if(subDivisorInActualPixel > subBaseLineTextDimensions.width * 2) {\n                context.textAlign = \"center\";\n                context.textBaseline = \"middle\";\n                const height = textDimensions.fontBoundingBoxAscent + textDimensions.fontBoundingBoxDescent;\n                if(!alignCoordinateSystem){\n                    resPoint = PointCal.addVector(resPoint, {x: 0, y: -height / 2 - height * 0.2});\n                    resPoint = PointCal.flipYAxis(resPoint);\n                } else {\n                    resPoint = PointCal.addVector(resPoint, {x: 0, y: height / 2 + height * 0.2});\n                }\n                context.fillText(`${i.toFixed(0)}`, resPoint.x , resPoint.y);\n            }\n            context.stroke();\n        }\n        for(let i = minVerticalSmallTick; i <= maxVerticalSmallTick; i += subDivisor){\n            if(i % divisor == 0 || i % halfDivisor == 0) continue;\n            context.beginPath();\n            context.strokeStyle = \"black\";\n            context.fillStyle = \"black\";\n            context.lineWidth = 1 / cameraZoomLevel;\n            let resPoint = PointCal.addVector({x: topLeftCorner.x, y: i}, PointCal.multiplyVectorByScalar(leftRightDirection, -12.5 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.moveTo(resPoint.x, -resPoint.y);\n            } else {\n                context.moveTo(resPoint.x, resPoint.y);\n            }\n            resPoint = PointCal.addVector({x: topLeftCorner.x, y: i}, PointCal.multiplyVectorByScalar(leftRightDirection, 12.5 / cameraZoomLevel));\n            if(!alignCoordinateSystem){\n                context.lineTo(resPoint.x, -resPoint.y);\n            } else {\n                context.lineTo(resPoint.x, resPoint.y);\n            }\n            context.font = `${12 / cameraZoomLevel}px Helvetica`;\n            const textDimensions = context.measureText(`${i.toFixed(0)}`);\n            const height = textDimensions.fontBoundingBoxAscent + textDimensions.fontBoundingBoxDescent;\n            if(subDivisorInActualPixel > subBaseLineHeight * 2) {\n                context.textAlign = \"center\";\n                context.textBaseline = \"middle\";\n                resPoint = PointCal.addVector(resPoint, {x: textDimensions.width / 2 + textDimensions.width * 0.3, y: 0});\n                if(!alignCoordinateSystem){\n                    resPoint = PointCal.flipYAxis(resPoint);\n                }\n                context.fillText(`${i.toFixed(0)}`, resPoint.x, resPoint.y );\n            }\n            context.stroke();\n        }\n}\n\n\nexport function drawPositionText(context: CanvasRenderingContext2D, pos: Point, cameraZoomLevel: number, alignCoordinateSystem: boolean, offset: number = 20, color: string=\"red\"): void{\n    offset = offset / cameraZoomLevel; \n    context.font = `${20 / cameraZoomLevel}px Arial`;\n    context.fillStyle = color;\n    if(alignCoordinateSystem){\n        context.fillText(`x: ${pos.x.toFixed(2)}, y: ${pos.y.toFixed(2)}`, pos.x + offset, pos.y + offset);\n    } else {\n        context.fillText(`x: ${pos.x.toFixed(2)}, y: ${pos.y.toFixed(2)}`, pos.x + offset, -pos.y - offset);\n    }\n    context.fillStyle = \"black\";\n}\n\n\nexport function drawReferenceCircle(context: CanvasRenderingContext2D, pos: Point, alignCoordinateSystem: boolean): void {\n    context.beginPath();\n    context.strokeStyle = `rgba(87, 173, 72, 0.8)`;\n    // context.moveTo(pos.x, -pos.y);\n    if(alignCoordinateSystem){\n        context.arc(pos.x, pos.y, 5, 0, 2 * Math.PI);\n    } else {\n        context.arc(pos.x, -pos.y, 5, 0, 2 * Math.PI);\n    }\n    context.stroke();\n    context.strokeStyle = \"black\";\n}\n","import { BoardCamera, RotationHandler } from \"src/board-camera\";\nimport { PanController, PanHandler, ZoomHandler, ZoomController } from \"src/board-camera\";\n\nexport interface BoardCameraSubscriber {\n    updateCamera(camera: BoardCamera): void;\n}\n\nexport interface BoardPanHandlerSubscriber {\n    updatePanHandler(panHandler: PanHandler): void;\n}\n\nexport interface BoardZoomHandlerSubscriber {\n    updateZoomHandler(zoomHandler: ZoomHandler): void;\n}\n\nexport interface BoardRotationHandlerSubscriber {\n    updateRotationHandler(rotationHandler: RotationHandler): void;\n}\n\nexport class BoardStateObserver {\n    \n    private _camera: BoardCamera;\n    private _panHandler: PanController; \n    private _zoomHandler: ZoomController;\n    private _rotationHandler: RotationHandler;\n\n    private cameraSubscribers: BoardCameraSubscriber[] = [];\n    private panHandlerSubscribers: BoardPanHandlerSubscriber[] = [];\n    private zoomHandlerSubscribers: BoardZoomHandlerSubscriber[] = [];\n    private rotationHandlerSubscribers: BoardRotationHandlerSubscriber[] = [];\n\n    constructor(camera: BoardCamera){\n        this._camera = camera;\n    }\n\n    subscribeToCamera(subscriber: BoardCameraSubscriber){\n        this.cameraSubscribers.push(subscriber);\n    }\n\n    unsubscribeToCamera(subscriber: BoardCameraSubscriber){\n        this.cameraSubscribers = this.cameraSubscribers.filter((sub) => sub !== subscriber);\n    }\n\n    subscribeToPanHandler(subscriber: BoardPanHandlerSubscriber){\n        this.panHandlerSubscribers.push(subscriber);\n    }\n\n    unsubscribeToPanHandler(subscriber: BoardPanHandlerSubscriber){\n        this.panHandlerSubscribers = this.panHandlerSubscribers.filter((sub) => sub !== subscriber);\n    }\n\n    subscribeToZoomHandler(subscriber: BoardZoomHandlerSubscriber){\n        this.zoomHandlerSubscribers.push(subscriber);\n    }\n\n    unsubscribeToZoomHandler(subscriber: BoardZoomHandlerSubscriber){\n        this.zoomHandlerSubscribers = this.zoomHandlerSubscribers.filter((sub) => sub !== subscriber);\n    }\n\n    subscribeToRotationHandler(subscriber: BoardRotationHandlerSubscriber): ()=> void{\n        this.rotationHandlerSubscribers.push(subscriber);\n        return () => {\n            this.rotationHandlerSubscribers = this.rotationHandlerSubscribers.filter((sub) => sub !== subscriber);\n        }\n    }\n\n    get camera(): BoardCamera{\n        return this._camera;\n    }\n\n    set camera(camera: BoardCamera){\n        this._camera = camera;\n        this.notifyCameraChange();\n    }\n\n    get panHandler(): PanController{\n        return this._panHandler;\n    }\n\n    set panHandler(panHandler: PanController){\n        this._panHandler = panHandler;\n        this.notifyPanHandlerChange();\n    }\n\n    get zoomHandler(): ZoomController{\n        return this._zoomHandler;\n    }\n\n    set zoomHandler(zoomHandler: ZoomController){\n        this._zoomHandler = zoomHandler;\n        this.notifyZoomHandlerChange();\n    }\n\n    get rotationHandler(): RotationHandler{\n        return this._rotationHandler;\n    }\n\n    set rotationHandler(rotationHandler: RotationHandler){\n        this._rotationHandler = rotationHandler;\n        this.notifyRotationHandlerChange();\n    }\n\n    notifyCameraChange(){\n        this.cameraSubscribers.forEach((sub) => sub.updateCamera(this._camera));\n    }\n\n    notifyPanHandlerChange(){\n        this.panHandlerSubscribers.forEach((sub) => sub.updatePanHandler(this._panHandler));\n    }\n    \n    notifyZoomHandlerChange(){\n        this.zoomHandlerSubscribers.forEach((sub) => sub.updateZoomHandler(this._zoomHandler));\n    }\n\n    notifyRotationHandlerChange(){\n        this.rotationHandlerSubscribers.forEach((sub) => sub.updateRotationHandler(this._rotationHandler));\n    }\n    \n}\n","import { Point } from \"src/index\";\nimport { InputControlCenter } from \"src/control-center\";\nimport { BoardCamera } from \"src/board-camera\";\n\nexport type UnsubscribeToInput = () => void;\n\nexport type PanInputEvent = {\n    diff: Point;\n}\n\nexport type ZoomInputEvent = {\n    deltaZoomAmount: number;\n    anchorPoint: Point;\n}\n\nexport type RotateInputEvent = {\n    deltaRotation: number;\n}\n\nexport type BoardInputEvent = {\n    \"pan\": PanInputEvent,\n    \"zoom\": ZoomInputEvent,\n    \"rotate\": RotateInputEvent\n}\n\nexport type InputCallBackList<K extends keyof BoardInputEvent> = ((event: BoardInputEvent[K])=>void)[];\n\n/**\n * @category Input Observer\n * @translationBlock This is the observer class that listens to input events and notifies the control center.\n */\nexport class InputObserver {\n\n    private panCallbackList: InputCallBackList<\"pan\"> = [];\n    private zoomCallbackList: InputCallBackList<\"zoom\"> = [];\n    private rotateCallbackList: InputCallBackList<\"rotate\"> = [];\n\n    private _controlCenter: InputControlCenter;\n\n    constructor(controlCenter: InputControlCenter){\n        this._controlCenter = controlCenter;\n    }\n\n    notifyOnPan(camera: BoardCamera, diff: Point): void{\n        this._controlCenter.notifyPanInput(camera, diff);\n        this.panCallbackList.forEach((callback) => {\n            queueMicrotask(()=>{callback({diff: diff});});\n        });\n    }\n\n    notifyOnZoom(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void{\n        this._controlCenter.notifyZoomInput(camera, deltaZoomAmount, anchorPoint);\n        this.zoomCallbackList.forEach((callback) => {\n            queueMicrotask(()=>{callback({deltaZoomAmount: deltaZoomAmount, anchorPoint: anchorPoint});});\n        });\n    }\n\n    notifyOnRotation(camera: BoardCamera, deltaRotation: number): void{\n        this._controlCenter.notifyRotationInput(camera, deltaRotation);\n        this.rotateCallbackList.forEach((callback) => {\n            queueMicrotask(()=>{callback({deltaRotation: deltaRotation});});\n        });\n    }\n\n    onInput<K extends keyof BoardInputEvent>(eventName: K, callback: (event: BoardInputEvent[K])=>void): UnsubscribeToInput {\n        switch (eventName){\n        case \"pan\":\n            this.panCallbackList.push(callback as (event: BoardInputEvent[\"pan\"])=>void);\n            return () => {\n                this.panCallbackList = this.panCallbackList.filter((cb) => cb !== callback);\n            }\n        case \"zoom\":\n            this.zoomCallbackList.push(callback as (event: BoardInputEvent[\"zoom\"])=>void);\n            return () => {\n                this.zoomCallbackList = this.zoomCallbackList.filter((cb) => cb !== callback);\n            }\n        case \"rotate\":\n            this.rotateCallbackList.push(callback as (event: BoardInputEvent[\"rotate\"])=>void);\n            return () => {\n                this.rotateCallbackList = this.rotateCallbackList.filter((cb) => cb !== callback);\n            }\n        default:\n            throw new Error(\"Invalid input event name\");\n        }\n    }\n\n    get controlCenter(): InputControlCenter {\n        return this._controlCenter;\n    }\n\n    set controlCenter(value: InputControlCenter){\n        this._controlCenter = value;\n    }\n}\n","import { Point } from \"src/index\";\nimport { PanController } from \"src/board-camera/pan\";\nimport { ZoomController } from \"src/board-camera/zoom\";\nimport { RotationController } from \"src/board-camera/rotation\";\nimport { BoardCamera } from \"src/board-camera/interface\";\n\nexport interface InputControlCenter {\n    panController: PanController;\n    zoomController: ZoomController;\n    rotationController: RotationController;\n    notifyPanInput(camera: BoardCamera, diff: Point): void;\n    notifyZoomInput(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void;\n    notifyRotationInput(camera: BoardCamera, deltaRotation: number): void;\n}\n\nexport class SimpleRelay implements InputControlCenter {\n\n    private _panController: PanController;\n    private _zoomController: ZoomController;\n    private _rotationController: RotationController;\n\n    constructor(panHandler: PanController, zoomHandler: ZoomController, rotationHandler: RotationController){\n        this._panController = panHandler;\n        this._zoomController = zoomHandler;\n        this._rotationController = rotationHandler;\n    }\n\n    get panController(): PanController {\n        return this._panController;\n    }\n\n    get zoomController(): ZoomController {\n        return this._zoomController;\n    }\n\n    get rotationController(): RotationController {\n        return this._rotationController;\n    }\n\n    notifyPanInput(camera: BoardCamera, diff: Point): void {\n        this._panController.panCameraBy(camera, diff);\n    }\n\n    notifyZoomInput(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void {\n        this._zoomController.zoomCameraToAt(camera, camera.zoomLevel + deltaZoomAmount, anchorPoint);\n    }\n\n    notifyRotationInput(camera: BoardCamera, deltaRotation: number): void {\n        this._rotationController.rotateCameraBy(camera, deltaRotation);\n    }\n}\n","export function easeInSine(x: number): number {\n    return 1 - Math.cos((x * Math.PI) / 2);\n}\n\nexport function easeOutSine(x: number): number {\n    return Math.sin((x * Math.PI) / 2);\n}\n\nexport function easeInOutSine(x: number): number {\n    return -(Math.cos(Math.PI * x) - 1) / 2;\n}\n\nexport function easeInQuad(x: number): number {\n    return x * x;\n}\n\nexport function easeOutQuad(x: number): number {\n    return 1 - (1 - x) * (1 - x);\n}\n\nexport function easeInOutQuad(x: number): number {\n    return x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2;\n}\n\nexport function easeInCubic(x: number): number {\n    return x * x * x;\n}\n\nexport function easeOutCubic(x: number): number {\n    return 1 - Math.pow(1 - x, 3);    \n}\n\nexport function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}\n\nexport function easeInQuart(x: number): number {\n    return x * x * x * x;\n}\n\nexport function easeOutQuart(x: number): number {\n    return 1 - Math.pow(1 - x, 4);\n}\n\nexport function easeInOutQuart(x: number): number {\n    return x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2;\n}\n\nexport function easeInQuint(x: number): number {\n    return x * x * x * x * x;\n}\n\nexport function easeOutQuint(x: number): number {\n    return 1 - Math.pow(1 - x, 5);\n}\n\nexport function easeInOutQuint(x: number): number {\n    return x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2;\n}\n\nexport function easeInExpo(x: number): number {\n    return x === 0 ? 0 : Math.pow(2, 10 * x - 10);\n}\n\nexport function easeOutExpo(x: number): number {\n    return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n}\n\nexport function easeInOutExpo(x: number): number {\n    return x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2\n      : (2 - Math.pow(2, -20 * x + 10)) / 2;\n}\n\nexport function easeInCirc(x: number): number {\n    return 1 - Math.sqrt(1 - Math.pow(x, 2));\n}\n\nexport function easeOutCirc(x: number): number {\n    return Math.sqrt(1 - Math.pow(x - 1, 2));\n}\n\nexport function easeInOutCirc(x: number): number {\n    return x < 0.5\n      ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n      : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n}\n\nexport function easeInBack(x: number): number {\n    const c1 = 1.70158;\n    const c3 = c1 + 1;\n    \n    return c3 * x * x * x - c1 * x * x;\n}\n\nexport function easeOutBack(x: number): number {\n    const c1 = 1.70158;\n    const c3 = c1 + 1;\n    \n    return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2);\n}\n\nexport function easeInOutBack(x: number): number {\n    const c1 = 1.70158;\n    const c2 = c1 * 1.525;\n    \n    return x < 0.5\n      ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n      : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n}\n\nexport function easeInElastic(x: number): number {\n    const c4 = (2 * Math.PI) / 3;\n    \n    return x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4);\n}\n\nexport function easeOutElastic(x: number): number {\n    const c4 = (2 * Math.PI) / 3;\n    \n    return x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1;\n}\n\nexport function easeInOutElastic(x: number): number {\n    const c5 = (2 * Math.PI) / 4.5;\n    \n    return x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : x < 0.5\n      ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n      : (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1;\n}\n\nexport function easeInBounce(x: number): number {\n    return 1 - easeOutBounce(1 - x);\n}\n\nexport function easeOutBounce(x: number): number {\n    const n1 = 7.5625;\n    const d1 = 2.75;\n    \n    if (x < 1 / d1) {\n        return n1 * x * x;\n    } else if (x < 2 / d1) {\n        return n1 * (x -= 1.5 / d1) * x + 0.75;\n    } else if (x < 2.5 / d1) {\n        return n1 * (x -= 2.25 / d1) * x + 0.9375;\n    } else {\n        return n1 * (x -= 2.625 / d1) * x + 0.984375;\n    }\n}\n\nexport function easeInOutBounce(x: number): number {\n    return x < 0.5\n      ? (1 - easeOutBounce(1 - 2 * x)) / 2\n      : (1 + easeOutBounce(2 * x - 1)) / 2;\n}\n\n\nexport function linear(x: number): number{\n    return x;\n}\n\n/*\nFunctions taken from https://github.com/ai/easings.net\n\nMaybe a bezier curve editor to generate ease function can be the next project?\n */\n","class t{static addVector(t,n){return null==t.z&&null==n.z?{x:t.x+n.x,y:t.y+n.y}:(null!=t.z&&null!=n.z||(null==t.z&&(t.z=0),null==n.z&&(n.z=0)),{x:t.x+n.x,y:t.y+n.y,z:t.z+n.z})}static subVector(t,n){return null==t.z&&null==n.z?{x:t.x-n.x,y:t.y-n.y}:(null!=t.z&&null!=n.z||(null==t.z&&(t.z=0),null==n.z&&(n.z=0)),{x:t.x-n.x,y:t.y-n.y,z:t.z-n.z})}static multiplyVectorByScalar(t,n){return null==t.z?{x:t.x*n,y:t.y*n}:{x:t.x*n,y:t.y*n,z:t.z*n}}static divideVectorByScalar(t,n){return 0==n?{x:t.x,y:t.y}:null==t.z?{x:t.x/n,y:t.y/n}:{x:t.x/n,y:t.y/n,z:t.z/n}}static magnitude(t){return null==t.z&&(t.z=0),Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)}static unitVector(t){return null==t.z&&(t.z=0),0!=this.magnitude(t)?{x:t.x/this.magnitude(t),y:t.y/this.magnitude(t),z:t.z/this.magnitude(t)}:{x:0,y:0,z:0}}static dotProduct(t,n){return null==t.z&&null==n.z?t.x*n.x+t.y*n.y:(null!=t.z&&null!=n.z||(null==t.z&&(t.z=0),null==n.z&&(n.z=0)),t.x*n.x+t.y*n.y+t.z*n.z)}static crossProduct(t,n){return null!=t.z&&null!=n.z||(null==t.z&&(t.z=0),null==n.z&&(n.z=0)),{x:t.y*n.z-t.z*n.y,y:t.z*n.x-t.x*n.z,z:t.x*n.y-t.y*n.x}}static unitVectorFromA2B(t,n){return this.unitVector(this.subVector(n,t))}static rotatePoint(t,n){return{x:t.x*Math.cos(n)-t.y*Math.sin(n),y:t.x*Math.sin(n)+t.y*Math.cos(n)}}static transform2NewAxis(t,n){return{x:t.x*Math.cos(n)+t.y*Math.sin(n),y:-t.x*Math.sin(n)+t.y*Math.cos(n)}}static angleFromA2B(t,n){return Math.atan2(t.x*n.y-t.y*n.x,t.x*n.x+t.y*n.y)}static transformPointWRTAnchor(t,n,l){let z=this.rotatePoint(this.subVector(t,n),l);return this.addVector(z,n)}static distanceBetweenPoints(t,n){return this.magnitude(this.subVector(t,n))}static flipYAxis(t){return{x:t.x,y:-t.y,z:t.z}}static linearInterpolation(t,n,l){return null==t.z||null==n.z?{x:t.x+(n.x-t.x)*l,y:t.y+(n.y-t.y)*l}:{x:t.x+(n.x-t.x)*l,y:t.y+(n.y-t.y)*l,z:t.z+(n.z-t.z)*l}}}export{t as PointCal};\n//# sourceMappingURL=index.js.map\n","import { PointCal, Point } from \"point2point\";\nimport { Keyframe } from \"../composite-animation\";\nimport { EasingFunctions } from \"src\";\n\nexport interface AnimatableAttributeHelper<T> {\n    lerp(ratio: number, start: Keyframe<T>, end: Keyframe<T>): T;\n}\n\nexport class PointAnimationHelper implements AnimatableAttributeHelper<Point> {\n\n    constructor(){\n\n    }\n\n    lerp(ratio: number, start: Keyframe<Point>, end: Keyframe<Point>): Point {\n        const inbetweenRatio = (ratio - start.percentage) / (end.percentage - start.percentage);\n        let transformed = inbetweenRatio;\n        if(start.easingFn){\n            transformed = start.easingFn(inbetweenRatio);\n        }\n        const res = PointCal.addVector(start.value, PointCal.multiplyVectorByScalar(PointCal.subVector(end.value, start.value), transformed));\n        return res;\n    }\n\n}\n\nexport class NumberAnimationHelper implements AnimatableAttributeHelper<number>{\n\n    constructor(){\n\n    }\n\n    lerp(ratio: number, start: Keyframe<number>, end: Keyframe<number>): number {\n        const inbetweenRatio = (ratio - start.percentage) / (end.percentage - start.percentage);\n        let transformed = inbetweenRatio;\n        if(start.easingFn){\n            transformed = start.easingFn(inbetweenRatio);\n        }\n        const res = start.value + transformed * (end.value - start.value);\n        return res;\n    }\n}\n\nexport class StringAnimationHelper implements AnimatableAttributeHelper<string>{\n    constructor(){\n\n    }\n    \n    lerp(ratio: number, start: Keyframe<string>, end: Keyframe<string>): string {\n        const percentageScale = (ratio - start.percentage) / (end.percentage - start.percentage)\n        // if percentageScale is negative that means it's before the start value just return start value \n        // if percentageScale is more than 1 that means it's after the end value just return the end value\n        // if percentageScale is less than 0.5 return the start value else return the end value\n        return percentageScale < 0 || percentageScale < 0.5 ? start.value : end.value;\n    }\n}\n\nexport class IntegerAnimationHelper implements AnimatableAttributeHelper<number>{\n    constructor(){\n\n    }\n\n    lerp(ratio: number, start: Keyframe<number>, end: Keyframe<number>): number {\n        const percentageScale = (ratio - start.percentage) / (end.percentage - start.percentage)\n        // if percentageScale is negative that means it's before the start value just return start value \n        // if percentageScale is more than 1 that means it's after the end value just return the end value\n        // if percentageScale is less than 0.5 return the start value else return the end value\n        return percentageScale < 0 || percentageScale < 0.5 ? start.value : end.value;\n    }\n}\n\nexport type RGB = {r: number, g: number, b: number};\n\nexport class RGBAnimationHelper implements AnimatableAttributeHelper<RGB> {\n    constructor(){\n\n    }\n\n    lerp(ratio: number, start: Keyframe<RGB>, end: Keyframe<RGB>): RGB {\n        const res = {\n            r: start.value.r + ((ratio - start.percentage) / (end.percentage - start.percentage)) * (end.value.r - start.value.r),\n            g: start.value.g + ((ratio - start.percentage) / (end.percentage - start.percentage)) * (end.value.g - start.value.g),\n            b: start.value.b + ((ratio - start.percentage) / (end.percentage - start.percentage)) * (end.value.b - start.value.b),\n        }\n        return res;\n    }\n}\n","import { AnimatableAttributeHelper } from \"../animatable-attribute\";\nimport * as easeFunctions from \"../ease-functions\";\n\nexport interface Animator{\n    loops: boolean;\n    duration: number;\n    delay: number;\n    drag: number;\n    nonCascadingDuration(newDuration: number): void;\n    startAnimation(): void;\n    stopAnimation(): void;\n    pauseAnimation(): void;\n    resumeAnimation(): void;\n    animate(deltaTime: number): void;\n    setUp(): void;\n    resetAnimationState(): void;\n    tearDown(): void;\n    setParent(parent: AnimatorContainer): void;\n    detachParent(): void;\n    toggleReverse(reverse: boolean): void;\n    onEnd(callback: Function): UnSubscribe;\n    onStart(callback: Function): UnSubscribe;\n    clearOnStart(): void;\n    clearOnEnd(): void;\n    playing: boolean;\n}\n\nexport type UnSubscribe = () => void;\n\nexport interface AnimatorContainer {\n    updateDuration(): void;\n    checkCyclicChildren(): boolean;\n    containsAnimation(animationInInterest: Animator): boolean;\n}\n\nexport class CompositeAnimation implements Animator, AnimatorContainer{\n\n    private animations: Map<string, {animator: Animator, startTime?: number}>;\n    private localTime: number;\n    private _duration: number;\n    private onGoing: boolean;\n    private loop: boolean;\n    private playedTime: number;\n    private setUpFn: Function;\n    private tearDownFn: Function;\n    private _dragTime: number;\n    private _delayTime: number;\n    private parent: AnimatorContainer | undefined;\n\n    private endCallbacks: Function[] = [];\n    private startCallbacks: Function[] = [];\n\n    private reverse: boolean;\n\n    constructor(animations: Map<string, {animator: Animator, startTime?: number}> = new Map(), loop: boolean = false, parent: AnimatorContainer | undefined = undefined, setupFn: Function = ()=>{}, tearDownFn: Function = ()=>{}){\n        this.animations = animations;\n        this._duration = 0;\n        this.calculateDuration();\n        this.localTime = -1;\n        this.onGoing = false;\n        this.loop = loop;\n        this.setUpFn = setupFn;\n        this.tearDownFn = tearDownFn;\n        this._delayTime = 0;\n        this._dragTime = 0;\n        this.parent = parent;\n        this.animations.forEach((animation) => {\n            animation.animator.setParent(this);\n        });\n        this.reverse = false;\n        this.playedTime = 0;\n    }\n\n    toggleReverse(reverse: boolean){\n        if(this.reverse == reverse){\n            return;\n        }\n        this.reverse = reverse;\n        this.animations.forEach((animation) => {\n            animation.animator.toggleReverse(reverse);\n        });\n    }\n    \n    setParent(parent: AnimatorContainer){\n        this.parent = parent;\n    }\n\n    detachParent(){\n        this.parent = undefined;\n    }\n\n    animate(deltaTime: number): void {\n        if(!this.onGoing || this.localTime > this._duration + this._delayTime + this._dragTime || this.localTime < 0 || this.animations.size == 0){\n            return;\n        }\n        this.localTime += deltaTime;\n        if (this.localTime - deltaTime <= 0 && deltaTime > 0){\n            // console.log(\"composite animation start\");\n            this.startCallbacks.forEach((callback) => {\n                queueMicrotask(()=>{callback()});\n            });\n        }\n        this.animateChildren(deltaTime);\n        this.checkTerminalAndLoop();\n    }\n\n    checkTerminalAndLoop(){\n        if(this.localTime >= this._duration + this._delayTime + this._dragTime){\n            // console.log(\"composite animation end\");\n            this.playedTime += 1;\n            this.onGoing = false;\n            this.endCallbacks.forEach((callback) => {\n                queueMicrotask(()=>{callback()});\n            });\n        }\n        // if loop is true, then prepare to start the animations again\n        if(this.localTime >= this._duration + this._delayTime + this._dragTime && this.loop){\n            this.localTime = 0;\n            this.onGoing = true;\n            this.animations.forEach((animation) => {\n                if(animation.animator.loops){\n                    animation.animator.startAnimation();\n                }\n            });\n        }\n    }\n\n    animateChildren(deltaTime: number){\n        const prevLocalTime = this.localTime - deltaTime;\n        if(this.localTime < this._delayTime){\n            return;\n        }\n        this.animations.forEach((animation, name: string) => {\n            if(animation.startTime == undefined){\n                animation.startTime = 0;\n            }\n            if(!this.childShouldAnimate(animation, prevLocalTime)){\n                this.wrapUpAnimator({animator: animation.animator, startTime: animation.startTime, name: name}, prevLocalTime);\n                return;\n            }\n            if(prevLocalTime - this._delayTime < animation.startTime){\n                animation.animator.animate(this.localTime - this._delayTime - animation.startTime);\n            } else {\n                animation.animator.animate(deltaTime);\n            }\n        });\n    }\n\n    childShouldAnimate(animation: {animator: Animator, startTime?: number}, prevLocalTime: number): boolean{\n        if(animation.startTime == undefined){\n            animation.startTime = 0;\n        }\n        if(this.localTime - this._delayTime >= animation.startTime && this.localTime - this._delayTime <= animation.startTime + animation.animator.duration){\n            return true;\n        }\n        return false;\n    }\n\n    wrapUpAnimator(animation: {animator: Animator, startTime?: number, name: string}, prevLocalTime: number){\n        if(animation.startTime == undefined){\n            animation.startTime = 0;\n        }\n        if(this.localTime - this._delayTime > animation.startTime + animation.animator.duration && prevLocalTime - this._delayTime < animation.startTime + animation.animator.duration){\n            // console.log(\"wrap up\", animation.name);\n            // console.log(\"time remaining\", animation.startTime + animation.animator.duration - (prevLocalTime - this._delayTime));\n            \n            animation.animator.animate(animation.startTime + animation.animator.duration - (prevLocalTime - this._delayTime));\n        }\n    }\n\n    pauseAnimation(): void {\n        this.onGoing = false;\n        this.animations.forEach((animation) => {\n            animation.animator.pauseAnimation();\n        });\n    }\n\n    resumeAnimation(): void {\n        this.onGoing = true;\n        this.animations.forEach((animation) => {\n            animation.animator.resumeAnimation();\n        });\n    }\n\n    startAnimation(): void {\n        this.onGoing = true;\n        this.setUp();\n        this.localTime = 0;\n        this.animations.forEach((animation) => {\n            animation.animator.startAnimation();\n        });\n    }\n\n    stopAnimation(): void {\n        this.onGoing = false;\n        this.localTime = this._duration + 0.1;\n        this.animations.forEach((animation) => {\n            animation.animator.stopAnimation();\n        });\n        this.tearDown();\n    }\n\n    get duration(): number {\n        return this._duration + this._delayTime + this._dragTime;\n    }\n\n    set duration(duration: number) {\n        if(duration < 0){\n            return;\n        }\n        const originalDuration = this._duration + this._delayTime + this._dragTime;\n        const scale = duration / originalDuration;\n        const newDelayTime = this._delayTime * scale;\n        const newDragTime = this._dragTime * scale;\n        this._delayTime = newDelayTime;\n        this._dragTime = newDragTime;\n        this.animations.forEach((animation)=>{\n            if(animation.startTime == undefined){\n                animation.startTime = 0;\n            }\n            animation.startTime *= scale;\n            const newDuration = animation.animator.duration * scale;\n            animation.animator.nonCascadingDuration(newDuration);\n        });\n        this.calculateDuration();\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    nonCascadingDuration(newDuration: number): void {\n        if(newDuration < 0){\n            return;\n        }\n        const originalDuration = this._duration + this._delayTime + this._dragTime;\n        const scale = newDuration / originalDuration;\n        const newDelayTime = this._delayTime * scale;\n        const newDragTime = this._dragTime * scale;\n        this._delayTime = newDelayTime;\n        this._dragTime = newDragTime;\n        this.animations.forEach((animation)=>{\n            if(animation.startTime == undefined){\n                animation.startTime = 0;\n            }\n            animation.startTime *= scale;\n            const newDuration = animation.animator.duration * scale;\n            animation.animator.nonCascadingDuration(newDuration);\n        });\n        this.calculateDuration();\n    }\n\n    resetAnimationState(): void {\n        this.onGoing = false;\n        this.animations.forEach((animation) => {\n            animation.animator.resetAnimationState();\n        });\n    }\n\n    getTrueDuration(): number{\n        return this._duration;\n    }\n\n    setUp(): void {\n        this.setUpFn();\n        this.animations.forEach((animation) => {\n            animation.animator.setUp();\n        });\n    }\n\n    tearDown(): void {\n        this.tearDownFn();\n        this.animations.forEach((animation) => {\n            animation.animator.tearDown();\n        }); \n    }\n\n    addAnimation(name: string, animation: Animator, startTime: number = 0, endCallback: Function = ()=>{}){\n        if(this.animations.has(name)){\n            return;\n        }\n        if(this.parent !== undefined && this.parent.containsAnimation(animation)){\n            return;\n        }\n        this.animations.set(name, {animator: animation, startTime: startTime});\n        animation.setParent(this);\n        if(this.localTime > startTime){\n            animation.animate(this.localTime - startTime);\n        }\n        const endTime = startTime + animation.duration;\n        this._duration = Math.max(this._duration, endTime);\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    addAnimationAfter(name: string, animation: Animator, afterName: string, delay: number = 0){\n        let afterAnimation = this.animations.get(afterName);\n        if(afterAnimation == undefined){\n            return;\n        }\n        if(afterAnimation.startTime == undefined){\n            afterAnimation.startTime = 0;\n        }\n        let startTime = afterAnimation.startTime + afterAnimation.animator.duration;\n        startTime += delay;\n        this.addAnimation(name, animation, startTime);\n        this.calculateDuration();\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    addAnimationAdmist(name: string, animation: Animator, admistName: string, delay: number){\n        let admistAnimation = this.animations.get(admistName);\n        if(admistAnimation == undefined){\n            return;\n        }\n        if(admistAnimation.startTime == undefined){\n            admistAnimation.startTime = 0;\n        }\n        let startTime = admistAnimation.startTime + delay;\n        this.addAnimation(name, animation, startTime);\n        this.calculateDuration();\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    addAnimationBefore(name: string, animation: Animator, beforeName: string, aheadTime: number = 0){\n        let beforeAnimation = this.animations.get(beforeName);\n        if(beforeAnimation == undefined){\n            return;\n        }\n        if(beforeAnimation.startTime == undefined){\n            beforeAnimation.startTime = 0;\n        }\n        let startTime = beforeAnimation.startTime;\n        startTime -= aheadTime;\n        this.addAnimation(name, animation, startTime);\n        if (startTime < 0){\n            const pushOver = 0 - startTime;\n            this.animations.forEach((animation) => {\n                if(animation.startTime == undefined){\n                    animation.startTime = 0;\n                }\n                animation.startTime += pushOver;\n            });\n        }\n        this.calculateDuration();\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    removeAnimation(name: string){\n        let animation = this.animations.get(name);\n        let deleted = this.animations.delete(name);\n        if(deleted){\n            if(animation != undefined){\n                animation.animator.detachParent();\n            }\n            this.calculateDuration();\n            if(this.parent != undefined){\n                this.parent.updateDuration();\n            }\n        }\n    }\n\n    set delay(delayTime: number){\n        this._delayTime = delayTime;\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    get delay(): number{\n        return this._delayTime;\n    }\n\n    set drag(dragTime: number){\n        this._dragTime = dragTime;\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    get drag(): number {\n        return this._dragTime;\n    }\n\n    removeDelay(){\n        this._delayTime = 0;\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    removeDrag(){\n        this._dragTime = 0;\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    updateDuration(): void {\n        if(this.checkCyclicChildren()){\n            return;\n        }\n        this.calculateDuration();\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    calculateDuration(){\n        this._duration = 0;\n        this.animations.forEach((animation)=>{\n            if(animation.startTime == undefined){\n                animation.startTime = 0;\n            }\n            const endTime = animation.startTime + animation.animator.duration;\n            this._duration = Math.max(this._duration, endTime);\n        });\n    }\n    \n    get loops(): boolean {\n        return this.loop;\n    }\n\n    set loops(loop: boolean) {\n        this.loop = loop;\n    }\n\n    checkCyclicChildren(): boolean {\n        const allChildren: Animator[] = [];\n        allChildren.push(this);\n        const visited = new Set<Animator>();\n        while(allChildren.length > 0){\n            const current = allChildren.pop();\n            if(current == undefined){\n                continue;\n            }\n            if(visited.has(current)){\n                return true;\n            }\n            visited.add(current);\n            if(current instanceof CompositeAnimation){\n                current.animations.forEach((animation) => {\n                    allChildren.push(animation.animator);\n                });\n            }\n        }\n        return false;\n    }\n\n    forceToggleLoop(loop: boolean){\n        this.loop = true;\n        this.animations.forEach((animation) => {\n            animation.animator.loops = true;\n        });\n    }\n\n    containsAnimation(animationInInterest: Animator): boolean {\n        if(this.parent !== undefined){\n            return this.parent.containsAnimation(animationInInterest);\n        }\n        const allChildren: Animator[] = [];\n        allChildren.push(this);\n        const visited = new Set<Animator>();\n        while(allChildren.length > 0){\n            const current = allChildren.pop();\n            if(current == undefined){\n                continue;\n            }\n            if(current == animationInInterest){\n                return true;\n            }\n            if(visited.has(current)){\n                continue;\n            }\n            visited.add(current);\n            if(current instanceof CompositeAnimation){\n                current.animations.forEach((animation) => {\n                    allChildren.push(animation.animator);\n                });\n            }\n        }\n        return false;\n    }\n\n    onEnd(callback: Function): UnSubscribe{\n        this.endCallbacks.push(callback);\n        return ()=>{\n            this.endCallbacks = this.endCallbacks.filter((cb) => cb != callback);\n        }\n    }\n\n    onStart(callback: Function): UnSubscribe{\n        this.startCallbacks.push(callback);\n        return ()=>{\n            this.startCallbacks = this.startCallbacks.filter((cb) => cb != callback);\n        }\n    }\n\n    clearOnEnd(): void {\n        this.endCallbacks = [];\n    }\n\n    clearOnStart(): void {\n        this.startCallbacks = [];\n    }\n\n    get playing(): boolean {\n        return this.onGoing;\n    }\n}\n\nexport class Animation<T> implements Animator{\n\n    private localTime: number; // local time starting from 0 up til duration\n    private _duration: number;\n    private keyframes: Keyframe<T>[];\n    private animatableAttributeHelper: AnimatableAttributeHelper<T>;\n    private applyAnimationValue: (value: T) => void;\n    private easeFn: (percentage: number) => number;\n    private onGoing: boolean;\n    private currentKeyframeIndex: number;\n    private loop: boolean;\n    private playedTime: number;\n    private setUpFn: Function;\n    private tearDownFn: Function;\n    private parent: AnimatorContainer | undefined;\n    private delayTime: number = 0;\n    private dragTime: number = 0;\n\n    private reverse: boolean = false;\n    private endCallbacks: Function[] = [];\n    private startCallbacks: Function[] = [];\n    private startAfterDelayCallbacks: Function[] = [];\n\n    private zeroPercentageValue: T;\n\n    constructor(keyFrames: Keyframe<T>[], applyAnimationValue: (value: T) => void, animatableAttributeHelper: AnimatableAttributeHelper<T>, duration: number = 1000, loop: boolean = false, parent: AnimatorContainer | undefined = undefined, setUpFn: Function = ()=>{}, tearDownFn: Function = ()=>{}, easeFn: (percentage: number) => number = easeFunctions.linear){\n        this._duration = duration;\n        this.keyframes = keyFrames;\n        this.animatableAttributeHelper = animatableAttributeHelper;\n        this.applyAnimationValue = applyAnimationValue;\n        this.easeFn = easeFn;\n        this.onGoing = false;\n        this.localTime = duration + 0.1;\n        this.currentKeyframeIndex = 0;\n        this.loop = loop;\n        this.setUpFn = setUpFn;\n        this.tearDownFn = tearDownFn;\n        this.parent = parent;\n        this.playedTime = 0;\n        this.zeroPercentageValue = this.findValue(0, keyFrames, animatableAttributeHelper);\n    }\n\n    toggleReverse(reverse: boolean){\n        this.reverse = reverse;\n    }\n\n    startAnimation(){\n        this.localTime = 0;\n        this.currentKeyframeIndex = 0;\n        this.onGoing = true;\n        this.applyAnimationValue(this.zeroPercentageValue);\n        this.setUp();\n    }\n\n    stopAnimation(){\n        this.onGoing = false;\n        this.localTime = this._duration + this.dragTime + this.delayTime + 0.1;\n        this.tearDown();\n    }\n\n    pauseAnimation(): void {\n        this.onGoing = false;\n    }\n\n    resumeAnimation(): void {\n        this.onGoing = true;\n    }\n\n    get playing(): boolean {\n        return this.onGoing;\n    }\n\n    animate(deltaTime: number){\n        if(this.onGoing != true || this.localTime < 0) {\n            return;\n        }\n        this.localTime += deltaTime;\n        // console.log(\"--------------------\");\n        // console.log(\"local time\", this.localTime);\n        // console.log(\"delta time\", deltaTime);\n        if(this.localTime - deltaTime <= 0 && deltaTime > 0){\n            // console.log(\"--------------------\");\n            // console.log(\"current localtime\", this.localTime);\n            // console.log(\"current delta time\", deltaTime);\n            // console.log(\"previous local time\", this.localTime - deltaTime);\n            // console.log(\"animation start\");\n            // console.log(`the animation has been played ${this.playedTime} times`);\n            // console.log(`the animation is now playing for the ${this.playedTime + 1} time`);\n            this.startCallbacks.forEach((callback) => {\n                queueMicrotask(()=>{callback()});\n            });\n        }\n        if(this.localTime >= this.delayTime && (this.localTime <= this.delayTime + this._duration + this.dragTime || this.localTime - deltaTime <= this.delayTime + this._duration + this.dragTime)){\n            // console.log(\"local time\", this.localTime);\n            // console.log(\"duration\", this.duration);\n            // console.log(\"local time would trigger end\", this.localTime >= this._duration + this.delayTime + this.dragTime);\n            // console.log(\"delta time\", deltaTime);\n            if(this.localTime - deltaTime <= this.delayTime && this.delayTime !== 0 && deltaTime > 0){\n                this.startAfterDelayCallbacks.forEach((callback) => {\n                    queueMicrotask(()=>{callback()});\n                });\n            }\n            let localTimePercentage = (this.localTime - this.delayTime) / (this._duration);\n            let targetPercentage = this.easeFn(localTimePercentage);\n            if (localTimePercentage > 1){\n                targetPercentage = this.easeFn(1);\n            }\n            let value: T;\n            // console.log(\"currentKeyframeIndex\", this.currentKeyframeIndex, \"length\", this.keyFrames.length);\n            if(this.currentKeyframeIndex < this.keyframes.length && this.currentKeyframeIndex >= 0 && (this.reverse ? 1 - this.keyframes[this.currentKeyframeIndex].percentage == targetPercentage : this.keyframes[this.currentKeyframeIndex].percentage == targetPercentage) ){\n                value = this.keyframes[this.currentKeyframeIndex].value;\n            } else {\n                value = this.findValue(targetPercentage, this.keyframes, this.animatableAttributeHelper);\n            }\n            if(this.reverse){\n                while(this.currentKeyframeIndex >= 0 && 1 - this.keyframes[this.currentKeyframeIndex].percentage <= targetPercentage){\n                    this.currentKeyframeIndex -= 1;\n                }\n            } else {\n                while(this.currentKeyframeIndex < this.keyframes.length && this.keyframes[this.currentKeyframeIndex].percentage <= targetPercentage){\n                    this.currentKeyframeIndex += 1;\n                }\n            }\n            this.applyAnimationValue(value);\n            if(this.localTime >= this._duration + this.dragTime + this.delayTime){\n                // console.log(\"animation should end\");\n                this.playedTime += 1;\n                this.endCallbacks.forEach((callback) => {\n                    queueMicrotask(()=>{callback()});\n                });\n                this.onGoing = false;\n            }\n            if((this.localTime >= this._duration + this.delayTime + this.dragTime) && this.loop){\n                // this.startAnimation();\n                this.localTime = 0;\n                this.onGoing = true;\n                this.currentKeyframeIndex = 0;\n            }\n        }\n    }\n\n    findValue(valuePercentage: number, keyframes: Keyframe<T>[], animatableAttributeHelper: AnimatableAttributeHelper<T>): T{\n        if(valuePercentage > 1){\n            if(this.reverse){\n                return animatableAttributeHelper.lerp(valuePercentage, keyframes[1], keyframes[0]);\n            }\n            return animatableAttributeHelper.lerp(valuePercentage, keyframes[keyframes.length - 2], keyframes[keyframes.length - 1]);\n        }\n        if(valuePercentage < 0){\n            if(this.reverse){\n                return animatableAttributeHelper.lerp(valuePercentage, keyframes[keyframes.length - 2], keyframes[keyframes.length - 1]);\n            }\n            return animatableAttributeHelper.lerp(valuePercentage, keyframes[1], keyframes[0]);\n        }\n        let left = 0;\n        let right = keyframes.length - 1;\n        while (left <= right) {\n            let mid = left + Math.floor((right - left) / 2);\n            const midPercentage = this.reverse ? 1 - keyframes[mid].percentage : keyframes[mid].percentage;\n            if(midPercentage == valuePercentage) {\n                return keyframes[mid].value;\n            } else if(midPercentage < valuePercentage){\n                if(this.reverse){\n                    right = mid - 1;\n                } else {\n                    left = mid + 1;\n                }\n            } else {\n                if(this.reverse){\n                    left = mid + 1;\n                } else {\n                    right = mid - 1;\n                }\n            }\n        }\n        if(left > keyframes.length - 1){\n            // excceding the keyframes\n            left = keyframes.length - 1;\n        }\n        const interpolateStartFrame = this.reverse ? {percentage: 1 - keyframes[left].percentage, value: keyframes[left].value} : keyframes[left - 1];\n        const interplateEndFrame = this.reverse ? {percentage: 1 - keyframes[left - 1].percentage, value: keyframes[left - 1].value} : keyframes[left];\n        // return animatableAttributeHelper.lerp(valuePercentage, keyframes[left - 1], keyframes[left]);\n        return animatableAttributeHelper.lerp(valuePercentage, interpolateStartFrame, interplateEndFrame);\n    }\n\n    setUp(): void {\n        // this.applyAnimationValue(this.keyframes[0].value);\n        this.setUpFn();\n    }\n\n    tearDown(): void {\n        this.tearDownFn(); \n    }\n\n    get loops(): boolean {\n        return this.loop;\n    }\n\n    set loops(loop: boolean) {\n        this.loop = loop;\n    }\n\n    get duration(): number {\n        return this._duration + this.delayTime + this.dragTime;\n    }\n\n    set duration(duration: number) {\n        if(duration < 0){\n            return;\n        }\n        const originalDuration = this._duration + this.delayTime + this.dragTime;\n        const scale = duration / originalDuration;\n        const newDelayTime = this.delayTime * scale;\n        const newDragTime = this.dragTime * scale;\n        this.delayTime = newDelayTime;\n        this.dragTime = newDragTime;\n        this._duration = this._duration * scale;\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    nonCascadingDuration(newDuration: number): void {\n        if(newDuration < 0){\n            return;\n        }\n        const originalDuration = this._duration + this.delayTime + this.dragTime;\n        const scale = newDuration / originalDuration;\n        const newDelayTime = this.delayTime * scale;\n        const newDragTime = this.dragTime * scale;\n        this.delayTime = newDelayTime;\n        this.dragTime = newDragTime;\n        this._duration = newDuration;\n    }\n\n    resetAnimationState(): void {\n        this.onGoing = false;\n        this.applyAnimationValue(this.keyframes[0].value);\n        this.currentKeyframeIndex = 0;\n        this.setUp();\n    }\n\n    wrapUp(): void {\n        this.onGoing = false;\n        this.localTime = this._duration + this.dragTime + this.delayTime + 0.1;\n        this.currentKeyframeIndex = 0;\n    }\n\n    get delay(): number {\n        return this.delayTime;\n    }\n\n    set delay(delayTime: number){\n        this.delayTime = delayTime;\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    get drag(): number {\n        return this.dragTime;\n    }\n\n    set drag(dragTime: number){\n        this.dragTime = dragTime;\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    get trueDuration(): number {\n        return this._duration;\n    }\n\n    set trueDuration(duration: number){\n        this._duration = duration;\n        if(this.parent != undefined){\n            this.parent.updateDuration();\n        }\n    }\n\n    setParent(parent: AnimatorContainer){\n        this.parent = parent;\n    }\n\n    detachParent(): void {\n        this.parent = undefined;\n    }\n\n    set keyFrames(keyFrames: Keyframe<T>[]){\n        this.keyframes = keyFrames;\n    }\n\n    get keyFrames(): Keyframe<T>[]{\n        return this.keyframes;\n    }\n\n    get easeFunction(): (percentage: number) => number {\n        return this.easeFn;\n    }\n\n    set easeFunction(easeFn: (percentage: number) => number){\n        this.easeFn = easeFn;\n    }\n\n    onEnd(callback: Function): UnSubscribe{\n        this.endCallbacks.push(callback);\n        return ()=>{\n            this.endCallbacks = this.endCallbacks.filter((cb) => cb != callback);\n        }\n    }\n\n    onStart(callback: Function): UnSubscribe{\n        this.startCallbacks.push(callback);\n        return ()=>{\n            this.startCallbacks = this.startCallbacks.filter((cb) => cb != callback);\n        }\n    }\n\n    onStartAfterDelay(callback: Function): UnSubscribe{\n        this.startAfterDelayCallbacks.push(callback);\n        return ()=>{\n            this.startAfterDelayCallbacks = this.startAfterDelayCallbacks.filter((cb) => cb != callback);\n        }\n    }\n\n    clearOnEnd(): void {\n        this.endCallbacks = [];\n    }\n\n    clearOnStart(): void {\n        this.startCallbacks = [];\n    }\n}\n\nexport type Keyframe<T> = {\n    percentage: number; // from 0 to 1;\n    value: T;\n    easingFn?: (percentage: number) => number;\n}\n\nexport interface Keyframes<T> {\n    keyframes: Keyframe<T>[];\n    from(value: T): Keyframes<T>;\n    to(value: T): Keyframes<T>;\n    insertAt(percentage: number, value: T): void;\n    clearFrames(): void;\n}\n\nexport class KeyFramesContiner<T> {\n\n    private _keyframes: Keyframe<T>[];\n\n    constructor(){\n        this._keyframes = [];\n    }\n\n    get keyframes(): Keyframe<T>[] {\n        return this._keyframes;\n    }\n\n    from(value: T): Keyframes<T>{\n        if(this._keyframes.length == 0){\n            this._keyframes.push({percentage: 0, value: value});\n        } else {\n            if(this._keyframes[0].percentage == 0){\n                this._keyframes[0].value = value;\n            } else {\n                this._keyframes.unshift({percentage: 0, value: value});\n            }\n        }\n        return this;\n    }\n\n    to(value: T): Keyframes<T>{\n        if(this._keyframes.length == 0){\n            this._keyframes.push({percentage: 1, value: value});\n        } else {\n            if(this._keyframes[this._keyframes.length - 1].percentage == 1){\n                this._keyframes[this._keyframes.length - 1].value = value;\n            } else {\n                this._keyframes.push({percentage: 1, value: value});\n            }\n        }\n        return this;\n    }\n\n    insertAt(percentage: number, value: T): void{\n        this._keyframes.push({percentage: percentage, value: value});\n    }\n\n    clearFrames(): void{\n        this._keyframes = [];\n    }\n}\n","export function easeInSine(x: number): number {\n    return 1 - Math.cos((x * Math.PI) / 2);\n}\n\nexport function easeOutSine(x: number): number {\n    return Math.sin((x * Math.PI) / 2);\n}\n\nexport function easeInOutSine(x: number): number {\n    return -(Math.cos(Math.PI * x) - 1) / 2;\n}\n\nexport function easeInQuad(x: number): number {\n    return x * x;\n}\n\nexport function easeOutQuad(x: number): number {\n    return 1 - (1 - x) * (1 - x);\n}\n\nexport function easeInOutQuad(x: number): number {\n    return x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2;\n}\n\nexport function easeInCubic(x: number): number {\n    return x * x * x;\n}\n\nexport function easeOutCubic(x: number): number {\n    return 1 - Math.pow(1 - x, 3);    \n}\n\nexport function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}\n\nexport function easeInQuart(x: number): number {\n    return x * x * x * x;\n}\n\nexport function easeOutQuart(x: number): number {\n    return 1 - Math.pow(1 - x, 4);\n}\n\nexport function easeInOutQuart(x: number): number {\n    return x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2;\n}\n\nexport function easeInQuint(x: number): number {\n    return x * x * x * x * x;\n}\n\nexport function easeOutQuint(x: number): number {\n    return 1 - Math.pow(1 - x, 5);\n}\n\nexport function easeInOutQuint(x: number): number {\n    return x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2;\n}\n\nexport function easeInExpo(x: number): number {\n    return x === 0 ? 0 : Math.pow(2, 10 * x - 10);\n}\n\nexport function easeOutExpo(x: number): number {\n    return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n}\n\nexport function easeInOutExpo(x: number): number {\n    return x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2\n      : (2 - Math.pow(2, -20 * x + 10)) / 2;\n}\n\nexport function easeInCirc(x: number): number {\n    return 1 - Math.sqrt(1 - Math.pow(x, 2));\n}\n\nexport function easeOutCirc(x: number): number {\n    return Math.sqrt(1 - Math.pow(x - 1, 2));\n}\n\nexport function easeInOutCirc(x: number): number {\n    return x < 0.5\n      ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n      : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n}\n\nexport function easeInBack(x: number): number {\n    const c1 = 1.70158;\n    const c3 = c1 + 1;\n    \n    return c3 * x * x * x - c1 * x * x;\n}\n\nexport function easeOutBack(x: number): number {\n    const c1 = 1.70158;\n    const c3 = c1 + 1;\n    \n    return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2);\n}\n\nexport function easeInOutBack(x: number): number {\n    const c1 = 1.70158;\n    const c2 = c1 * 1.525;\n    \n    return x < 0.5\n      ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n      : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n}\n\nexport function easeInElastic(x: number): number {\n    const c4 = (2 * Math.PI) / 3;\n    \n    return x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4);\n}\n\nexport function easeOutElastic(x: number): number {\n    const c4 = (2 * Math.PI) / 3;\n    \n    return x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1;\n}\n\nexport function easeInOutElastic(x: number): number {\n    const c5 = (2 * Math.PI) / 4.5;\n    \n    return x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : x < 0.5\n      ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n      : (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1;\n}\n\nexport function easeInBounce(x: number): number {\n    return 1 - easeOutBounce(1 - x);\n}\n\nexport function easeOutBounce(x: number): number {\n    const n1 = 7.5625;\n    const d1 = 2.75;\n    \n    if (x < 1 / d1) {\n        return n1 * x * x;\n    } else if (x < 2 / d1) {\n        return n1 * (x -= 1.5 / d1) * x + 0.75;\n    } else if (x < 2.5 / d1) {\n        return n1 * (x -= 2.25 / d1) * x + 0.9375;\n    } else {\n        return n1 * (x -= 2.625 / d1) * x + 0.984375;\n    }\n}\n\nexport function easeInOutBounce(x: number): number {\n    return x < 0.5\n      ? (1 - easeOutBounce(1 - 2 * x)) / 2\n      : (1 + easeOutBounce(2 * x - 1)) / 2;\n}\n\n\nexport function linear(x: number): number{\n    return x;\n}\n\n/*\nFunctions taken from https://github.com/ai/easings.net\n\nMaybe a bezier curve editor to generate ease function can be the next project?\n */","import { BoardCamera, Point } from \"@niuee/board\";\nimport { PanController, ZoomController, RotationController  } from \"@niuee/board/board-camera\";\nimport { PanRig, ZoomRig, RotationRig } from \"@niuee/board\";\nimport { InputControlCenter } from \"@niuee/board/control-center\";\n\n\nexport class InputControlCenterWithAnimation implements InputControlCenter, AnimationControlCenter{\n\n    private _panController: PanController;\n    private _zoomController: ZoomController;\n    private _rotationController: RotationController;\n    private _panState: PanState;\n    private _zoomState: ZoomState;\n    \n    constructor(panController: PanController = new PanRig(), zoomController: ZoomController = new ZoomRig(panController), rotationController: RotationController = new RotationRig()){\n        this._panController = panController;\n        this._zoomController = zoomController;\n        this._rotationController = rotationController;\n        this._panState = new AcceptingPanUserInput(this);\n        this._zoomState = new AcceptingZoomUserInput(this);\n    }\n    \n    notifyPanInput(camera: BoardCamera, diff: Point): void {\n        // pan by\n        this._panState.notifyPanInput(camera, diff);\n    }\n\n    notifyZoomInput(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void {\n        // this._controlCenterState.notifyZoomInput(camera, deltaZoomAmount, anchorPoint);\n        this._zoomState.notifyZoomInput(camera, deltaZoomAmount, anchorPoint);\n    }\n\n    notifyRotationInput(camera: BoardCamera, deltaRotation: number): void {\n        // this._controlCenterState.notifyRotationInput(camera, deltaRotation);\n    }\n\n    notifyPanByTransition(camera: BoardCamera, diff: Point): void {\n        // this._controlCenterState.notifyPanByTransition(camera, diff);\n    }\n\n    notifyPanToTransition(camera: BoardCamera, target: Point): void {\n        this._panState.notifyPanToTransition(camera, target);\n    }\n\n    notifyZoomByAtTransition(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void {\n        // this._controlCenterState.notifyZoomByAtTransition(camera, deltaZoomAmount, anchorPoint);\n        this._zoomState.notifyZoomByAtTransition(camera, deltaZoomAmount, anchorPoint);\n        // this._zoomState.notifyZoomToAtOnTarget(camera, camera.zoomLevel + deltaZoomAmount, anchorPoint);\n    }\n\n    notifyRotationByTransition(camera: BoardCamera, deltaRotation: number): void {\n        // this._controlCenterState.notifyRotationByTransition(camera, deltaRotation);\n    }\n\n    initiatePanTransitioinInput(): void {\n        this._panState = new PanTransitionState(this);\n    }\n\n    userTakeBackPanControl(): void {\n        this._panState = new AcceptingPanUserInput(this);\n    }\n\n    userTakeBackZoomControl(): void {\n        // this._controlCenterState = new AcceptingZoomUserInput(this);\n        this._zoomState = new AcceptingZoomUserInput(this);\n    }\n    \n    get panController(): PanController {\n        return this._panController;\n    }\n\n    get zoomController(): ZoomController {\n        return this._zoomController;\n    }\n\n    get rotationController(): RotationController {\n        return this._rotationController;\n    }\n\n    set panController(panController: PanController) {\n        this._panController = panController;\n    }\n\n    set zoomController(zoomController: ZoomController) {\n        this._zoomController = zoomController;\n    }\n\n    set rotationController(rotationController: RotationController) {\n        this._rotationController = rotationController;\n    }\n}\n\nexport class PanTransitionState implements PanState {\n    private _controlCenter: InputControlCenterWithAnimation;\n\n    constructor(controlCenter: InputControlCenterWithAnimation){\n        this._controlCenter = controlCenter;\n    }\n\n    notifyPanByTransition(camera: BoardCamera, diff: Point): void {\n        this._controlCenter.panController.panCameraBy(camera, diff);\n    }\n\n    notifyPanToTransition(camera: BoardCamera, target: Point): void {\n        this._controlCenter.panController.panCameraTo(camera, target);\n    }\n\n    notifyPanInput(camera: BoardCamera, diff: Point): void {\n        this._controlCenter.userTakeBackPanControl();\n        this._controlCenter.panController.panCameraBy(camera, diff);\n        return;\n    }\n\n    notifyPanToOnTarget(camera: BoardCamera, target: Point): void {\n        return;\n    }\n\n}\n\nexport class AcceptingPanUserInput implements PanState {\n\n    private _controlCenter: InputControlCenterWithAnimation;\n\n    constructor(controlCenter: InputControlCenterWithAnimation){\n        this._controlCenter = controlCenter;\n    }\n\n    notifyPanByTransition(camera: BoardCamera, diff: Point): void {\n        return;\n    }\n\n    notifyPanToTransition(camera: BoardCamera, target: Point): void {\n        return;\n    }\n\n    notifyPanInput(camera: BoardCamera, diff: Point): void {\n        this._controlCenter.panController.panCameraBy(camera, diff);\n    }\n\n    notifyPanToOnTarget(camera: BoardCamera, target: Point): void {\n        return;\n    }\n}\n\nexport class AcceptingZoomUserInput implements ZoomState {\n\n    private _controlCenter: InputControlCenterWithAnimation;\n\n    constructor(controlCenter: InputControlCenterWithAnimation){\n        this._controlCenter = controlCenter;\n    }\n\n    notifyZoomByAtTransition(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void {\n        return;\n    }\n\n    notifyZoomInput(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void {\n        this._controlCenter.zoomController.zoomCameraToAt(camera, camera.zoomLevel + deltaZoomAmount, anchorPoint);\n    }\n\n    notifyZoomToAtOnTarget(camera: BoardCamera, targetZoom: number, anchorPoint: Point): void {\n       return; \n    }\n\n}\n\nexport class ZoomTransistionState implements ZoomState {\n    private _controlCenter: InputControlCenterWithAnimation;\n\n    constructor(controlCenter: InputControlCenterWithAnimation){\n        this._controlCenter = controlCenter;\n    }\n\n    notifyZoomByAtTransition(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void {\n        this._controlCenter.zoomController.zoomCameraByAt(camera, deltaZoomAmount, anchorPoint);\n    }\n\n    notifyZoomInput(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void {\n        this._controlCenter.userTakeBackZoomControl();\n        this._controlCenter.zoomController.zoomCameraByAt(camera, deltaZoomAmount, anchorPoint);\n        return;\n    }\n\n    notifyZoomToAtOnTarget(camera: BoardCamera, targetZoom: number, anchorPoint: Point): void {\n        return;\n    }\n}\n\nexport interface PanState {\n    notifyPanByTransition(camera: BoardCamera, diff: Point): void;\n    notifyPanToTransition(camera: BoardCamera, target: Point): void;\n    notifyPanToOnTarget(camera: BoardCamera, target: Point): void;\n    notifyPanInput(camera: BoardCamera, diff: Point): void;\n}\n\nexport interface ZoomState {\n    notifyZoomByAtTransition(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void;\n    notifyZoomToAtOnTarget(camera: BoardCamera, targetZoom: number, anchorPoint: Point): void;\n    notifyZoomInput(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void;\n}\n\nexport interface RotationState {\n    notifyRotationByIpnut(camera: BoardCamera, deltaRotation: number): void;\n    notifyRotationByTransition(camera: BoardCamera, deltaRotation: number): void;\n    notifyRotationToOnTarget(camera: BoardCamera, targetRotation: number): void;\n}\n\nexport interface UserInputControlCenter {\n    notifyPanInput(camera: BoardCamera, diff: Point): void;\n    notifyZoomInput(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void;\n    notifyRotationInput(camera: BoardCamera, deltaRotation: number): void;\n}\n\nexport interface AnimationControlCenter {\n    notifyPanByTransition(camera: BoardCamera, diff: Point): void;\n    notifyPanToTransition(camera: BoardCamera, target: Point): void;\n    notifyZoomByAtTransition(camera: BoardCamera, deltaZoomAmount: number, anchorPoint: Point): void;\n    notifyRotationByTransition(camera: BoardCamera, deltaRotation: number): void;\n}\n\nexport interface LockedOnObjectControlCenter {\n    notifyPanToOnTarget(camera: BoardCamera, target: Point): void;\n    notifyZoomToAtOnTarget(camera: BoardCamera, targetZoom: number, anchorPoint: Point): void;\n    notifyRotationToOnTarget(camera: BoardCamera, targetRotation: number): void;\n}\n","import Board from \"@niuee/board/boardify\";\nimport { Point } from \"point2point\";\nimport { drawAxis, drawBoundingBox } from \"@niuee/board/boardify/utils\";\nimport {\n  Keyframe,\n  Animation,\n  CompositeAnimation,\n  PointAnimationHelper,\n  NumberAnimationHelper,\n} from \"@niuee/bounce\";\nimport * as EaseFunctions from \"@niuee/bounce/ease-functions\";\nimport { InputControlCenterWithAnimation } from \"./control-center\";\n\nlet element = document.getElementById(\"test-graph\") as HTMLCanvasElement;\nlet board = new Board(element);\n// board.fullScreen = true;\nboard.limitEntireViewPort = true;\nboard.panHandler.restrictTranslation = true;\nconst animationCenter = new InputControlCenterWithAnimation();\nboard.controlCenter = animationCenter;\n\nconst pointKeyframes: Keyframe<Point>[] = [\n  { percentage: 0, value: { x: 0, y: 0 } },\n  { percentage: 1, value: { x: 100, y: 100 } },\n];\nconst extendStickKeyframes: Keyframe<number>[] = [\n  { percentage: 0, value: 0 },\n  { percentage: 1, value: 100 },\n];\nlet stickLength = 0;\n\nconst extendStickAnimation = new Animation<number>(\n  extendStickKeyframes,\n  (value: number) => {\n    stickLength = value;\n  },\n  new NumberAnimationHelper()\n);\nconst cameraAnimation = new Animation<Point>(\n  pointKeyframes,\n  (point: Point) => {\n    animationCenter.notifyPanToTransition(board.camera, point);\n  },\n  new PointAnimationHelper()\n);\ncameraAnimation.easeFunction = EaseFunctions.easeOutSine;\nextendStickAnimation.easeFunction = EaseFunctions.easeInOutQuint;\nconst openingAnimation = new CompositeAnimation();\nopeningAnimation.addAnimation(\"extend stick\", extendStickAnimation, 0);\nboard.camera.setRotation( 45 * Math.PI / 180);\nconst swingStickKeyframes: Keyframe<number>[] = [\n  { percentage: 0, value: -Math.PI / 2, easingFn: EaseFunctions.easeInOutExpo },\n  { percentage: 0.5, value: (Math.PI * 3) / 2, easingFn: EaseFunctions.easeInOutExpo},\n  // { percentage: 1, value: -Math.PI / 2, easingFn: EaseFunctions.easeInOutExpo },\n];\nlet stickAngle = -Math.PI / 2;\nconst swingStickAnimation = new Animation<number>(\n  swingStickKeyframes,\n  (value: number) => {\n    stickAngle = value;\n  },\n  new NumberAnimationHelper()\n);\nswingStickAnimation.onStart(() => {\n  console.log(\"swing stick animation started playing but may have delay\");\n});\nswingStickAnimation.onStartAfterDelay(() => {\n  console.log(\"swing stick animation started playing after delay\");\n});\n// swingStickAnimation.easeFunction = EaseFunctions.easeInOutExpo;\nswingStickAnimation.delay = 0;\nswingStickAnimation.drag = 1000;\nconsole.log(\"swing stick delay\", swingStickAnimation.delay);\nconsole.log(\"swing stick drag\", swingStickAnimation.drag);\nconsole.log(\"swing stick duration\", swingStickAnimation.duration);\nconsole.log(\"swing stick true duration\", swingStickAnimation.trueDuration);\n\nswingStickAnimation.onEnd(() => {\n  console.log(\"swing stick animation completed\");\n});\n// extendStickAnimation.onEnd(()=>{\n//     console.log(\"extend stick animation completed\");\n// });\nextendStickAnimation.duration = 300;\nopeningAnimation.addAnimationAfter(\n  \"swing stick\",\n  swingStickAnimation,\n  \"extend stick\"\n);\nopeningAnimation.onEnd(() => {\n  console.log(\"opening animation completed\");\n  board.panHandler.restrictTranslation = false;\n});\nconsole.log(\"duration of opening animation\", openingAnimation.duration);\nconst compositeAnimation = new CompositeAnimation();\n// extendStickAnimation.loops = true;\n// swingStickAnimation.loops = true;\n// openingAnimation.loops = true;\n\ncompositeAnimation.onEnd(() => {\n  console.log(\"composite animation completed\");\n});\n\n// openingAnimation.toggleReverse(true);\ncompositeAnimation.duration = 1000;\nconst mousePos = { x: 0, y: 0 };\n\nelement.addEventListener(\"pointermove\", (event) => {\n  mousePos.x = event.clientX - element.getBoundingClientRect().left;\n  mousePos.y = event.clientY - element.getBoundingClientRect().top;\n});\n\nelement.addEventListener(\"pointerdown\", (event) => {\n  const clickedPoint = board.convertWindowPoint2WorldCoord({\n    x: event.clientX,\n    y: event.clientY,\n  });\n  console.log(\"clicked point\", clickedPoint);\n  const keyframes: Keyframe<Point>[] = [\n    { percentage: 0, value: { ...board.camera.position } },\n    { percentage: 1, value: clickedPoint },\n  ];\n  animationCenter.initiatePanTransitioinInput();\n  cameraAnimation.keyFrames = keyframes;\n  compositeAnimation.startAnimation();\n  openingAnimation.startAnimation();\n});\n\nlet lastUpdateTime = 0;\nfunction step(timestamp: number) {\n  board.step(timestamp);\n  const deltaTime = (timestamp - lastUpdateTime) / 1000;\n  const deltaTimeMili = timestamp - lastUpdateTime;\n  lastUpdateTime = timestamp;\n  drawAxis(\n    board.context,\n    board.camera.boundaries,\n    board.camera.zoomLevel,\n    board.alignCoordinateSystem\n  );\n\n  const boundingBox = element.getBoundingClientRect();\n  const topLeftCorner = board.convertWindowPoint2WorldCoord({\n    x: boundingBox.left,\n    y: boundingBox.top,\n  });\n  const topRightCorner = board.convertWindowPoint2WorldCoord({\n    x: boundingBox.right,\n    y: boundingBox.top,\n  });\n  const bottomLeftCorner = board.convertWindowPoint2WorldCoord({\n    x: boundingBox.left,\n    y: boundingBox.bottom,\n  });\n  const bottomRightCorner = board.convertWindowPoint2WorldCoord({\n    x: boundingBox.right,\n    y: boundingBox.bottom,\n  });\n  drawBoundingBox(board.context, board.camera.boundaries, false);\n\n  board.context.beginPath();\n  board.context.moveTo(0, 0);\n  const endPoint: Point = {\n    x: stickLength * Math.cos(stickAngle),\n    y: stickLength * Math.sin(stickAngle),\n  };\n  board.context.lineTo(endPoint.x, endPoint.y);\n  board.context.stroke();\n\n  compositeAnimation.animate(deltaTimeMili);\n  openingAnimation.animate(deltaTimeMili);\n  // drawRuler(board.context, topLeftCorner, topRightCorner, bottomLeftCorner, bottomRightCorner, board.alignCoordinateSystem, board.camera.zoomLevel);\n  window.requestAnimationFrame(step);\n}\n\nstep(0);\n\nconst workerA = new Worker(\"webworkerA.js\");\nworkerA.postMessage(\"Hello from main script\");\n\nconst workerB = new Worker(\"webworkerB.js\");\n\nconst channel = new MessageChannel();\nworkerA.postMessage({ port: channel.port1 }, [channel.port1]);\nworkerB.postMessage({ port: channel.port2 }, [channel.port2]);\n\ndocument.addEventListener(\"visibilitychange\", tabSwitchingHandler);\n\n\nfunction tabSwitchingHandler() {\n  if (document.hidden) {\n    console.log(\"Browser tab is hidden\");\n  } else {\n    console.log(\"Browser tab is visible\");\n    lastUpdateTime = Date.now();\n  }\n}\n","import BoardCameraV2, { BoardCamera } from 'src/board-camera';\nimport { halfTranslationHeightOf, halfTranslationWidthOf, boundariesFullyDefined, } from 'src/board-camera/utils/position';\nimport { PanRig, PanController } from 'src/board-camera/pan';\nimport { ZoomRig, ZoomController } from 'src/board-camera/zoom';\nimport { RotationRig } from 'src/board-camera/rotation';\nimport { BoardKMTStrategy, DefaultBoardKMTStrategy } from 'src/kmt-strategy';\nimport { BoardTouchStrategy, DefaultTouchStrategy } from 'src/touch-strategy';\nimport { BoardInputEvent, Point } from 'src/index';\nimport { PointCal } from 'point2point';\n\nimport { CameraEvent, CameraState, UnSubscribe } from 'src/camera-observer';\nimport { minZoomLevelBaseOnDimensions, minZoomLevelBaseOnHeight, minZoomLevelBaseOnWidth, zoomLevelBoundariesShouldUpdate } from 'src/boardify/utils';\nimport { BoardStateObserver } from 'src/boardify/board-state-observer';\nimport { InputObserver, UnsubscribeToInput } from 'src/input-observer';\n\nimport { InputControlCenter, SimpleRelay } from 'src/control-center';\n\n/**\n * @category Board\n * @translationBlock Usage\n * ```typescript\n * import { Board } from \"@niuee/board\";\n * \n * // however you prefer to get a canvas element that is already in the DOM\n * const canvasElement = document.querySelector(\"canvas\") as HTMLCanvasElement;\n * const board = new Board(canvasElement);\n * \n * const stepFn = board.getStepFunction(); \n * const context = board.getContext();\n * \n * function step(timestamp: number){\n *    stepFn(timestamp);\n * // do other stuff after the board has stepped\n * //.\n * //.\n * //.\n * }\n * ```\n * @translationBlock Alternatively you can import the board class as from a subdirectory; this shaves the bundle size a bit but not a lot though. As the board is the overall entry point for the library.\n * \n * ```typescript\n * import {Board} from \"@niuee/board/boardify\";\n * ```\n */\nexport default class Board {\n    \n    private _canvas: HTMLCanvasElement;\n    private _context: CanvasRenderingContext2D;\n\n    private _kmtStrategy: BoardKMTStrategy;\n    private _touchStrategy: BoardTouchStrategy;\n\n    private _alignCoordinateSystem: boolean = true;\n    private _fullScreen: boolean = false;\n\n    private boardStateObserver: BoardStateObserver;\n    private boardInputObserver: InputObserver;\n\n    private lastUpdateTime: number = 0;\n\n    private attributeObserver: MutationObserver;\n    private windowResizeObserver: ResizeObserver;\n    \n    constructor(canvas: HTMLCanvasElement){\n        this._canvas = canvas;\n        this.boardStateObserver = new BoardStateObserver(new BoardCameraV2());\n        this.boardStateObserver.camera.viewPortHeight = canvas.height;\n        this.boardStateObserver.camera.viewPortWidth = canvas.width;\n        this.boardStateObserver.camera.boundaries = {min: {x: -5000, y: -5000}, max: {x: 5000, y: 5000}};\n        let context = canvas.getContext('2d');\n        if(context == null){\n            throw new Error(\"Canvas 2d context is null\");\n        }\n\n        this._context = context;\n\n        let panHandler = new PanRig();\n        let zoomHandler = new ZoomRig(panHandler);\n        let rotationHandler = new RotationRig();\n\n        this.bindFunctions();\n\n        this.attributeObserver = new MutationObserver(this.attributeCallBack);\n        this.attributeObserver.observe(this._canvas, {attributes: true});\n\n        this.windowResizeObserver = new ResizeObserver(this.windowResizeHandler);\n        this.windowResizeObserver.observe(document.body);\n\n        this.boardInputObserver = new InputObserver(new SimpleRelay(panHandler, zoomHandler, rotationHandler));\n\n        this._kmtStrategy = new DefaultBoardKMTStrategy(this._canvas, this.boardStateObserver.camera, this.boardInputObserver);\n        this.boardStateObserver.subscribeToCamera(this._kmtStrategy);\n\n        this._touchStrategy = new DefaultTouchStrategy(this._canvas, this.boardStateObserver.camera, this.boardInputObserver);\n        this.boardStateObserver.subscribeToCamera(this._touchStrategy);\n        this.registerEventListeners();\n    }\n\n    private registerEventListeners(){\n        this._kmtStrategy.setUp();\n        this._touchStrategy.setUp();\n    }\n\n    private removeEventListeners(){\n        this._touchStrategy.tearDown();\n        this._kmtStrategy.tearDown();\n    }\n\n    /**\n     * @group LifeCycle\n     * @translationBlock This function is used to set up the board. It adds all the event listeners and starts the resize observer and the attribute observer.\n     */\n    setup(){\n        this.registerEventListeners();\n        this.windowResizeObserver.observe(document.body);\n        this.attributeObserver.observe(this._canvas, {attributes: true});\n    }\n\n    /**\n     * @group LifeCycle\n     * @translationBlock This function is used to clean up the board. It removes all the event listeners and disconnects the resize observer and the attribute observer. \n     */\n    tearDown(){\n        this.removeEventListeners();\n        this.windowResizeObserver.disconnect();\n        this.attributeObserver.disconnect();\n    }\n\n    private bindFunctions(){\n        this.step = this.step.bind(this);\n        this.attributeCallBack = this.attributeCallBack.bind(this);\n        this.windowResizeHandler = this.windowResizeHandler.bind(this);\n    }\n\n    /**\n     * @translationBlock This is in sync with the canvas width and the camera view port width. This is not the board's width.\n     * If the limitEntireViewPort is set to true, the min zoom level is updated based on the width of the canvas.\n     */\n    set width(width: number){\n        this._canvas.width = width;\n        this.boardStateObserver.camera.viewPortWidth = width;\n        // console.log(\"changed the width of the canvas\");\n        // console.log(\"limit entire view port\", this.boardStateObserver.panHandler.limitEntireViewPort);\n        if(this.boardInputObserver.controlCenter.panController.limitEntireViewPort){\n            // console.log(\"change the min zoom level due to the limit entire view port\");\n            const targetMinZoomLevel = minZoomLevelBaseOnWidth(this.boardStateObserver.camera.boundaries, this._canvas.width, this._canvas.height, this.boardStateObserver.camera.rotation);\n            if(targetMinZoomLevel != undefined && zoomLevelBoundariesShouldUpdate(this.boardStateObserver.camera.zoomBoundaries, targetMinZoomLevel)){\n                // console.log(\"setting min zoom level in width\");\n                this.boardStateObserver.camera.setMinZoomLevel(targetMinZoomLevel);\n            }\n        }\n    }\n\n    get width(): number {\n        return this._canvas.width;\n    }\n\n    /**\n     * @translationBlock This is in sync with the canvas height and the camera view port height. This is not the board's height.\n     * If the limitEntireViewPort is set to true, the min zoom level is updated based on the height.\n     */\n    set height(height: number){\n        this._canvas.height = height;\n        this.boardStateObserver.camera.viewPortHeight = height;\n        if(this.boardInputObserver.controlCenter.panController.limitEntireViewPort){\n            const targetMinZoomLevel = minZoomLevelBaseOnHeight(this.boardStateObserver.camera.boundaries, this._canvas.width, this._canvas.height, this.boardStateObserver.camera.rotation);\n            if(targetMinZoomLevel != undefined && zoomLevelBoundariesShouldUpdate(this.boardStateObserver.camera.zoomBoundaries, targetMinZoomLevel)){\n                this.boardStateObserver.camera.setMinZoomLevel(targetMinZoomLevel);\n            }\n        }\n    }\n\n    get height(): number {\n        return this._canvas.height;\n    }\n\n    /**\n     * @translationBlock This is an attribute that determines if the coordinate system should be aligned with the one of the HTML canvas element. The default is true.\n     */\n    set alignCoordinateSystem(align: boolean){\n        this._alignCoordinateSystem = align;\n        this._kmtStrategy.alignCoordinateSystem = align;\n        this._touchStrategy.alignCoordinateSystem = align;\n    }\n\n    get alignCoordinateSystem(): boolean{\n        return this._alignCoordinateSystem;\n    }\n\n    /**\n     * @translationBlock Determines if the board should be full screen. If this is set to true, the width and height of the board will be set to the window's inner width and inner height respectively.\n     * If set to true the width and height of the board will resize with the window.\n     */\n    get fullScreen(): boolean {\n        return this._fullScreen;\n    }\n\n    set fullScreen(value: boolean) {\n        this._fullScreen = value;\n        if(this._fullScreen){\n            this.width = window.innerWidth;\n            this.height = window.innerHeight;\n        }\n    }\n\n    /**\n     * @translationBlock The context used to draw stuff on the canvas.\n     */\n    get context(): CanvasRenderingContext2D{\n        return this._context;\n    }\n\n    /**\n     * @translationBlock Determines the behavior of the camera when the camera is at the edge of the boundaries. If set to true, the entire view port would not move beyond the boundaries.\n     * If set to false, only the center of the camera is bounded by the boundaries.\n     */\n    set limitEntireViewPort(value: boolean){\n        this.boardInputObserver.controlCenter.panController.limitEntireViewPort = value;\n        if(value){\n            const targetMinZoomLevel = minZoomLevelBaseOnDimensions(this.boardStateObserver.camera.boundaries, this._canvas.width, this._canvas.height, this.boardStateObserver.camera.rotation);\n            if(targetMinZoomLevel != undefined && zoomLevelBoundariesShouldUpdate(this.boardStateObserver.camera.zoomBoundaries, targetMinZoomLevel)){\n                this.boardStateObserver.camera.setMinZoomLevel(targetMinZoomLevel);\n            }\n        }\n    }\n\n    get limitEntireViewPort(): boolean{\n        return this.boardInputObserver.controlCenter.panController.limitEntireViewPort;\n    }\n\n    /**\n     * @translationBlock The strategy used to handle the keyboard, mouse events. The default strategy is the DefaultBoardKMTStrategy. \n     * You can implement your own strategy by implementing the BoardKMTStrategy interface.\n     */\n    set kmtStrategy(strategy: BoardKMTStrategy){\n        this._kmtStrategy.tearDown();\n        this.boardStateObserver.unsubscribeToCamera(this._kmtStrategy);\n        strategy.setUp();\n        this._kmtStrategy = strategy;\n        this.boardStateObserver.subscribeToCamera(this._kmtStrategy);\n        this._kmtStrategy.camera = this.boardStateObserver.camera;\n    }\n\n    get kmtStrategy(): BoardKMTStrategy{\n        return this._kmtStrategy;\n    }\n\n    /**\n     * @translationBlock The strategy used to handle touch events. The default strategy is the DefaultTouchStrategy.\n     * You can implement your own strategy by implementing the BoardTouchStrategy interface.\n     */\n    set touchStrategy(strategy: BoardTouchStrategy){\n        this._touchStrategy.tearDown();\n        this.boardStateObserver.unsubscribeToCamera(this._touchStrategy);\n        strategy.setUp();\n        this._touchStrategy = strategy;\n        this.boardStateObserver.subscribeToCamera(this._touchStrategy);\n        this._touchStrategy.camera = this.boardStateObserver.camera;\n    }\n\n    get touchStrategy(): BoardTouchStrategy{\n        return this._touchStrategy;\n    }\n\n    /**\n     * @translationBlock The underlying camera of the board. The camera of the board can be switched.\n     * The boundaries are based on camera. Meaning you can have camera with different boundaries, and you can switch between them during runtime.\n     */\n    get camera(): BoardCamera{\n        return this.boardStateObserver.camera;\n    }\n\n    set camera(camera: BoardCamera){\n        camera.viewPortHeight = this._canvas.height;\n        camera.viewPortWidth = this._canvas.width;\n        this.boardStateObserver.camera = camera;\n    }\n\n    /**\n     * @translationBlock The pan handler of the board. The pan handler is responsible for handling the pan events issued to the camera.\n     * It has the final say on how the camera should move. Restrictions and clamping behavior are implemented in the pan handler.\n     */\n    set panHandler(handler: PanController){\n        this.boardInputObserver.controlCenter.panController = handler;\n    }\n\n    get panHandler(): PanController{\n        return this.boardInputObserver.controlCenter.panController;\n    }\n\n    /**\n     * @translationBlock The zoom handler of the board. The zoom handler is responsible for handling the zoom events issued to the camera.\n     * It has the final say on how the camera should zoom. Restrictions and clamping behavior are implemented in the zoom handler.\n     */\n    set zoomHandler(handler: ZoomController){\n        this.boardStateObserver.zoomHandler = handler;\n    }\n\n    get zoomHandler(): ZoomController{\n        return this.boardStateObserver.zoomHandler;\n    }\n\n    /**\n     * @translationBlock The control center of the board. The control center is responsible for handling the input events and dispatch the events to the pan, zoom, and rotation handlers.\n     * This exists to decouple the input events from the camera. The control center is the middle man. The default control center is just a simple relay. You can implement a control center\n     * that takes in other inputs. For example, an input to start camera animations.\n     */\n    set controlCenter(controlCenter: InputControlCenter){\n        let tempPanHandler = this.boardInputObserver.controlCenter.panController;\n        let tempZoomHandler = this.boardInputObserver.controlCenter.zoomController;\n        let tempRotationHandler = this.boardInputObserver.controlCenter.rotationController;\n        controlCenter.panController = tempPanHandler;\n        controlCenter.zoomController = tempZoomHandler;\n        controlCenter.rotationController = tempRotationHandler;\n        this.boardInputObserver.controlCenter = controlCenter;\n    }\n\n    get controlCenter(): InputControlCenter{\n        return this.boardInputObserver.controlCenter;\n    }\n\n    /**\n     * @translationBlock This is the step function that is called in the animation frame. This function is responsible for updating the canvas context and the camera state.\n     * @param timestamp \n     */\n    public step(timestamp: number){\n\n        let deltaTime = timestamp - this.lastUpdateTime;\n        this.lastUpdateTime = timestamp;\n        deltaTime = deltaTime / 1000;\n\n        this._context.reset();\n        const curBoundaries = this.boardStateObserver.camera.boundaries;\n        if (!boundariesFullyDefined(curBoundaries)){\n            throw new Error(\"Boundaries are not fully defined; not able to clear the canvas under the current implementation\");\n        }\n        this._context.clearRect(curBoundaries.min.x, -curBoundaries.min.y, curBoundaries.max.x - curBoundaries.min.x, -(curBoundaries.max.y - curBoundaries.min.y));\n\n        this._context.translate( this._canvas.width / 2, this._canvas.height / 2 );\n        this._context.scale(this.boardStateObserver.camera.zoomLevel, this.boardStateObserver.camera.zoomLevel);\n        if (this._alignCoordinateSystem){\n            this._context.rotate(-this.boardStateObserver.camera.rotation);\n            this._context.translate(-this.boardStateObserver.camera.position.x,  -this.boardStateObserver.camera.position.y);\n        } else {\n            this._context.rotate(this.boardStateObserver.camera.rotation);\n            this._context.translate(-this.boardStateObserver.camera.position.x,  this.boardStateObserver.camera.position.y);\n        }\n    }\n\n    private convertWindowPoint2ViewPortPoint(bottomLeftCornerOfCanvas: Point, clickPointInWindow: Point): Point {\n        const res = PointCal.subVector(clickPointInWindow, bottomLeftCornerOfCanvas);\n        if(this._alignCoordinateSystem) {\n            return {x: res.x, y: res.y};\n        } else {\n            return {x: res.x, y: -res.y};\n        }\n    }\n\n    /**\n     * @translationBlock Converts a point from window coordinates to world coordinates.\n     * @param clickPointInWindow The point in window coordinates to convert.\n     * @returns The converted point in world coordinates.\n     */\n    convertWindowPoint2WorldCoord(clickPointInWindow: Point): Point {\n        if(this._alignCoordinateSystem){\n            const pointInCameraViewPort = this.convertWindowPoint2ViewPortPoint({y: this._canvas.getBoundingClientRect().top, x: this._canvas.getBoundingClientRect().left}, clickPointInWindow);\n            return this.boardStateObserver.camera.convertFromViewPort2WorldSpace(pointInCameraViewPort);\n        } else {\n            const pointInCameraViewPort = this.convertWindowPoint2ViewPortPoint({y: this._canvas.getBoundingClientRect().bottom, x: this._canvas.getBoundingClientRect().left}, clickPointInWindow);\n            return this.boardStateObserver.camera.convertFromViewPort2WorldSpace(pointInCameraViewPort);\n        }\n    }\n\n    /**\n     * @translationBlock Add an camera movement event listener. The events are \"pan\", \"zoom\", and \"rotate\".\n     * @param eventName The event name to listen for. The events are \"pan\", \"zoom\", and \"rotate\".\n     * @param callback The callback function to call when the event is triggered. The event provided to the callback is different for the different events.\n     * @returns The converted point in world coordinates.\n     */\n    on<K extends keyof CameraEvent>(eventName: K, callback: (event: CameraEvent[K], cameraState: CameraState)=>void): UnSubscribe {\n        return this.boardStateObserver.camera.on(eventName, callback);\n    }\n\n    /**\n     * @translationBlock Add an input event listener. The events are \"pan\", \"zoom\", and \"rotate\". This is different from the camera event listener as this is for input events. \n     * Input event does not necesarily mean that the camera will move. The input event is the event that is triggered when the user interacts with the board.\n     * @param eventName \n     * @param callback \n     * @returns \n     */\n    onInput<K extends keyof BoardInputEvent>(eventName: K, callback: (event: BoardInputEvent[K])=> void): UnsubscribeToInput {\n        return this.boardInputObserver.onInput(eventName, callback);\n    }\n\n    /**\n     * @translationBlock The max translation height of the camera. This is the maximum distance the camera can move in the vertical direction.\n     */\n    get maxHalfTransHeight(): number | undefined{\n        return halfTranslationHeightOf(this.boardStateObserver.camera.boundaries);\n    }\n\n    /**\n     * @translationBlock The max translation width of the camera. This is the maximum distance the camera can move in the horizontal direction.\n     */\n    get maxHalfTransWidth(): number | undefined{\n        return halfTranslationWidthOf(this.boardStateObserver.camera.boundaries);\n    }\n\n    private attributeCallBack(mutationsList: MutationRecord[], observer: MutationObserver){\n        for(let mutation of mutationsList){\n            if(mutation.type === \"attributes\"){\n                if(mutation.attributeName === \"width\"){\n                    // console.log(\"width changed\");\n                    this.boardStateObserver.camera.viewPortWidth = this._canvas.width;\n                    if(this.limitEntireViewPort){\n                        const targetMinZoomLevel = minZoomLevelBaseOnWidth(this.boardStateObserver.camera.boundaries, this._canvas.width, this._canvas.height, this.boardStateObserver.camera.rotation);\n                        if(zoomLevelBoundariesShouldUpdate(this.boardStateObserver.camera.zoomBoundaries, targetMinZoomLevel)){\n                            this.boardStateObserver.camera.setMinZoomLevel(targetMinZoomLevel);\n                        }\n                    }\n                } else if(mutation.attributeName === \"height\"){\n                    // console.log(\"height changed\");\n                    this.boardStateObserver.camera.viewPortHeight = this._canvas.height;\n                    if(this.limitEntireViewPort){\n                        const targetMinZoomLevel = minZoomLevelBaseOnHeight(this.boardStateObserver.camera.boundaries, this._canvas.width, this._canvas.height, this.boardStateObserver.camera.rotation);\n                        if(zoomLevelBoundariesShouldUpdate(this.boardStateObserver.camera.zoomBoundaries, targetMinZoomLevel)){\n                            this.boardStateObserver.camera.setMinZoomLevel(targetMinZoomLevel);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private windowResizeHandler(){\n        if(this._fullScreen){\n            this.width = window.innerWidth;\n            this.height = window.innerHeight;\n        }\n    }\n\n    setMaxTransWidthAlignedMin(value: number){\n        const curBoundaries = this.boardStateObserver.camera.boundaries;\n        const curMin = curBoundaries == undefined ? undefined: curBoundaries.min;\n        const curHorizontalMin = curMin == undefined ? undefined: curMin.x;\n        if(curHorizontalMin == undefined){\n            this.boardStateObserver.camera.setHorizontalBoundaries(-value, value);\n        } else {\n            this.boardStateObserver.camera.setHorizontalBoundaries(curHorizontalMin, curHorizontalMin + value * 2);\n        }\n        if(this.limitEntireViewPort){\n            const targetMinZoomLevel = minZoomLevelBaseOnWidth(this.boardStateObserver.camera.boundaries, this._canvas.width, this._canvas.height, this.boardStateObserver.camera.rotation);\n            if(zoomLevelBoundariesShouldUpdate(this.boardStateObserver.camera.zoomBoundaries, targetMinZoomLevel)){\n                this.boardStateObserver.camera.setMinZoomLevel(targetMinZoomLevel);\n            }\n        }\n    }\n}\n"],"names":["clampZoomLevel","zoomLevel","zoomLevelLimits","zoomLevelWithinLimits","max","Math","min","PointCal","addVector","a","b","z","x","y","subVector","multiplyVectorByScalar","divideVectorByScalar","magnitude","sqrt","unitVector","this","dotProduct","crossProduct","unitVectorFromA2B","rotatePoint","point","angle","cos","sin","transform2NewAxis","angleFromOriginalAxis2DestAxis","angleFromA2B","atan2","transformPointWRTAnchor","anchor","newPoint","distanceBetweenPoints","flipYAxis","linearInterpolation","t","isEqual","getLineIntersection","startPoint","endPoint","startPoint2","endPoint2","numerator","denominator","intersects","intersection","offset","convert2WorldSpaceWRT","targetPosition","interestPoint","viewPortWidth","viewPortHeight","cameraZoomLevel","cameraRotation","cameraFrameCenter","delta2Point","convert2WorldSpace","cameraPosition","withinBoundaries","boundaries","undefined","leftSide","rightSide","topSide","bottomSide","clampPoint","manipulatePoint","limit","translationWidthOf","translationHeightOf","clampPointEntireViewPort","topLeftCorner","bottomLeftCorner","topRightCorner","bottomRightCorner","topLeftCornerClamped","topRightCornerClamped","bottomLeftCornerClamped","bottomRightCornerClamped","diffs","maxXDiff","abs","maxYDiff","delta","forEach","diff","clampRotation","rotation","rotationLimits","rotationWithinLimits","normalizeAngleZero2TwoPI","angleSpanFromStart","angleSpan","start","angleSpanFromEnd","end","ccw","startAsTieBreaker","PI","from","to","angleDiff","PanHandlerBoilerPlate","constructor","nextHandler","_nextHandler","handler","chainHandler","panCameraTo","camera","destination","panCameraBy","BasePanHandler","super","setPosition","position","ClampHandler","_entireViewPort","entireViewPort","actualDest","actualDelta","PanWithRestriction","_restrictXTranslation","_restrictYTranslation","_restrictRelativeXTranslation","_restrictRelativeYTranslation","restrictXTranslation","restrictYTranslation","restrictRelativeXTranslation","restrictRelativeYTranslation","convertDeltaToComplyWithRestriction","upDirection","value","rightDirection","dest","PanRig","restrictionHandler","restrictTranslation","limitEntireViewPort","clampHandler","baseHandler","RotationHandlerBoilerPlate","rotateCameraTo","targetRotation","rotateCameraBy","BaseRotationHandler","setRotation","curRotation","RotationRestrictionHandler","_restrictRotation","restrictRotation","RotationClampHandler","rotationBoundaries","RotationRig","_restrictionHandler","_baseHandler","_clampHandler","ZoomHandlerBoilerPlate","zoomCameraTo","targetZoom","zoomCameraBy","zoomCameraToAt","at","zoomCameraByAt","BaseZoomHandler","panHandler","setZoomLevel","originalAnchorInWorld","anchorInWorldAfterZoom","ZoomClampHandler","zoomBoundaries","zoomByAt","ZoomRestrictionHandler","_restrictZoom","restrictZoom","ZoomRig","basePanHandler","restrict","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","SuppressedError","CameraObserverV2","panCallbackList","zoomCallbackList","rotateCallbackList","notifyPositionChange","cameraState","queueMicrotask","callback","notifyZoomChange","deltaZoomAmount","notifyRotationChange","deltaRotation","on","eventName","push","filter","cb","clearCallbacks","BoardCameraV2","cameraObserver","_position","_zoomLevel","_rotation","_viewPortHeight","_viewPortWidth","_observer","_boundaries","width","height","observer","_zoomBoundaries","temp","setMaxZoomLevel","maxZoomLevel","setMinZoomLevel","minZoomLevel","curZoom","_rotationBoundaries","convertFromViewPort2WorldSpace","invertFromWorldSpace2ViewPort","setHorizontalBoundaries","setVerticalBoundaries","DefaultBoardKMTStrategy","canvas","inputObserver","debugMode","alignCoordinateSystem","_panDisabled","_zoomDisabled","_rotateDisabled","_keyController","Map","SCROLL_SENSATIVITY","isDragging","_canvas","_camera","_debugMode","_alignCoordinateSystem","bindFunctions","panDisabled","style","cursor","dragStartPoint","zoomDisabled","rotateDisabled","setUp","addEventListener","pointerDownHandler","pointerUpHandler","pointerMoveHandler","scrollHandler","window","keypressHandler","keyupHandler","setupKeyController","tearDown","removeEventListener","bind","keys","key","set","_disabled","pointerType","button","metaKey","get","clientX","clientY","disableStrategy","enableStrategy","target","diffInWorld","notifyOnPan","preventDefault","zoomAmount","deltaY","ctrlKey","cursorPosition","anchorPoint","getBoundingClientRect","left","top","bottom","notifyOnZoom","deltaX","has","updateCamera","disabled","DefaultTouchStrategy","controlCamera","ZOOM_SENSATIVITY","panInputCallBackList","zoomInputCallBackList","touchPoints","zoomStartDist","bindListeners","touchstartHandler","touchendHandler","touchcancelHandler","touchmoveHandler","resetAttributes","tapPoint","targetTouches","length","firstTouchPoint","secondTouchPoint","convertWindowPoint2ViewPortPoint","touchPointDist","distDiff","midPoint","touchPoint","bottomLeftCornerOfCanvas","clickPointInWindow","res","zoomLevelBoundariesShouldUpdate","zoomLevelBoundaries","targetMinZoomLevel","Infinity","minZoomLevelBaseOnWidth","canvasWidth","canvasHeight","widthWidthProjection","widthHeightProjection","minZoomLevelBaseOnHeight","minZoomLevelHeightWidth","minZoomLevelHeightHeight","BoardStateObserver","cameraSubscribers","panHandlerSubscribers","zoomHandlerSubscribers","rotationHandlerSubscribers","subscribeToCamera","subscriber","unsubscribeToCamera","sub","subscribeToPanHandler","unsubscribeToPanHandler","subscribeToZoomHandler","unsubscribeToZoomHandler","subscribeToRotationHandler","notifyCameraChange","_panHandler","notifyPanHandlerChange","zoomHandler","_zoomHandler","notifyZoomHandlerChange","rotationHandler","_rotationHandler","notifyRotationHandlerChange","updatePanHandler","updateZoomHandler","updateRotationHandler","InputObserver","controlCenter","_controlCenter","notifyPanInput","notifyZoomInput","notifyOnRotation","notifyRotationInput","onInput","Error","SimpleRelay","_panController","_zoomController","_rotationController","panController","zoomController","rotationController","boundariesFullyDefined","easeOutBounce","n1","d1","linear","c1","pow","c4","c2","c5","n","l","NumberAnimationHelper","lerp","ratio","inbetweenRatio","percentage","transformed","easingFn","CompositeAnimation","animations","loop","parent","setupFn","tearDownFn","endCallbacks","startCallbacks","_duration","calculateDuration","localTime","onGoing","setUpFn","_delayTime","_dragTime","animation","animator","setParent","reverse","playedTime","toggleReverse","detachParent","animate","deltaTime","size","animateChildren","checkTerminalAndLoop","loops","startAnimation","prevLocalTime","name","startTime","childShouldAnimate","wrapUpAnimator","duration","pauseAnimation","resumeAnimation","stopAnimation","scale","newDelayTime","newDragTime","newDuration","nonCascadingDuration","updateDuration","resetAnimationState","getTrueDuration","addAnimation","endCallback","containsAnimation","endTime","addAnimationAfter","afterName","delay","afterAnimation","addAnimationAdmist","admistName","admistAnimation","addAnimationBefore","beforeName","aheadTime","beforeAnimation","pushOver","removeAnimation","delete","delayTime","drag","dragTime","removeDelay","removeDrag","checkCyclicChildren","allChildren","visited","Set","current","pop","add","forceToggleLoop","animationInInterest","onEnd","onStart","clearOnEnd","clearOnStart","playing","Animation","keyFrames","applyAnimationValue","animatableAttributeHelper","easeFn","easeFunctions.linear","startAfterDelayCallbacks","keyframes","currentKeyframeIndex","zeroPercentageValue","findValue","localTimePercentage","targetPercentage","valuePercentage","right","mid","floor","midPercentage","interpolateStartFrame","interplateEndFrame","wrapUp","trueDuration","easeFunction","onStartAfterDelay","easeInOutExpo","PanTransitionState","notifyPanByTransition","notifyPanToTransition","userTakeBackPanControl","notifyPanToOnTarget","AcceptingPanUserInput","AcceptingZoomUserInput","notifyZoomByAtTransition","notifyZoomToAtOnTarget","document","getElementById","board","_fullScreen","lastUpdateTime","boardStateObserver","context","getContext","_context","attributeObserver","MutationObserver","attributeCallBack","observe","attributes","windowResizeObserver","ResizeObserver","windowResizeHandler","body","boardInputObserver","_kmtStrategy","_touchStrategy","registerEventListeners","removeEventListeners","setup","disconnect","align","fullScreen","innerWidth","innerHeight","minZoomLevelWidthWidth","minZoomLevelWidthHeight","minZoomLevelHeight","minZoomLevelWidth","minZoomLevelBaseOnDimensions","kmtStrategy","strategy","touchStrategy","tempPanHandler","tempZoomHandler","tempRotationHandler","timestamp","reset","curBoundaries","clearRect","translate","rotate","convertWindowPoint2WorldCoord","pointInCameraViewPort","maxHalfTransHeight","translationHeight","maxHalfTransWidth","translationWidth","mutationsList","mutation","type","attributeName","setMaxTransWidthAlignedMin","curMin","curHorizontalMin","animationCenter","_panState","_zoomState","notifyRotationByTransition","initiatePanTransitioinInput","userTakeBackZoomControl","stickLength","extendStickAnimation","cameraAnimation","openingAnimation","swingStickKeyframes","stickAngle","swingStickAnimation","console","log","compositeAnimation","mousePos","event","clickedPoint","deltaTimeMili","curMinX","curMinY","lineWidth","beginPath","strokeStyle","moveTo","lineTo","stroke","boundingBox","roundRect","requestAnimationFrame","workerA","Worker","postMessage","workerB","channel","MessageChannel","port","port1","port2","hidden","Date","now"],"sourceRoot":""}